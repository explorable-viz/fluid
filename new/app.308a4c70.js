// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"hADF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "6.7.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v${npm_package_version%%.*}.js && cp ../d3/dist/d3.min.js d3.v${npm_package_version%%.*}.min.js && git add d3.v${npm_package_version%%.*}.js d3.v${npm_package_version%%.*}.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "3",
  "rollup": "2",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "5",
  "rollup-plugin-terser": "7",
  "tape": "4",
  "tape-await": "0.1"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "2",
  "d3-axis": "2",
  "d3-brush": "2",
  "d3-chord": "2",
  "d3-color": "2",
  "d3-contour": "2",
  "d3-delaunay": "5",
  "d3-dispatch": "2",
  "d3-drag": "2",
  "d3-dsv": "2",
  "d3-ease": "2",
  "d3-fetch": "2",
  "d3-force": "2",
  "d3-format": "2",
  "d3-geo": "2",
  "d3-hierarchy": "2",
  "d3-interpolate": "2",
  "d3-path": "2",
  "d3-polygon": "2",
  "d3-quadtree": "2",
  "d3-random": "2",
  "d3-scale": "3",
  "d3-scale-chromatic": "2",
  "d3-selection": "2",
  "d3-shape": "2",
  "d3-time": "2",
  "d3-time-format": "3",
  "d3-timer": "2",
  "d3-transition": "2",
  "d3-zoom": "2"
};
exports.dependencies = dependencies;
},{}],"5A6F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"raOJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(f) {
  let delta = f;
  let compare = f;

  if (f.length === 1) {
    delta = (d, x) => f(d) - x;

    compare = ascendingComparator(f);
  }

  function left(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;

    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
    }

    return lo;
  }

  function right(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;

    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
    }

    return lo;
  }

  function center(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {
    left,
    center,
    right
  };
}

function ascendingComparator(f) {
  return (d, x) => (0, _ascending.default)(f(d), x);
}
},{"./ascending.js":"5A6F"}],"9fz/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.numbers = numbers;

function _default(x) {
  return x === null ? NaN : +x;
}

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}
},{}],"VX/h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectCenter = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _bisector = _interopRequireDefault(require("./bisector.js"));

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ascendingBisect = (0, _bisector.default)(_ascending.default);
const bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
const bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
const bisectCenter = (0, _bisector.default)(_number.default).center;
exports.bisectCenter = bisectCenter;
var _default = bisectRight;
exports.default = _default;
},{"./ascending.js":"5A6F","./bisector.js":"raOJ","./number.js":"9fz/"}],"1nH3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = count;

function count(values, valueof) {
  let count = 0;

  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }

  return count;
}
},{}],"9JGh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cross;

function length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;

  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;

    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}
},{}],"ReCz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cumsum;

function cumsum(values, valueof) {
  var sum = 0,
      index = 0;
  return Float64Array.from(values, valueof === undefined ? v => sum += +v || 0 : v => sum += +valueof(v, index++, values) || 0);
}
},{}],"wjXp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"IBjk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = variance;

function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;

  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }

  if (count > 1) return sum / (count - 1);
}
},{}],"JPBu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deviation;

var _variance = _interopRequireDefault(require("./variance.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deviation(values, valueof) {
  const v = (0, _variance.default)(values, valueof);
  return v ? Math.sqrt(v) : v;
}
},{"./variance.js":"IBjk"}],"tlMU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  let min;
  let max;

  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }

  return [min, max];
}
},{}],"G2JF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fsum = fsum;
exports.fcumsum = fcumsum;
exports.Adder = void 0;

// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }

  add(x) {
    const p = this._partials;
    let i = 0;

    for (let j = 0; j < this._n && j < 32; j++) {
      const y = p[j],
            hi = x + y,
            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
      if (lo) p[i++] = lo;
      x = hi;
    }

    p[i] = x;
    this._n = i + 1;
    return this;
  }

  valueOf() {
    const p = this._partials;
    let n = this._n,
        x,
        y,
        lo,
        hi = 0;

    if (n > 0) {
      hi = p[--n];

      while (n > 0) {
        x = hi;
        y = p[--n];
        hi = x + y;
        lo = y - (hi - x);
        if (lo) break;
      }

      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {
        y = lo * 2;
        x = hi + y;
        if (y == x - hi) hi = x;
      }
    }

    return hi;
  }

}

exports.Adder = Adder;

function fsum(values, valueof) {
  const adder = new Adder();

  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        adder.add(value);
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        adder.add(value);
      }
    }
  }

  return +adder;
}

function fcumsum(values, valueof) {
  const adder = new Adder();
  let index = -1;
  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));
}
},{}],"pO3u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InternSet = exports.InternMap = void 0;

class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, {
      _intern: {
        value: new Map()
      },
      _key: {
        value: key
      }
    });
    if (entries != null) for (const [key, value] of entries) this.set(key, value);
  }

  get(key) {
    return super.get(intern_get(this, key));
  }

  has(key) {
    return super.has(intern_get(this, key));
  }

  set(key, value) {
    return super.set(intern_set(this, key), value);
  }

  delete(key) {
    return super.delete(intern_delete(this, key));
  }

}

exports.InternMap = InternMap;

class InternSet extends Set {
  constructor(values, key = keyof) {
    super();
    Object.defineProperties(this, {
      _intern: {
        value: new Map()
      },
      _key: {
        value: key
      }
    });
    if (values != null) for (const value of values) this.add(value);
  }

  has(value) {
    return super.has(intern_get(this, value));
  }

  add(value) {
    return super.add(intern_set(this, value));
  }

  delete(value) {
    return super.delete(intern_delete(this, value));
  }

}

exports.InternSet = InternSet;

function intern_get({
  _intern,
  _key
}, value) {
  const key = _key(value);

  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({
  _intern,
  _key
}, value) {
  const key = _key(value);

  if (_intern.has(key)) return _intern.get(key);

  _intern.set(key, value);

  return value;
}

function intern_delete({
  _intern,
  _key
}, value) {
  const key = _key(value);

  if (_intern.has(key)) {
    value = _intern.get(value);

    _intern.delete(key);
  }

  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}
},{}],"nPOL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"5Q7X":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = group;
exports.groups = groups;
exports.rollup = rollup;
exports.rollups = rollups;
exports.index = index;
exports.indexes = indexes;

var _internmap = require("internmap");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function group(values, ...keys) {
  return nest(values, _identity.default, _identity.default, keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, _identity.default, keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, _identity.default, reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function index(values, ...keys) {
  return nest(values, _identity.default, unique, keys);
}

function indexes(values, ...keys) {
  return nest(values, Array.from, unique, keys);
}

function unique(values) {
  if (values.length !== 1) throw new Error("duplicate key");
  return values[0];
}

function nest(values, map, reduce, keys) {
  return function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new _internmap.InternMap();
    const keyof = keys[i++];
    let index = -1;

    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);else groups.set(key, [value]);
    }

    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }

    return map(groups);
  }(values, 0);
}
},{"internmap":"pO3u","./identity.js":"nPOL"}],"4V5Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(source, keys) {
  return Array.from(keys, key => source[key]);
}
},{}],"s5J4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sort;

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _permute = _interopRequireDefault(require("./permute.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sort(values, ...F) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  let [f = _ascending.default] = F;

  if (f.length === 1 || F.length > 1) {
    const index = Uint32Array.from(values, (d, i) => i);

    if (F.length > 1) {
      F = F.map(f => values.map(f));
      index.sort((i, j) => {
        for (const f of F) {
          const c = (0, _ascending.default)(f[i], f[j]);
          if (c) return c;
        }
      });
    } else {
      f = values.map(f);
      index.sort((i, j) => (0, _ascending.default)(f[i], f[j]));
    }

    return (0, _permute.default)(values, index);
  }

  return values.sort(f);
}
},{"./ascending.js":"5A6F","./permute.js":"4V5Z"}],"AzTm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = groupSort;

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _group = _interopRequireWildcard(require("./group.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function groupSort(values, reduce, key) {
  return (reduce.length === 1 ? (0, _sort.default)((0, _group.rollup)(values, reduce, key), ([ak, av], [bk, bv]) => (0, _ascending.default)(av, bv) || (0, _ascending.default)(ak, bk)) : (0, _sort.default)((0, _group.default)(values, key), ([ak, av], [bk, bv]) => reduce(av, bv) || (0, _ascending.default)(ak, bk))).map(([key]) => key);
}
},{"./ascending.js":"5A6F","./group.js":"5Q7X","./sort.js":"s5J4"}],"+OA0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"5O/Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"nJNY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step),
        r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);

    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step),
        r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);

    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"lM1L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = nice;

var _ticks = require("./ticks.js");

function nice(start, stop, count) {
  let prestep;

  while (true) {
    const step = (0, _ticks.tickIncrement)(start, stop, count);

    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }

    prestep = step;
  }
}
},{"./ticks.js":"nJNY"}],"Pg/U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _count = _interopRequireDefault(require("../count.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values) {
  return Math.ceil(Math.log((0, _count.default)(values)) / Math.LN2) + 1;
}
},{"../count.js":"1nH3"}],"oE+j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array.js");

var _bisect = _interopRequireDefault(require("./bisect.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _nice = _interopRequireDefault(require("./nice.js"));

var _ticks = _interopRequireWildcard(require("./ticks.js"));

var _sturges = _interopRequireDefault(require("./threshold/sturges.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.

    if (!Array.isArray(tz)) {
      const max = x1,
            tn = +tz;
      if (domain === _extent.default) [x0, x1] = (0, _nice.default)(x0, x1, tn);
      tz = (0, _ticks.default)(x0, x1, tn); // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!

      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === _extent.default) {
          const step = (0, _ticks.tickIncrement)(x0, x1, tn);

          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array.js":"+OA0","./bisect.js":"VX/h","./constant.js":"5O/Y","./extent.js":"tlMU","./identity.js":"nPOL","./nice.js":"lM1L","./ticks.js":"nJNY","./threshold/sturges.js":"Pg/U"}],"8Rao":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = max;

function max(values, valueof) {
  let max;

  if (valueof === undefined) {
    for (const value of values) {
      if (value != null && (max < value || max === undefined && value >= value)) {
        max = value;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {
        max = value;
      }
    }
  }

  return max;
}
},{}],"WLfU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = min;

function min(values, valueof) {
  let min;

  if (valueof === undefined) {
    for (const value of values) {
      if (value != null && (min > value || min === undefined && value >= value)) {
        min = value;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) {
        min = value;
      }
    }
  }

  return min;
}
},{}],"0Dxt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quickselect;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare = _ascending.default) {
  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;
    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;

      while (compare(array[i], t) < 0) ++i;

      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);else ++j, swap(array, j, right);
    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }

  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}
},{"./ascending.js":"5A6F"}],"9qox":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;
exports.quantileSorted = quantileSorted;

var _max = _interopRequireDefault(require("./max.js"));

var _min = _interopRequireDefault(require("./min.js"));

var _quickselect = _interopRequireDefault(require("./quickselect.js"));

var _number = _interopRequireWildcard(require("./number.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function quantile(values, p, valueof) {
  values = Float64Array.from((0, _number.numbers)(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return (0, _min.default)(values);
  if (p >= 1) return (0, _max.default)(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = (0, _max.default)((0, _quickselect.default)(values, i0).subarray(0, i0 + 1)),
      value1 = (0, _min.default)(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = _number.default) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./max.js":"8Rao","./min.js":"WLfU","./quickselect.js":"0Dxt","./number.js":"9fz/"}],"a8Ry":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _count = _interopRequireDefault(require("../count.js"));

var _quantile = _interopRequireDefault(require("../quantile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow((0, _count.default)(values), -1 / 3)));
}
},{"../count.js":"1nH3","../quantile.js":"9qox"}],"VlA4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _count = _interopRequireDefault(require("../count.js"));

var _deviation = _interopRequireDefault(require("../deviation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow((0, _count.default)(values), -1 / 3)));
}
},{"../count.js":"1nH3","../deviation.js":"JPBu"}],"o4HH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = maxIndex;

function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;

  if (valueof === undefined) {
    for (const value of values) {
      ++index;

      if (value != null && (max < value || max === undefined && value >= value)) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (max < value || max === undefined && value >= value)) {
        max = value, maxIndex = index;
      }
    }
  }

  return maxIndex;
}
},{}],"hoEE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mean;

function mean(values, valueof) {
  let count = 0;
  let sum = 0;

  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }

  if (count) return sum / count;
}
},{}],"FMd1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quantile = _interopRequireDefault(require("./quantile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  return (0, _quantile.default)(values, 0.5, valueof);
}
},{"./quantile.js":"9qox"}],"0SAj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;

function* flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(flatten(arrays));
}
},{}],"qBXv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = minIndex;

function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;

  if (valueof === undefined) {
    for (const value of values) {
      ++index;

      if (value != null && (min > value || min === undefined && value >= value)) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (min > value || min === undefined && value >= value)) {
        min = value, minIndex = index;
      }
    }
  }

  return minIndex;
}
},{}],"0aKl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = pairs;
exports.pair = pair;

function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;

  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"M4+6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"FcEW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = least;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function least(values, compare = _ascending.default) {
  let min;
  let defined = false;

  if (compare.length === 1) {
    let minValue;

    for (const element of values) {
      const value = compare(element);

      if (defined ? (0, _ascending.default)(value, minValue) < 0 : (0, _ascending.default)(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined ? compare(value, min) < 0 : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }

  return min;
}
},{"./ascending.js":"5A6F"}],"WaFY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = leastIndex;

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _minIndex = _interopRequireDefault(require("./minIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function leastIndex(values, compare = _ascending.default) {
  if (compare.length === 1) return (0, _minIndex.default)(values, compare);
  let minValue;
  let min = -1;
  let index = -1;

  for (const value of values) {
    ++index;

    if (min < 0 ? compare(value, value) === 0 : compare(value, minValue) < 0) {
      minValue = value;
      min = index;
    }
  }

  return min;
}
},{"./ascending.js":"5A6F","./minIndex.js":"qBXv"}],"ieMY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = greatest;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function greatest(values, compare = _ascending.default) {
  let max;
  let defined = false;

  if (compare.length === 1) {
    let maxValue;

    for (const element of values) {
      const value = compare(element);

      if (defined ? (0, _ascending.default)(value, maxValue) > 0 : (0, _ascending.default)(value, value) === 0) {
        max = element;
        maxValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined ? compare(value, max) > 0 : compare(value, value) === 0) {
        max = value;
        defined = true;
      }
    }
  }

  return max;
}
},{"./ascending.js":"5A6F"}],"fBcN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = greatestIndex;

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _maxIndex = _interopRequireDefault(require("./maxIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function greatestIndex(values, compare = _ascending.default) {
  if (compare.length === 1) return (0, _maxIndex.default)(values, compare);
  let maxValue;
  let max = -1;
  let index = -1;

  for (const value of values) {
    ++index;

    if (max < 0 ? compare(value, value) === 0 : compare(value, maxValue) > 0) {
      maxValue = value;
      max = index;
    }
  }

  return max;
}
},{"./ascending.js":"5A6F","./maxIndex.js":"o4HH"}],"/c8h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = scan;

var _leastIndex = _interopRequireDefault(require("./leastIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scan(values, compare) {
  const index = (0, _leastIndex.default)(values, compare);
  return index < 0 ? undefined : index;
}
},{"./leastIndex.js":"WaFY"}],"Z0Nc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffler = shuffler;
exports.default = void 0;

var _default = shuffler(Math.random);

exports.default = _default;

function shuffler(random) {
  return function shuffle(array, i0 = 0, i1 = array.length) {
    let m = i1 - (i0 = +i0);

    while (m) {
      const i = random() * m-- | 0,
            t = array[m + i0];
      array[m + i0] = array[i + i0];
      array[i + i0] = t;
    }

    return array;
  };
}
},{}],"O7Vy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sum;

function sum(values, valueof) {
  let sum = 0;

  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;

    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }

  return sum;
}
},{}],"pk0a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min.js":"WLfU"}],"oAxq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose.js":"pk0a"}],"1Xx7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = every;

function every(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;

  for (const value of values) {
    if (!test(value, ++index, values)) {
      return false;
    }
  }

  return true;
}
},{}],"fyzl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = some;

function some(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;

  for (const value of values) {
    if (test(value, ++index, values)) {
      return true;
    }
  }

  return false;
}
},{}],"NmuY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = filter;

function filter(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  const array = [];
  let index = -1;

  for (const value of values) {
    if (test(value, ++index, values)) {
      array.push(value);
    }
  }

  return array;
}
},{}],"ngd6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = map;

function map(values, mapper) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
  return Array.from(values, (value, index) => mapper(value, index, values));
}
},{}],"SNT2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reduce;

function reduce(values, reducer, value) {
  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
  const iterator = values[Symbol.iterator]();
  let done,
      next,
      index = -1;

  if (arguments.length < 3) {
    ({
      done,
      value
    } = iterator.next());
    if (done) return;
    ++index;
  }

  while (({
    done,
    value: next
  } = iterator.next()), !done) {
    value = reducer(value, next, ++index, values);
  }

  return value;
}
},{}],"HN/k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reverse;

function reverse(values) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  return Array.from(values).reverse();
}
},{}],"5zgi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = difference;

function difference(values, ...others) {
  values = new Set(values);

  for (const other of others) {
    for (const value of other) {
      values.delete(value);
    }
  }

  return values;
}
},{}],"XwZe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = disjoint;

function disjoint(values, other) {
  const iterator = other[Symbol.iterator](),
        set = new Set();

  for (const v of values) {
    if (set.has(v)) return false;
    let value, done;

    while (({
      value,
      done
    } = iterator.next())) {
      if (done) break;
      if (Object.is(v, value)) return false;
      set.add(value);
    }
  }

  return true;
}
},{}],"rHF1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = set;

function set(values) {
  return values instanceof Set ? values : new Set(values);
}
},{}],"JMcU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = intersection;

var _set = _interopRequireDefault(require("./set.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function intersection(values, ...others) {
  values = new Set(values);
  others = others.map(_set.default);

  out: for (const value of values) {
    for (const other of others) {
      if (!other.has(value)) {
        values.delete(value);
        continue out;
      }
    }
  }

  return values;
}
},{"./set.js":"rHF1"}],"mxnn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = superset;

function superset(values, other) {
  const iterator = values[Symbol.iterator](),
        set = new Set();

  for (const o of other) {
    if (set.has(o)) continue;
    let value, done;

    while (({
      value,
      done
    } = iterator.next())) {
      if (done) return false;
      set.add(value);
      if (Object.is(o, value)) break;
    }
  }

  return true;
}
},{}],"r0XF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = subset;

var _superset = _interopRequireDefault(require("./superset.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function subset(values, other) {
  return (0, _superset.default)(other, values);
}
},{"./superset.js":"mxnn"}],"fxd/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = union;

function union(...others) {
  const set = new Set();

  for (const other of others) {
    for (const o of other) {
      set.add(o);
    }
  }

  return set;
}
},{}],"cBuZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "bisectCenter", {
  enumerable: true,
  get: function () {
    return _bisect.bisectCenter;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "count", {
  enumerable: true,
  get: function () {
    return _count.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "cumsum", {
  enumerable: true,
  get: function () {
    return _cumsum.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "Adder", {
  enumerable: true,
  get: function () {
    return _fsum.Adder;
  }
});
Object.defineProperty(exports, "fsum", {
  enumerable: true,
  get: function () {
    return _fsum.fsum;
  }
});
Object.defineProperty(exports, "fcumsum", {
  enumerable: true,
  get: function () {
    return _fsum.fcumsum;
  }
});
Object.defineProperty(exports, "group", {
  enumerable: true,
  get: function () {
    return _group.default;
  }
});
Object.defineProperty(exports, "groups", {
  enumerable: true,
  get: function () {
    return _group.groups;
  }
});
Object.defineProperty(exports, "index", {
  enumerable: true,
  get: function () {
    return _group.index;
  }
});
Object.defineProperty(exports, "indexes", {
  enumerable: true,
  get: function () {
    return _group.indexes;
  }
});
Object.defineProperty(exports, "rollup", {
  enumerable: true,
  get: function () {
    return _group.rollup;
  }
});
Object.defineProperty(exports, "rollups", {
  enumerable: true,
  get: function () {
    return _group.rollups;
  }
});
Object.defineProperty(exports, "groupSort", {
  enumerable: true,
  get: function () {
    return _groupSort.default;
  }
});
Object.defineProperty(exports, "bin", {
  enumerable: true,
  get: function () {
    return _bin.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _bin.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "maxIndex", {
  enumerable: true,
  get: function () {
    return _maxIndex.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "minIndex", {
  enumerable: true,
  get: function () {
    return _minIndex.default;
  }
});
Object.defineProperty(exports, "nice", {
  enumerable: true,
  get: function () {
    return _nice.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "quantileSorted", {
  enumerable: true,
  get: function () {
    return _quantile.quantileSorted;
  }
});
Object.defineProperty(exports, "quickselect", {
  enumerable: true,
  get: function () {
    return _quickselect.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "least", {
  enumerable: true,
  get: function () {
    return _least.default;
  }
});
Object.defineProperty(exports, "leastIndex", {
  enumerable: true,
  get: function () {
    return _leastIndex.default;
  }
});
Object.defineProperty(exports, "greatest", {
  enumerable: true,
  get: function () {
    return _greatest.default;
  }
});
Object.defineProperty(exports, "greatestIndex", {
  enumerable: true,
  get: function () {
    return _greatestIndex.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "shuffler", {
  enumerable: true,
  get: function () {
    return _shuffle.shuffler;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});
Object.defineProperty(exports, "every", {
  enumerable: true,
  get: function () {
    return _every.default;
  }
});
Object.defineProperty(exports, "some", {
  enumerable: true,
  get: function () {
    return _some.default;
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function () {
    return _filter.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "reduce", {
  enumerable: true,
  get: function () {
    return _reduce.default;
  }
});
Object.defineProperty(exports, "reverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});
Object.defineProperty(exports, "sort", {
  enumerable: true,
  get: function () {
    return _sort.default;
  }
});
Object.defineProperty(exports, "difference", {
  enumerable: true,
  get: function () {
    return _difference.default;
  }
});
Object.defineProperty(exports, "disjoint", {
  enumerable: true,
  get: function () {
    return _disjoint.default;
  }
});
Object.defineProperty(exports, "intersection", {
  enumerable: true,
  get: function () {
    return _intersection.default;
  }
});
Object.defineProperty(exports, "subset", {
  enumerable: true,
  get: function () {
    return _subset.default;
  }
});
Object.defineProperty(exports, "superset", {
  enumerable: true,
  get: function () {
    return _superset.default;
  }
});
Object.defineProperty(exports, "union", {
  enumerable: true,
  get: function () {
    return _union.default;
  }
});
Object.defineProperty(exports, "InternMap", {
  enumerable: true,
  get: function () {
    return _internmap.InternMap;
  }
});
Object.defineProperty(exports, "InternSet", {
  enumerable: true,
  get: function () {
    return _internmap.InternSet;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect.js"));

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _bisector = _interopRequireDefault(require("./bisector.js"));

var _count = _interopRequireDefault(require("./count.js"));

var _cross = _interopRequireDefault(require("./cross.js"));

var _cumsum = _interopRequireDefault(require("./cumsum.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _deviation = _interopRequireDefault(require("./deviation.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _fsum = require("./fsum.js");

var _group = _interopRequireWildcard(require("./group.js"));

var _groupSort = _interopRequireDefault(require("./groupSort.js"));

var _bin = _interopRequireDefault(require("./bin.js"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis.js"));

var _scott = _interopRequireDefault(require("./threshold/scott.js"));

var _sturges = _interopRequireDefault(require("./threshold/sturges.js"));

var _max = _interopRequireDefault(require("./max.js"));

var _maxIndex = _interopRequireDefault(require("./maxIndex.js"));

var _mean = _interopRequireDefault(require("./mean.js"));

var _median = _interopRequireDefault(require("./median.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _min = _interopRequireDefault(require("./min.js"));

var _minIndex = _interopRequireDefault(require("./minIndex.js"));

var _nice = _interopRequireDefault(require("./nice.js"));

var _pairs = _interopRequireDefault(require("./pairs.js"));

var _permute = _interopRequireDefault(require("./permute.js"));

var _quantile = _interopRequireWildcard(require("./quantile.js"));

var _quickselect = _interopRequireDefault(require("./quickselect.js"));

var _range = _interopRequireDefault(require("./range.js"));

var _least = _interopRequireDefault(require("./least.js"));

var _leastIndex = _interopRequireDefault(require("./leastIndex.js"));

var _greatest = _interopRequireDefault(require("./greatest.js"));

var _greatestIndex = _interopRequireDefault(require("./greatestIndex.js"));

var _scan = _interopRequireDefault(require("./scan.js"));

var _shuffle = _interopRequireWildcard(require("./shuffle.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _ticks = _interopRequireWildcard(require("./ticks.js"));

var _transpose = _interopRequireDefault(require("./transpose.js"));

var _variance = _interopRequireDefault(require("./variance.js"));

var _zip = _interopRequireDefault(require("./zip.js"));

var _every = _interopRequireDefault(require("./every.js"));

var _some = _interopRequireDefault(require("./some.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _reduce = _interopRequireDefault(require("./reduce.js"));

var _reverse = _interopRequireDefault(require("./reverse.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _difference = _interopRequireDefault(require("./difference.js"));

var _disjoint = _interopRequireDefault(require("./disjoint.js"));

var _intersection = _interopRequireDefault(require("./intersection.js"));

var _subset = _interopRequireDefault(require("./subset.js"));

var _superset = _interopRequireDefault(require("./superset.js"));

var _union = _interopRequireDefault(require("./union.js"));

var _internmap = require("internmap");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect.js":"VX/h","./ascending.js":"5A6F","./bisector.js":"raOJ","./count.js":"1nH3","./cross.js":"9JGh","./cumsum.js":"ReCz","./descending.js":"wjXp","./deviation.js":"JPBu","./extent.js":"tlMU","./fsum.js":"G2JF","./group.js":"5Q7X","./groupSort.js":"AzTm","./bin.js":"oE+j","./threshold/freedmanDiaconis.js":"a8Ry","./threshold/scott.js":"VlA4","./threshold/sturges.js":"Pg/U","./max.js":"8Rao","./maxIndex.js":"o4HH","./mean.js":"hoEE","./median.js":"FMd1","./merge.js":"0SAj","./min.js":"WLfU","./minIndex.js":"qBXv","./nice.js":"lM1L","./pairs.js":"0aKl","./permute.js":"4V5Z","./quantile.js":"9qox","./quickselect.js":"0Dxt","./range.js":"M4+6","./least.js":"FcEW","./leastIndex.js":"WaFY","./greatest.js":"ieMY","./greatestIndex.js":"fBcN","./scan.js":"/c8h","./shuffle.js":"Z0Nc","./sum.js":"O7Vy","./ticks.js":"nJNY","./transpose.js":"pk0a","./variance.js":"IBjk","./zip.js":"oAxq","./every.js":"1Xx7","./some.js":"fyzl","./filter.js":"NmuY","./map.js":"ngd6","./reduce.js":"SNT2","./reverse.js":"HN/k","./sort.js":"s5J4","./difference.js":"5zgi","./disjoint.js":"XwZe","./intersection.js":"JMcU","./subset.js":"r0XF","./superset.js":"mxnn","./union.js":"fxd/","internmap":"pO3u"}],"rv5q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"Qz/6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + x + ",0)";
}

function translateY(y) {
  return "translate(0," + y + ")";
}

function number(scale) {
  return d => +scale(d);
}

function center(scale, offset) {
  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
  if (scale.round()) offset = Math.round(offset);
  return d => +scale(d) + offset;
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + offset,
        range1 = +range[range.length - 1] + offset,
        position = (scale.bandwidth ? center : number)(scale.copy(), offset),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset);
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient === right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d) + offset);
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  axis.offset = function (_) {
    return arguments.length ? (offset = +_, axis) : offset;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array.js":"rv5q","./identity.js":"nPOL"}],"y9Kr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis.js");
},{"./axis.js":"Qz/6"}],"C/lH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: () => {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"UU/c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch.js":"C/lH"}],"UzOB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"OLJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name; // eslint-disable-line no-prototype-builtins
}
},{"./namespaces.js":"UzOB"}],"EIjt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace.js"));

var _namespaces = require("./namespaces.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace.js":"OLJ5","./namespaces.js":"UzOB"}],"xs2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"LRy5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _selector = _interopRequireDefault(require("../selector.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index.js":"jpDG","../selector.js":"xs2I"}],"TVIB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
  : Array.from(x); // Map, Set, iterable, string, or anything else
}
},{}],"+mHY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"ijGs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _array = _interopRequireDefault(require("../array.js"));

var _selectorAll = _interopRequireDefault(require("../selectorAll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arrayAll(select) {
  return function () {
    var group = select.apply(this, arguments);
    return group == null ? [] : (0, _array.default)(group);
  };
}

function _default(select) {
  if (typeof select === "function") select = arrayAll(select);else select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index.js":"jpDG","../array.js":"TVIB","../selectorAll.js":"+mHY"}],"4PkZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.childMatcher = childMatcher;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}

function childMatcher(selector) {
  return function (node) {
    return node.matches(selector);
  };
}
},{}],"o9VE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _matcher = require("../matcher.js");

var find = Array.prototype.find;

function childFind(match) {
  return function () {
    return find.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

function _default(match) {
  return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : (0, _matcher.childMatcher)(match)));
}
},{"../matcher.js":"4PkZ"}],"VY5c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _matcher = require("../matcher.js");

var filter = Array.prototype.filter;

function children() {
  return this.children;
}

function childrenFilter(match) {
  return function () {
    return filter.call(this.children, match);
  };
}

function _default(match) {
  return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : (0, _matcher.childMatcher)(match)));
}
},{"../matcher.js":"4PkZ"}],"hrVj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _matcher = _interopRequireDefault(require("../matcher.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index.js":"jpDG","../matcher.js":"4PkZ"}],"NmjR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"wXei":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse.js"));

var _index = require("./index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse.js":"NmjR","./index.js":"jpDG"}],"8QmP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _enter = require("./enter.js");

var _array = _interopRequireDefault(require("../array.js"));

var _constant = _interopRequireDefault(require("../constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map(),
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";

      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";

    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

function _default(value, key) {
  if (!arguments.length) return Array.from(this, datum);
  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = (0, _array.default)(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index.js":"jpDG","./enter.js":"wXei","../array.js":"TVIB","../constant.js":"5O/Y"}],"tchs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse.js"));

var _index = require("./index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse.js":"NmjR","./index.js":"jpDG"}],"oO6z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"1i+5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(selection) {
  if (!(selection instanceof _index.Selection)) throw new Error("invalid merge");

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index.js":"jpDG"}],"RepQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"D8yW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index.js":"jpDG"}],"+pbQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"kO0T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Array.from(this);
}
},{}],"84xF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"w9fp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  let size = 0;

  for (const node of this) ++size; // eslint-disable-line no-unused-vars


  return size;
}
},{}],"UF+O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"q4XW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"Tdf9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace.js":"OLJ5"}],"D1dR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"3VXj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window.js":"D1dR"}],"Q/OW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"+rtN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"hAJ3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"FiSM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"gvi7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"gv/5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"efv1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator.js":"EIjt"}],"6ILQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator.js"));

var _selector = _interopRequireDefault(require("../selector.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator.js":"EIjt","../selector.js":"xs2I"}],"quBB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"UpcG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"fuQ8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"j4rF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function contextListener(listener) {
  return function (event) {
    listener.call(this, event, this.__data__);
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function () {
    var on = this.__on,
        o,
        listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      options: options
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, options) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));

  return this;
}
},{}],"enVu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window.js":"D1dR"}],"rmGH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function* _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}
},{}],"jpDG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selectChild = _interopRequireDefault(require("./selectChild.js"));

var _selectChildren = _interopRequireDefault(require("./selectChildren.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _enter = _interopRequireDefault(require("./enter.js"));

var _exit = _interopRequireDefault(require("./exit.js"));

var _join = _interopRequireDefault(require("./join.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _order = _interopRequireDefault(require("./order.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _call = _interopRequireDefault(require("./call.js"));

var _nodes = _interopRequireDefault(require("./nodes.js"));

var _node = _interopRequireDefault(require("./node.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _empty = _interopRequireDefault(require("./empty.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _attr = _interopRequireDefault(require("./attr.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _property = _interopRequireDefault(require("./property.js"));

var _classed = _interopRequireDefault(require("./classed.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _html = _interopRequireDefault(require("./html.js"));

var _raise = _interopRequireDefault(require("./raise.js"));

var _lower = _interopRequireDefault(require("./lower.js"));

var _append = _interopRequireDefault(require("./append.js"));

var _insert = _interopRequireDefault(require("./insert.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _clone = _interopRequireDefault(require("./clone.js"));

var _datum = _interopRequireDefault(require("./datum.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

var _iterator = _interopRequireDefault(require("./iterator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

function selection_selection() {
  return this;
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  selectChild: _selectChild.default,
  selectChildren: _selectChildren.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  selection: selection_selection,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default,
  [Symbol.iterator]: _iterator.default
};
var _default = selection;
exports.default = _default;
},{"./select.js":"LRy5","./selectAll.js":"ijGs","./selectChild.js":"o9VE","./selectChildren.js":"VY5c","./filter.js":"hrVj","./data.js":"8QmP","./enter.js":"wXei","./exit.js":"tchs","./join.js":"oO6z","./merge.js":"1i+5","./order.js":"RepQ","./sort.js":"D8yW","./call.js":"+pbQ","./nodes.js":"kO0T","./node.js":"84xF","./size.js":"w9fp","./empty.js":"UF+O","./each.js":"q4XW","./attr.js":"Tdf9","./style.js":"3VXj","./property.js":"Q/OW","./classed.js":"+rtN","./text.js":"hAJ3","./html.js":"FiSM","./raise.js":"gvi7","./lower.js":"gv/5","./append.js":"efv1","./insert.js":"6ILQ","./remove.js":"quBB","./clone.js":"UpcG","./datum.js":"fuQ8","./on.js":"j4rF","./dispatch.js":"enVu","./iterator.js":"rmGH"}],"i/TO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index.js");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index.js":"jpDG"}],"tmZ+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator.js"));

var _select = _interopRequireDefault(require("./select.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator.js":"EIjt","./select.js":"i/TO"}],"JuPP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"mu9P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(event) {
  let sourceEvent;

  while (sourceEvent = event.sourceEvent) event = sourceEvent;

  return event;
}
},{}],"SNxp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(event, node) {
  event = (0, _sourceEvent.default)(event);
  if (node === undefined) node = event.currentTarget;

  if (node) {
    var svg = node.ownerSVGElement || node;

    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }

    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }

  return [event.pageX, event.pageY];
}
},{"./sourceEvent.js":"mu9P"}],"mxYx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointer = _interopRequireDefault(require("./pointer.js"));

var _sourceEvent = _interopRequireDefault(require("./sourceEvent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(events, node) {
  if (events.target) {
    // i.e., instanceof Event, not TouchList or iterable
    events = (0, _sourceEvent.default)(events);
    if (node === undefined) node = events.currentTarget;
    events = events.touches || [events];
  }

  return Array.from(events, event => (0, _pointer.default)(event, node));
}
},{"./pointer.js":"SNxp","./sourceEvent.js":"mu9P"}],"7/to":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = _interopRequireDefault(require("./array.js"));

var _index = require("./selection/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : (0, _array.default)(selector)], _index.root);
}
},{"./array.js":"TVIB","./selection/index.js":"jpDG"}],"lm1C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "pointer", {
  enumerable: true,
  get: function () {
    return _pointer.default;
  }
});
Object.defineProperty(exports, "pointers", {
  enumerable: true,
  get: function () {
    return _pointers.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});

var _create = _interopRequireDefault(require("./create.js"));

var _creator = _interopRequireDefault(require("./creator.js"));

var _local = _interopRequireDefault(require("./local.js"));

var _matcher = _interopRequireDefault(require("./matcher.js"));

var _namespace = _interopRequireDefault(require("./namespace.js"));

var _namespaces = _interopRequireDefault(require("./namespaces.js"));

var _pointer = _interopRequireDefault(require("./pointer.js"));

var _pointers = _interopRequireDefault(require("./pointers.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _index = _interopRequireDefault(require("./selection/index.js"));

var _selector = _interopRequireDefault(require("./selector.js"));

var _selectorAll = _interopRequireDefault(require("./selectorAll.js"));

var _style = require("./selection/style.js");

var _window = _interopRequireDefault(require("./window.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create.js":"tmZ+","./creator.js":"EIjt","./local.js":"JuPP","./matcher.js":"4PkZ","./namespace.js":"OLJ5","./namespaces.js":"UzOB","./pointer.js":"SNxp","./pointers.js":"mxYx","./select.js":"i/TO","./selectAll.js":"7/to","./selection/index.js":"jpDG","./selector.js":"xs2I","./selectorAll.js":"+mHY","./selection/style.js":"3VXj","./window.js":"D1dR"}],"DCEg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

function nopropagation(event) {
  event.stopImmediatePropagation();
}

function _default(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}
},{}],"6rD9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"lm1C","./noevent.js":"DCEg"}],"gzkf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = x => () => x;

exports.default = _default;
},{}],"IkUE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(type, {
  sourceEvent,
  subject,
  target,
  identifier,
  active,
  x,
  y,
  dx,
  dy,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {
      value: type,
      enumerable: true,
      configurable: true
    },
    sourceEvent: {
      value: sourceEvent,
      enumerable: true,
      configurable: true
    },
    subject: {
      value: subject,
      enumerable: true,
      configurable: true
    },
    target: {
      value: target,
      enumerable: true,
      configurable: true
    },
    identifier: {
      value: identifier,
      enumerable: true,
      configurable: true
    },
    active: {
      value: active,
      enumerable: true,
      configurable: true
    },
    x: {
      value: x,
      enumerable: true,
      configurable: true
    },
    y: {
      value: y,
      enumerable: true,
      configurable: true
    },
    dx: {
      value: dx,
      enumerable: true,
      configurable: true
    },
    dy: {
      value: dy,
      enumerable: true,
      configurable: true
    },
    _: {
      value: dispatch
    }
  });
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"68fG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(event, d) {
  return d == null ? {
    x: event.x,
    y: event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned(event, d) {
    if (touchending || !filter.call(this, event, d)) return;
    var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");
    if (!gesture) return;
    (0, _d3Selection.select)(event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(event.view);
    (0, _noevent.nopropagation)(event);
    mousemoving = false;
    mousedownx = event.clientX;
    mousedowny = event.clientY;
    gesture("start", event);
  }

  function mousemoved(event) {
    (0, _noevent.default)(event);

    if (!mousemoving) {
      var dx = event.clientX - mousedownx,
          dy = event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag", event);
  }

  function mouseupped(event) {
    (0, _d3Selection.select)(event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(event.view, mousemoving);
    (0, _noevent.default)(event);
    gestures.mouse("end", event);
  }

  function touchstarted(event, d) {
    if (!filter.call(this, event, d)) return;
    var touches = event.changedTouches,
        c = container.call(this, event, d),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {
        (0, _noevent.nopropagation)(event);
        gesture("start", event, touches[i]);
      }
    }
  }

  function touchmoved(event) {
    var touches = event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)(event);
        gesture("drag", event, touches[i]);
      }
    }
  }

  function touchended(event) {
    var touches = event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)(event);
        gesture("end", event, touches[i]);
      }
    }
  }

  function beforestart(that, container, event, d, identifier, touch) {
    var dispatch = listeners.copy(),
        p = (0, _d3Selection.pointer)(touch || event, container),
        dx,
        dy,
        s;
    if ((s = subject.call(that, new _event.default("beforestart", {
      sourceEvent: event,
      target: drag,
      identifier,
      active,
      x: p[0],
      y: p[1],
      dx: 0,
      dy: 0,
      dispatch
    }), d)) == null) return;
    dx = s.x - p[0] || 0;
    dy = s.y - p[1] || 0;
    return function gesture(type, event, touch) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[identifier] = gesture, n = active++;
          break;

        case "end":
          delete gestures[identifier], --active;
        // nobreak

        case "drag":
          p = (0, _d3Selection.pointer)(touch || event, container), n = active;
          break;
      }

      dispatch.call(type, that, new _event.default(type, {
        sourceEvent: event,
        subject: s,
        target: drag,
        identifier,
        active: n,
        x: p[0] + dx,
        y: p[1] + dy,
        dx: p[0] - p0[0],
        dy: p[1] - p0[1],
        dispatch
      }), d);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"UU/c","d3-selection":"lm1C","./nodrag.js":"6rD9","./noevent.js":"DCEg","./constant.js":"gzkf","./event.js":"IkUE"}],"LrBi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"68fG","./nodrag.js":"6rD9"}],"CSb3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"UAf0":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"CSb3"}],"8ykI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.degrees = exports.radians = void 0;
const radians = Math.PI / 180;
exports.radians = radians;
const degrees = 180 / Math.PI;
exports.degrees = degrees;
},{}],"n21X":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18,
      Xn = 0.96422,
      Yn = 1,
      Zn = 0.82521,
      t0 = 4 / 29,
      t1 = 6 / 29,
      t2 = 3 * t1 * t1,
      t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.degrees;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"CSb3","./color.js":"UAf0","./math.js":"8ykI"}],"aDX2":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.radians,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"CSb3","./color.js":"UAf0","./math.js":"8ykI"}],"4TJ2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"UAf0","./lab.js":"n21X","./cubehelix.js":"aDX2"}],"mIuw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"t9MF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis.js":"mIuw"}],"OW+9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant.js":"gzkf"}],"hw5o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"4TJ2","./basis.js":"mIuw","./basisClosed.js":"t9MF","./color.js":"OW+9"}],"fCry":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;

function _default(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
},{}],"j6Kl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.genericArray = genericArray;

var _value = _interopRequireDefault(require("./value.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value.js":"5ONG","./numberArray.js":"fCry"}],"npIv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
},{}],"eUtU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}
},{}],"9Ci2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value.js":"5ONG"}],"WNxQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number.js":"eUtU"}],"5ONG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb.js"));

var _array = require("./array.js");

var _date = _interopRequireDefault(require("./date.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"4TJ2","./rgb.js":"hw5o","./array.js":"j6Kl","./date.js":"npIv","./number.js":"eUtU","./object.js":"9Ci2","./string.js":"WNxQ","./constant.js":"gzkf","./numberArray.js":"fCry"}],"9iFP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"/lYd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color.js");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color.js":"OW+9"}],"8Ehv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
},{}],"sFbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"igaz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var svgNode;
/* eslint-disable no-undef */

function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? _decompose.identity : (0, _decompose.default)(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose.js":"sFbg"}],"/tUK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number.js"));

var _parse = require("./parse.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number.js":"eUtU","./parse.js":"igaz"}],"MbcF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

var _default = function zoomRho(rho, rho2, rho4) {
  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0],
        uy0 = p0[1],
        w0 = p0[2],
        ux1 = p1[0],
        uy1 = p1[1],
        w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S; // Special case for u0 ≅ u1.

    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;

      i = function (t) {
        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
      };
    } // General case.
    else {
        var d1 = Math.sqrt(d2),
            b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
            b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
            r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
            r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
        S = (r1 - r0) / rho;

        i = function (t) {
          var s = t * S,
              coshr0 = cosh(r0),
              u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
          return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
        };
      }

    i.duration = S * 1000 * rho / Math.SQRT2;
    return i;
  }

  zoom.rho = function (_) {
    var _1 = Math.max(1e-3, +_),
        _2 = _1 * _1,
        _4 = _2 * _2;

    return zoomRho(_1, _2, _4);
  };

  return zoom;
}(Math.SQRT2, 2, 4);

exports.default = _default;
},{}],"BrWg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"4TJ2","./color.js":"OW+9"}],"5HCN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"4TJ2","./color.js":"OW+9"}],"9VIl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"4TJ2","./color.js":"OW+9"}],"NOHm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"4TJ2","./color.js":"OW+9"}],"nlPb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function piecewise(interpolate, values) {
  if (values === undefined) values = interpolate, interpolate = _value.default;
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{"./value.js":"5ONG"}],"g3ua":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"mkGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateNumberArray", {
  enumerable: true,
  get: function () {
    return _numberArray.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value.js"));

var _array = _interopRequireDefault(require("./array.js"));

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _discrete = _interopRequireDefault(require("./discrete.js"));

var _hue = _interopRequireDefault(require("./hue.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _numberArray = _interopRequireDefault(require("./numberArray.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _index = require("./transform/index.js");

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _rgb = _interopRequireWildcard(require("./rgb.js"));

var _hsl = _interopRequireWildcard(require("./hsl.js"));

var _lab = _interopRequireDefault(require("./lab.js"));

var _hcl = _interopRequireWildcard(require("./hcl.js"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix.js"));

var _piecewise = _interopRequireDefault(require("./piecewise.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value.js":"5ONG","./array.js":"j6Kl","./basis.js":"mIuw","./basisClosed.js":"t9MF","./date.js":"npIv","./discrete.js":"9iFP","./hue.js":"/lYd","./number.js":"eUtU","./numberArray.js":"fCry","./object.js":"9Ci2","./round.js":"8Ehv","./string.js":"WNxQ","./transform/index.js":"/tUK","./zoom.js":"MbcF","./rgb.js":"hw5o","./hsl.js":"BrWg","./lab.js":"5HCN","./hcl.js":"9VIl","./cubehelix.js":"NOHm","./piecewise.js":"nlPb","./quantize.js":"g3ua"}],"9v2Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"iEU7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer.js":"9v2Y"}],"B8zX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  t._restart = t.restart;

  t.restart = function (callback, delay, time) {
    delay = +delay, time = time == null ? (0, _timer.now)() : +time;

    t._restart(function tick(elapsed) {
      elapsed += total;

      t._restart(tick, total += delay, time);

      callback(elapsed);
    }, delay, time);
  };

  t.restart(callback, delay, time);
  return t;
}
},{"./timer.js":"9v2Y"}],"CBES":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer.js");

var _timeout = _interopRequireDefault(require("./timeout.js"));

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer.js":"9v2Y","./timeout.js":"iEU7","./interval.js":"B8zX"}],"GDz/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"UU/c","d3-timer":"CBES"}],"+xAn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule.js");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule.js":"GDz/"}],"JwzZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt.js":"+xAn"}],"CgJV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule.js");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule.js":"GDz/"}],"KSuB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"/e4S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"mkGF","d3-selection":"lm1C","./tween.js":"CgJV","./interpolate.js":"KSuB"}],"L4WC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"lm1C"}],"1K26":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule.js":"GDz/"}],"ZZtL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule.js":"GDz/"}],"6pgS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule.js":"GDz/"}],"odSN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeVarying(id, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error();
    (0, _schedule.set)(this, id).ease = v;
  };
}

function _default(value) {
  if (typeof value !== "function") throw new Error();
  return this.each(easeVarying(this._id, value));
}
},{"./schedule.js":"GDz/"}],"0QDl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"lm1C","./index.js":"J3C7"}],"Z2Q+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index.js":"J3C7"}],"VZes":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule.js":"GDz/"}],"FS2t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"Xvwr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"lm1C","./index.js":"J3C7","./schedule.js":"GDz/"}],"DOdJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"lm1C","./index.js":"J3C7","./schedule.js":"GDz/"}],"bQR7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"lm1C"}],"gXfd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule.js");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"mkGF","d3-selection":"lm1C","./schedule.js":"GDz/","./tween.js":"CgJV","./interpolate.js":"KSuB"}],"SCZW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"HTlb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween.js");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween.js":"CgJV"}],"2Tl5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}
},{}],"rWxz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index.js":"J3C7","./schedule.js":"GDz/"}],"13+g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    }); // The selection was empty, resolve end immediately

    if (size === 0) resolve();
  });
}
},{"./schedule.js":"GDz/"}],"J3C7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr.js"));

var _attrTween = _interopRequireDefault(require("./attrTween.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _duration = _interopRequireDefault(require("./duration.js"));

var _ease = _interopRequireDefault(require("./ease.js"));

var _easeVarying = _interopRequireDefault(require("./easeVarying.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selection = _interopRequireDefault(require("./selection.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _styleTween = _interopRequireDefault(require("./styleTween.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _textTween = _interopRequireDefault(require("./textTween.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

var _tween = _interopRequireDefault(require("./tween.js"));

var _end = _interopRequireDefault(require("./end.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  textTween: _textTween.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  easeVarying: _easeVarying.default,
  end: _end.default,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};
},{"d3-selection":"lm1C","./attr.js":"/e4S","./attrTween.js":"L4WC","./delay.js":"1K26","./duration.js":"ZZtL","./ease.js":"6pgS","./easeVarying.js":"odSN","./filter.js":"0QDl","./merge.js":"Z2Q+","./on.js":"VZes","./remove.js":"FS2t","./select.js":"Xvwr","./selectAll.js":"DOdJ","./selection.js":"bQR7","./style.js":"gXfd","./styleTween.js":"SCZW","./text.js":"HTlb","./textTween.js":"2Tl5","./transition.js":"rWxz","./tween.js":"CgJV","./end.js":"13+g"}],"fXiu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = void 0;

const linear = t => +t;

exports.linear = linear;
},{}],"GaS5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"PA7e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"ECJi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"sZZb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return +t === 1 ? 1 : 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"dlJ/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tpmt = tpmt;

// tpmt is two power minus ten times t scaled to [0,1]
function tpmt(x) {
  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;
}
},{}],"rYq8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

var _math = require("./math.js");

function expIn(t) {
  return (0, _math.tpmt)(1 - +t);
}

function expOut(t) {
  return 1 - (0, _math.tpmt)(t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? (0, _math.tpmt)(1 - t) : 2 - (0, _math.tpmt)(t - 1)) / 2;
}
},{"./math.js":"dlJ/"}],"1+hE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"MKsh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"fCsL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return (t = +t) * t * (s * (t - 1) + t);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((t + 1) * s + t) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"xolo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;

var _math = require("./math.js");

var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * (0, _math.tpmt)(- --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * (0, _math.tpmt)(t = +t) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * (0, _math.tpmt)(-t) * Math.sin((s - t) / p) : 2 - a * (0, _math.tpmt)(t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{"./math.js":"dlJ/"}],"CFyW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"fXiu","./quad.js":"GaS5","./cubic.js":"PA7e","./poly.js":"ECJi","./sin.js":"sZZb","./exp.js":"rYq8","./circle.js":"1+hE","./bounce.js":"MKsh","./back.js":"fCsL","./elastic.js":"xolo"}],"CNir":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index.js");

var _schedule = _interopRequireDefault(require("../transition/schedule.js"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index.js":"J3C7","../transition/schedule.js":"GDz/","d3-ease":"CFyW","d3-timer":"CBES"}],"uhVG":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"lm1C","./interrupt.js":"JwzZ","./transition.js":"CNir"}],"zz7H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index.js");

var _schedule = require("./transition/schedule.js");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index.js":"J3C7","./transition/schedule.js":"GDz/"}],"Fcbi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index.js");

var _index2 = _interopRequireDefault(require("./transition/index.js"));

var _active = _interopRequireDefault(require("./active.js"));

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index.js":"uhVG","./transition/index.js":"J3C7","./active.js":"zz7H","./interrupt.js":"+xAn"}],"iX60":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BrushEvent;

function BrushEvent(type, {
  sourceEvent,
  target,
  selection,
  mode,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {
      value: type,
      enumerable: true,
      configurable: true
    },
    sourceEvent: {
      value: sourceEvent,
      enumerable: true,
      configurable: true
    },
    target: {
      value: target,
      enumerable: true,
      configurable: true
    },
    selection: {
      value: selection,
      enumerable: true,
      configurable: true
    },
    mode: {
      value: mode,
      enumerable: true,
      configurable: true
    },
    _: {
      value: dispatch
    }
  });
}
},{}],"HwJw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};
const {
  abs,
  max,
  min
} = Math;

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.tween) {
      group.on("start.brush", function (event) {
        emitter(this, arguments).beforestart().start(event);
      }).on("interrupt.brush end.brush", function (event) {
        emitter(this, arguments).end(event);
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    var emit = that.__brush.emitter;
    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
  }

  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function (event, mode) {
      if (this.starting) this.starting = false, this.emit("start", event, mode);else this.emit("brush", event);
      return this;
    },
    brush: function (event, mode) {
      this.emit("brush", event, mode);
      return this;
    },
    end: function (event, mode) {
      if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);
      return this;
    },
    emit: function (type, event, mode) {
      var d = (0, _d3Selection.select)(this.that).datum();
      listeners.call(type, this.that, new _event.default(type, {
        sourceEvent: event,
        target: brush,
        selection: dim.output(this.state.selection),
        mode,
        dispatch: listeners
      }), d);
    }
  };

  function started(event) {
    if (touchending && !event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = event.target.__data__.type,
        mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && event.shiftKey,
        lockX,
        lockY,
        points = Array.from(event.touches || [event], t => {
      const i = t.identifier;
      t = (0, _d3Selection.pointer)(t, that);
      t.point0 = t.slice();
      t.identifier = i;
      return t;
    });

    if (type === "overlay") {
      if (selection) moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection = [[w0 = dim === Y ? W : min(pts[0][0], pts[1][0]), n0 = dim === X ? N : min(pts[0][1], pts[1][1])], [e0 = dim === Y ? E : max(pts[0][0], pts[1][0]), s0 = dim === X ? S : max(pts[0][1], pts[1][1])]];
      if (points.length > 1) move();
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);
    (0, _d3Transition.interrupt)(that);
    var emit = emitter(that, arguments, true).beforestart();

    if (event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(event.view);
    }

    redraw.call(that);
    emit.start(event, mode.name);

    function moved(event) {
      for (const p of event.changedTouches || [event]) {
        for (const d of points) if (d.identifier === p.identifier) d.cur = (0, _d3Selection.pointer)(p, that);
      }

      if (shifting && !lockX && !lockY && points.length === 1) {
        const point = points[0];
        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1])) lockY = true;else lockX = true;
      }

      for (const point of points) if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];

      moving = true;
      (0, _noevent.default)(event);
      move(event);
    }

    function move(event) {
      const point = points[0],
            point0 = point.point0;
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (points[1]) {
              if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;
              if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;
            } else {
              if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
              if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            }

            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));
            if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush(event, mode.name);
      }
    }

    function ended(event) {
      (0, _noevent.nopropagation)(event);

      if (event.touches) {
        if (event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end(event, mode.name);
    }

    function keydowned(event) {
      switch (event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)(event);
    }

    function keyupped(event) {
      switch (event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)(event);
    }
  }

  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }

  function touchended(event) {
    emitter(this, arguments).ended(event);
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"UU/c","d3-drag":"LrBi","d3-interpolate":"mkGF","d3-selection":"lm1C","d3-transition":"Fcbi","./constant.js":"gzkf","./event.js":"iX60","./noevent.js":"DCEg"}],"TNt0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"HwJw"}],"z+rd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.epsilon = exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
var epsilon = 1e-12;
exports.epsilon = epsilon;
},{}],"YLYV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.chordTranspose = chordTranspose;
exports.chordDirected = chordDirected;

var _math = require("./math.js");

function range(i, j) {
  return Array.from({
    length: j - i
  }, (_, k) => i + k);
}

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  return chord(false, false);
}

function chordTranspose() {
  return chord(false, true);
}

function chordDirected() {
  return chord(true, false);
}

function chord(directed, transpose) {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = new Array(n),
        groupIndex = range(0, n),
        chords = new Array(n * n),
        groups = new Array(n),
        k = 0,
        dx;
    matrix = Float64Array.from({
      length: n * n
    }, transpose ? (_, i) => matrix[i % n][i / n | 0] : (_, i) => matrix[i / n | 0][i % n]); // Compute the scaling factor from value to angle in [0, 2pi].

    for (let i = 0; i < n; ++i) {
      let x = 0;

      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];

      k += groupSums[i] = x;
    }

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the angles for each group and constituent chord.

    {
      let x = 0;
      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));

      for (const i of groupIndex) {
        const x0 = x;

        if (directed) {
          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));

          for (const j of subgroupIndex) {
            if (j < 0) {
              const chord = chords[~j * n + i] || (chords[~j * n + i] = {
                source: null,
                target: null
              });
              chord.target = {
                index: i,
                startAngle: x,
                endAngle: x += matrix[~j * n + i] * k,
                value: matrix[~j * n + i]
              };
            } else {
              const chord = chords[i * n + j] || (chords[i * n + j] = {
                source: null,
                target: null
              });
              chord.source = {
                index: i,
                startAngle: x,
                endAngle: x += matrix[i * n + j] * k,
                value: matrix[i * n + j]
              };
            }
          }

          groups[i] = {
            index: i,
            startAngle: x0,
            endAngle: x,
            value: groupSums[i]
          };
        } else {
          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));

          for (const j of subgroupIndex) {
            let chord;

            if (i < j) {
              chord = chords[i * n + j] || (chords[i * n + j] = {
                source: null,
                target: null
              });
              chord.source = {
                index: i,
                startAngle: x,
                endAngle: x += matrix[i * n + j] * k,
                value: matrix[i * n + j]
              };
            } else {
              chord = chords[j * n + i] || (chords[j * n + i] = {
                source: null,
                target: null
              });
              chord.target = {
                index: i,
                startAngle: x,
                endAngle: x += matrix[i * n + j] * k,
                value: matrix[i * n + j]
              };
              if (i === j) chord.source = chord.target;
            }

            if (chord.source && chord.target && chord.source.value < chord.target.value) {
              const source = chord.source;
              chord.source = chord.target;
              chord.target = source;
            }
          }

          groups[i] = {
            index: i,
            startAngle: x0,
            endAngle: x,
            value: groupSums[i]
          };
        }

        x += dx;
      }
    } // Remove empty chords.

    chords = Object.values(chords);
    chords.groups = groups;
    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"./math.js":"z+rd"}],"E5FC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const pi = Math.PI,
      tau = 2 * pi,
      epsilon = 1e-6,
      tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"dz42":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path.js":"E5FC"}],"ootM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.ribbonArrow = ribbonArrow;

var _d3Path = require("d3-path");

var _array = require("./array.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function defaultPadAngle() {
  return 0;
}

function defaultArrowheadRadius() {
  return 10;
}

function ribbon(headRadius) {
  var source = defaultSource,
      target = defaultTarget,
      sourceRadius = defaultRadius,
      targetRadius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      padAngle = defaultPadAngle,
      context = null;

  function ribbon() {
    var buffer,
        s = source.apply(this, arguments),
        t = target.apply(this, arguments),
        ap = padAngle.apply(this, arguments) / 2,
        argv = _array.slice.call(arguments),
        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        tr = +targetRadius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();

    if (ap > _math.epsilon) {
      if ((0, _math.abs)(sa1 - sa0) > ap * 2 + _math.epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);else sa0 = sa1 = (sa0 + sa1) / 2;
      if ((0, _math.abs)(ta1 - ta0) > ap * 2 + _math.epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);else ta0 = ta1 = (ta0 + ta1) / 2;
    }

    context.moveTo(sr * (0, _math.cos)(sa0), sr * (0, _math.sin)(sa0));
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      if (headRadius) {
        var hr = +headRadius.apply(this, arguments),
            tr2 = tr - hr,
            ta2 = (ta0 + ta1) / 2;
        context.quadraticCurveTo(0, 0, tr2 * (0, _math.cos)(ta0), tr2 * (0, _math.sin)(ta0));
        context.lineTo(tr * (0, _math.cos)(ta2), tr * (0, _math.sin)(ta2));
        context.lineTo(tr2 * (0, _math.cos)(ta1), tr2 * (0, _math.sin)(ta1));
      } else {
        context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
        context.arc(0, 0, tr, ta0, ta1);
      }
    }

    context.quadraticCurveTo(0, 0, sr * (0, _math.cos)(sa0), sr * (0, _math.sin)(sa0));
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  if (headRadius) ribbon.headRadius = function (_) {
    return arguments.length ? (headRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : headRadius;
  };

  ribbon.radius = function (_) {
    return arguments.length ? (sourceRadius = targetRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : sourceRadius;
  };

  ribbon.sourceRadius = function (_) {
    return arguments.length ? (sourceRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : sourceRadius;
  };

  ribbon.targetRadius = function (_) {
    return arguments.length ? (targetRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : targetRadius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : padAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}

function _default() {
  return ribbon();
}

function ribbonArrow() {
  return ribbon(defaultArrowheadRadius);
}
},{"d3-path":"dz42","./array.js":"rv5q","./constant.js":"5O/Y","./math.js":"z+rd"}],"cf1+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "chordTranspose", {
  enumerable: true,
  get: function () {
    return _chord.chordTranspose;
  }
});
Object.defineProperty(exports, "chordDirected", {
  enumerable: true,
  get: function () {
    return _chord.chordDirected;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});
Object.defineProperty(exports, "ribbonArrow", {
  enumerable: true,
  get: function () {
    return _ribbon.ribbonArrow;
  }
});

var _chord = _interopRequireWildcard(require("./chord.js"));

var _ribbon = _interopRequireWildcard(require("./ribbon.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./chord.js":"YLYV","./ribbon.js":"ootM"}],"+IBm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"8ldh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"hcn/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"GiY2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"BhKh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"oKpg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array.js");

var _ascending = _interopRequireDefault(require("./ascending.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.floor(_[0]),
        _1 = Math.floor(_[1]);

    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"cBuZ","./array.js":"+IBm","./ascending.js":"8ldh","./area.js":"hcn/","./constant.js":"gzkf","./contains.js":"GiY2","./noop.js":"BhKh"}],"yZ0K":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"9VOW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array.js");

var _blur = require("./blur.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _contours = _interopRequireDefault(require("./contours.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = +_[0],
        _1 = +_[1];

    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"cBuZ","./array.js":"+IBm","./blur.js":"yZ0K","./constant.js":"gzkf","./contours.js":"oKpg"}],"cfrl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours.js"));

var _density = _interopRequireDefault(require("./density.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours.js":"oKpg","./density.js":"9VOW"}],"4HpL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const EPSILON = Math.pow(2, -52);
const EDGE_STACK = new Uint32Array(512);

class Delaunator {
  static from(points, getX = defaultGetX, getY = defaultGetY) {
    const n = points.length;
    const coords = new Float64Array(n * 2);

    for (let i = 0; i < n; i++) {
      const p = points[i];
      coords[2 * i] = getX(p);
      coords[2 * i + 1] = getY(p);
    }

    return new Delaunator(coords);
  }

  constructor(coords) {
    const n = coords.length >> 1;
    if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');
    this.coords = coords; // arrays that will store the triangulation graph

    const maxTriangles = Math.max(2 * n - 5, 0);
    this._triangles = new Uint32Array(maxTriangles * 3);
    this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull

    this._hashSize = Math.ceil(Math.sqrt(n));
    this._hullPrev = new Uint32Array(n); // edge to prev edge

    this._hullNext = new Uint32Array(n); // edge to next edge

    this._hullTri = new Uint32Array(n); // edge to adjacent triangle

    this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash
    // temporary arrays for sorting points

    this._ids = new Uint32Array(n);
    this._dists = new Float64Array(n);
    this.update();
  }

  update() {
    const {
      coords,
      _hullPrev: hullPrev,
      _hullNext: hullNext,
      _hullTri: hullTri,
      _hullHash: hullHash
    } = this;
    const n = coords.length >> 1; // populate an array of point indices; calculate input data bbox

    let minX = Infinity;
    let minY = Infinity;
    let maxX = -Infinity;
    let maxY = -Infinity;

    for (let i = 0; i < n; i++) {
      const x = coords[2 * i];
      const y = coords[2 * i + 1];
      if (x < minX) minX = x;
      if (y < minY) minY = y;
      if (x > maxX) maxX = x;
      if (y > maxY) maxY = y;
      this._ids[i] = i;
    }

    const cx = (minX + maxX) / 2;
    const cy = (minY + maxY) / 2;
    let minDist = Infinity;
    let i0, i1, i2; // pick a seed point close to the center

    for (let i = 0; i < n; i++) {
      const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);

      if (d < minDist) {
        i0 = i;
        minDist = d;
      }
    }

    const i0x = coords[2 * i0];
    const i0y = coords[2 * i0 + 1];
    minDist = Infinity; // find the point closest to the seed

    for (let i = 0; i < n; i++) {
      if (i === i0) continue;
      const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);

      if (d < minDist && d > 0) {
        i1 = i;
        minDist = d;
      }
    }

    let i1x = coords[2 * i1];
    let i1y = coords[2 * i1 + 1];
    let minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two

    for (let i = 0; i < n; i++) {
      if (i === i0 || i === i1) continue;
      const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);

      if (r < minRadius) {
        i2 = i;
        minRadius = r;
      }
    }

    let i2x = coords[2 * i2];
    let i2y = coords[2 * i2 + 1];

    if (minRadius === Infinity) {
      // order collinear points by dx (or dy if all x are identical)
      // and return the list as a hull
      for (let i = 0; i < n; i++) {
        this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];
      }

      quicksort(this._ids, this._dists, 0, n - 1);
      const hull = new Uint32Array(n);
      let j = 0;

      for (let i = 0, d0 = -Infinity; i < n; i++) {
        const id = this._ids[i];

        if (this._dists[id] > d0) {
          hull[j++] = id;
          d0 = this._dists[id];
        }
      }

      this.hull = hull.subarray(0, j);
      this.triangles = new Uint32Array(0);
      this.halfedges = new Uint32Array(0);
      return;
    } // swap the order of the seed points for counter-clockwise orientation


    if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
      const i = i1;
      const x = i1x;
      const y = i1y;
      i1 = i2;
      i1x = i2x;
      i1y = i2y;
      i2 = i;
      i2x = x;
      i2y = y;
    }

    const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
    this._cx = center.x;
    this._cy = center.y;

    for (let i = 0; i < n; i++) {
      this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
    } // sort the points by distance from the seed triangle circumcenter


    quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull

    this._hullStart = i0;
    let hullSize = 3;
    hullNext[i0] = hullPrev[i2] = i1;
    hullNext[i1] = hullPrev[i0] = i2;
    hullNext[i2] = hullPrev[i1] = i0;
    hullTri[i0] = 0;
    hullTri[i1] = 1;
    hullTri[i2] = 2;
    hullHash.fill(-1);
    hullHash[this._hashKey(i0x, i0y)] = i0;
    hullHash[this._hashKey(i1x, i1y)] = i1;
    hullHash[this._hashKey(i2x, i2y)] = i2;
    this.trianglesLen = 0;

    this._addTriangle(i0, i1, i2, -1, -1, -1);

    for (let k = 0, xp, yp; k < this._ids.length; k++) {
      const i = this._ids[k];
      const x = coords[2 * i];
      const y = coords[2 * i + 1]; // skip near-duplicate points

      if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
      xp = x;
      yp = y; // skip seed triangle points

      if (i === i0 || i === i1 || i === i2) continue; // find a visible edge on the convex hull using edge hash

      let start = 0;

      for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {
        start = hullHash[(key + j) % this._hashSize];
        if (start !== -1 && start !== hullNext[start]) break;
      }

      start = hullPrev[start];
      let e = start,
          q;

      while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {
        e = q;

        if (e === start) {
          e = -1;
          break;
        }
      }

      if (e === -1) continue; // likely a near-duplicate point; skip it
      // add the first triangle from the point

      let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition


      hullTri[i] = this._legalize(t + 2);
      hullTri[e] = t; // keep track of boundary triangles on the hull

      hullSize++; // walk forward through the hull, adding more triangles and flipping recursively

      let n = hullNext[e];

      while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {
        t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
        hullTri[i] = this._legalize(t + 2);
        hullNext[n] = n; // mark as removed

        hullSize--;
        n = q;
      } // walk backward from the other side, adding more triangles and flipping


      if (e === start) {
        while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {
          t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);

          this._legalize(t + 2);

          hullTri[q] = t;
          hullNext[e] = e; // mark as removed

          hullSize--;
          e = q;
        }
      } // update the hull indices


      this._hullStart = hullPrev[i] = e;
      hullNext[e] = hullPrev[n] = i;
      hullNext[i] = n; // save the two new edges in the hash table

      hullHash[this._hashKey(x, y)] = i;
      hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
    }

    this.hull = new Uint32Array(hullSize);

    for (let i = 0, e = this._hullStart; i < hullSize; i++) {
      this.hull[i] = e;
      e = hullNext[e];
    } // trim typed triangle mesh arrays


    this.triangles = this._triangles.subarray(0, this.trianglesLen);
    this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
  }

  _hashKey(x, y) {
    return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
  }

  _legalize(a) {
    const {
      _triangles: triangles,
      _halfedges: halfedges,
      coords
    } = this;
    let i = 0;
    let ar = 0; // recursion eliminated with a fixed-size stack

    while (true) {
      const b = halfedges[a];
      /* if the pair of triangles doesn't satisfy the Delaunay condition
       * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
       * then do the same check/flip recursively for the new pair of triangles
       *
       *           pl                    pl
       *          /||\                  /  \
       *       al/ || \bl            al/    \a
       *        /  ||  \              /      \
       *       /  a||b  \    flip    /___ar___\
       *     p0\   ||   /p1   =>   p0\---bl---/p1
       *        \  ||  /              \      /
       *       ar\ || /br             b\    /br
       *          \||/                  \  /
       *           pr                    pr
       */

      const a0 = a - a % 3;
      ar = a0 + (a + 2) % 3;

      if (b === -1) {
        // convex hull edge
        if (i === 0) break;
        a = EDGE_STACK[--i];
        continue;
      }

      const b0 = b - b % 3;
      const al = a0 + (a + 1) % 3;
      const bl = b0 + (b + 2) % 3;
      const p0 = triangles[ar];
      const pr = triangles[a];
      const pl = triangles[al];
      const p1 = triangles[bl];
      const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);

      if (illegal) {
        triangles[a] = p1;
        triangles[b] = p0;
        const hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference

        if (hbl === -1) {
          let e = this._hullStart;

          do {
            if (this._hullTri[e] === bl) {
              this._hullTri[e] = a;
              break;
            }

            e = this._hullPrev[e];
          } while (e !== this._hullStart);
        }

        this._link(a, hbl);

        this._link(b, halfedges[ar]);

        this._link(ar, bl);

        const br = b0 + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input

        if (i < EDGE_STACK.length) {
          EDGE_STACK[i++] = br;
        }
      } else {
        if (i === 0) break;
        a = EDGE_STACK[--i];
      }
    }

    return ar;
  }

  _link(a, b) {
    this._halfedges[a] = b;
    if (b !== -1) this._halfedges[b] = a;
  } // add a new triangle given vertex indices and adjacent half-edge ids


  _addTriangle(i0, i1, i2, a, b, c) {
    const t = this.trianglesLen;
    this._triangles[t] = i0;
    this._triangles[t + 1] = i1;
    this._triangles[t + 2] = i2;

    this._link(t, a);

    this._link(t + 1, b);

    this._link(t + 2, c);

    this.trianglesLen += 3;
    return t;
  }

} // monotonically increases with real angle, but doesn't need expensive trigonometry


exports.default = Delaunator;

function pseudoAngle(dx, dy) {
  const p = dx / (Math.abs(dx) + Math.abs(dy));
  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
}

function dist(ax, ay, bx, by) {
  const dx = ax - bx;
  const dy = ay - by;
  return dx * dx + dy * dy;
} // return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check


function orientIfSure(px, py, rx, ry, qx, qy) {
  const l = (ry - py) * (qx - px);
  const r = (rx - px) * (qy - py);
  return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;
} // a more robust orientation test that's stable in a given triangle (to fix robustness issues)


function orient(rx, ry, qx, qy, px, py) {
  const sign = orientIfSure(px, py, rx, ry, qx, qy) || orientIfSure(rx, ry, qx, qy, px, py) || orientIfSure(qx, qy, px, py, rx, ry);
  return sign < 0;
}

function inCircle(ax, ay, bx, by, cx, cy, px, py) {
  const dx = ax - px;
  const dy = ay - py;
  const ex = bx - px;
  const ey = by - py;
  const fx = cx - px;
  const fy = cy - py;
  const ap = dx * dx + dy * dy;
  const bp = ex * ex + ey * ey;
  const cp = fx * fx + fy * fy;
  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;
}

function circumradius(ax, ay, bx, by, cx, cy) {
  const dx = bx - ax;
  const dy = by - ay;
  const ex = cx - ax;
  const ey = cy - ay;
  const bl = dx * dx + dy * dy;
  const cl = ex * ex + ey * ey;
  const d = 0.5 / (dx * ey - dy * ex);
  const x = (ey * bl - dy * cl) * d;
  const y = (dx * cl - ex * bl) * d;
  return x * x + y * y;
}

function circumcenter(ax, ay, bx, by, cx, cy) {
  const dx = bx - ax;
  const dy = by - ay;
  const ex = cx - ax;
  const ey = cy - ay;
  const bl = dx * dx + dy * dy;
  const cl = ex * ex + ey * ey;
  const d = 0.5 / (dx * ey - dy * ex);
  const x = ax + (ey * bl - dy * cl) * d;
  const y = ay + (dx * cl - ex * bl) * d;
  return {
    x,
    y
  };
}

function quicksort(ids, dists, left, right) {
  if (right - left <= 20) {
    for (let i = left + 1; i <= right; i++) {
      const temp = ids[i];
      const tempDist = dists[temp];
      let j = i - 1;

      while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];

      ids[j + 1] = temp;
    }
  } else {
    const median = left + right >> 1;
    let i = left + 1;
    let j = right;
    swap(ids, median, i);
    if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);
    if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);
    if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);
    const temp = ids[i];
    const tempDist = dists[temp];

    while (true) {
      do i++; while (dists[ids[i]] < tempDist);

      do j--; while (dists[ids[j]] > tempDist);

      if (j < i) break;
      swap(ids, i, j);
    }

    ids[left + 1] = ids[j];
    ids[j] = temp;

    if (right - i + 1 >= j - left) {
      quicksort(ids, dists, i, right);
      quicksort(ids, dists, left, j - 1);
    } else {
      quicksort(ids, dists, left, j - 1);
      quicksort(ids, dists, i, right);
    }
  }
}

function swap(arr, i, j) {
  const tmp = arr[i];
  arr[i] = arr[j];
  arr[j] = tmp;
}

function defaultGetX(p) {
  return p[0];
}

function defaultGetY(p) {
  return p[1];
}
},{}],"Jacx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const epsilon = 1e-6;

class Path {
  constructor() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null; // end of current subpath

    this._ = "";
  }

  moveTo(x, y) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
  }

  closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  }

  lineTo(x, y) {
    this._ += `L${this._x1 = +x},${this._y1 = +y}`;
  }

  arc(x, y, r) {
    x = +x, y = +y, r = +r;
    const x0 = x + r;
    const y0 = y;
    if (r < 0) throw new Error("negative radius");
    if (this._x1 === null) this._ += `M${x0},${y0}`;else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += "L" + x0 + "," + y0;
    if (!r) return;
    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
  }

  rect(x, y, w, h) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
  }

  value() {
    return this._ || null;
  }

}

exports.default = Path;
},{}],"DM//":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

class Polygon {
  constructor() {
    this._ = [];
  }

  moveTo(x, y) {
    this._.push([x, y]);
  }

  closePath() {
    this._.push(this._[0].slice());
  }

  lineTo(x, y) {
    this._.push([x, y]);
  }

  value() {
    return this._.length ? this._ : null;
  }

}

exports.default = Polygon;
},{}],"j03y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _path = _interopRequireDefault(require("./path.js"));

var _polygon = _interopRequireDefault(require("./polygon.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Voronoi {
  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
    this.delaunay = delaunay;
    this._circumcenters = new Float64Array(delaunay.points.length * 2);
    this.vectors = new Float64Array(delaunay.points.length * 2);
    this.xmax = xmax, this.xmin = xmin;
    this.ymax = ymax, this.ymin = ymin;

    this._init();
  }

  update() {
    this.delaunay.update();

    this._init();

    return this;
  }

  _init() {
    const {
      delaunay: {
        points,
        hull,
        triangles
      },
      vectors
    } = this; // Compute circumcenters.

    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);

    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {
      const t1 = triangles[i] * 2;
      const t2 = triangles[i + 1] * 2;
      const t3 = triangles[i + 2] * 2;
      const x1 = points[t1];
      const y1 = points[t1 + 1];
      const x2 = points[t2];
      const y2 = points[t2 + 1];
      const x3 = points[t3];
      const y3 = points[t3 + 1];
      const dx = x2 - x1;
      const dy = y2 - y1;
      const ex = x3 - x1;
      const ey = y3 - y1;
      const bl = dx * dx + dy * dy;
      const cl = ex * ex + ey * ey;
      const ab = (dx * ey - dy * ex) * 2;

      if (!ab) {
        // degenerate case (collinear diagram)
        x = (x1 + x3) / 2 - 1e8 * ey;
        y = (y1 + y3) / 2 + 1e8 * ex;
      } else if (Math.abs(ab) < 1e-8) {
        // almost equal points (degenerate triangle)
        x = (x1 + x3) / 2;
        y = (y1 + y3) / 2;
      } else {
        const d = 1 / ab;
        x = x1 + (ey * bl - dy * cl) * d;
        y = y1 + (dx * cl - ex * bl) * d;
      }

      circumcenters[j] = x;
      circumcenters[j + 1] = y;
    } // Compute exterior cell rays.


    let h = hull[hull.length - 1];
    let p0,
        p1 = h * 4;
    let x0,
        x1 = points[2 * h];
    let y0,
        y1 = points[2 * h + 1];
    vectors.fill(0);

    for (let i = 0; i < hull.length; ++i) {
      h = hull[i];
      p0 = p1, x0 = x1, y0 = y1;
      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
      vectors[p0 + 2] = vectors[p1] = y0 - y1;
      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
    }
  }

  render(context) {
    const buffer = context == null ? context = new _path.default() : undefined;
    const {
      delaunay: {
        halfedges,
        inedges,
        hull
      },
      circumcenters,
      vectors
    } = this;
    if (hull.length <= 1) return null;

    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = Math.floor(i / 3) * 2;
      const tj = Math.floor(j / 3) * 2;
      const xi = circumcenters[ti];
      const yi = circumcenters[ti + 1];
      const xj = circumcenters[tj];
      const yj = circumcenters[tj + 1];

      this._renderSegment(xi, yi, xj, yj, context);
    }

    let h0,
        h1 = hull[hull.length - 1];

    for (let i = 0; i < hull.length; ++i) {
      h0 = h1, h1 = hull[i];
      const t = Math.floor(inedges[h1] / 3) * 2;
      const x = circumcenters[t];
      const y = circumcenters[t + 1];
      const v = h0 * 4;

      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);

      if (p) this._renderSegment(x, y, p[0], p[1], context);
    }

    return buffer && buffer.value();
  }

  renderBounds(context) {
    const buffer = context == null ? context = new _path.default() : undefined;
    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
    return buffer && buffer.value();
  }

  renderCell(i, context) {
    const buffer = context == null ? context = new _path.default() : undefined;

    const points = this._clip(i);

    if (points === null || !points.length) return;
    context.moveTo(points[0], points[1]);
    let n = points.length;

    while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;

    for (let i = 2; i < n; i += 2) {
      if (points[i] !== points[i - 2] || points[i + 1] !== points[i - 1]) context.lineTo(points[i], points[i + 1]);
    }

    context.closePath();
    return buffer && buffer.value();
  }

  *cellPolygons() {
    const {
      delaunay: {
        points
      }
    } = this;

    for (let i = 0, n = points.length / 2; i < n; ++i) {
      const cell = this.cellPolygon(i);
      if (cell) cell.index = i, yield cell;
    }
  }

  cellPolygon(i) {
    const polygon = new _polygon.default();
    this.renderCell(i, polygon);
    return polygon.value();
  }

  _renderSegment(x0, y0, x1, y1, context) {
    let S;

    const c0 = this._regioncode(x0, y0);

    const c1 = this._regioncode(x1, y1);

    if (c0 === 0 && c1 === 0) {
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
      context.moveTo(S[0], S[1]);
      context.lineTo(S[2], S[3]);
    }
  }

  contains(i, x, y) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
    return this.delaunay._step(i, x, y) === i;
  }

  *neighbors(i) {
    const ci = this._clip(i);

    if (ci) for (const j of this.delaunay.neighbors(i)) {
      const cj = this._clip(j); // find the common edge


      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {
        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
          if (ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]) {
            yield j;
            break loop;
          }
        }
      }
    }
  }

  _cell(i) {
    const {
      circumcenters,
      delaunay: {
        inedges,
        halfedges,
        triangles
      }
    } = this;
    const e0 = inedges[i];
    if (e0 === -1) return null; // coincident point

    const points = [];
    let e = e0;

    do {
      const t = Math.floor(e / 3);
      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation

      e = halfedges[e];
    } while (e !== e0 && e !== -1);

    return points;
  }

  _clip(i) {
    // degenerate case (1 valid point: return the box)
    if (i === 0 && this.delaunay.hull.length === 1) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }

    const points = this._cell(i);

    if (points === null) return null;
    const {
      vectors: V
    } = this;
    const v = i * 4;
    return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);
  }

  _clipFinite(i, points) {
    const n = points.length;
    let P = null;
    let x0,
        y0,
        x1 = points[n - 2],
        y1 = points[n - 1];

    let c0,
        c1 = this._regioncode(x1, y1);

    let e0, e1;

    for (let j = 0; j < n; j += 2) {
      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
      c0 = c1, c1 = this._regioncode(x1, y1);

      if (c0 === 0 && c1 === 0) {
        e0 = e1, e1 = 0;
        if (P) P.push(x1, y1);else P = [x1, y1];
      } else {
        let S, sx0, sy0, sx1, sy1;

        if (c0 === 0) {
          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
          [sx0, sy0, sx1, sy1] = S;
        } else {
          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
          [sx1, sy1, sx0, sy0] = S;
          e0 = e1, e1 = this._edgecode(sx0, sy0);
          if (e0 && e1) this._edge(i, e0, e1, P, P.length);
          if (P) P.push(sx0, sy0);else P = [sx0, sy0];
        }

        e0 = e1, e1 = this._edgecode(sx1, sy1);
        if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        if (P) P.push(sx1, sy1);else P = [sx1, sy1];
      }
    }

    if (P) {
      e0 = e1, e1 = this._edgecode(P[0], P[1]);
      if (e0 && e1) this._edge(i, e0, e1, P, P.length);
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }

    return P;
  }

  _clipSegment(x0, y0, x1, y1, c0, c1) {
    while (true) {
      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];
      if (c0 & c1) return null;
      let x,
          y,
          c = c0 || c1;
      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
    }
  }

  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
    let P = Array.from(points),
        p;
    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);

    if (P = this._clipFinite(i, P)) {
      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {
        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
      }
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
    }

    return P;
  }

  _edge(i, e0, e1, P, j) {
    while (e0 !== e1) {
      let x, y;

      switch (e0) {
        case 0b0101:
          e0 = 0b0100;
          continue;
        // top-left

        case 0b0100:
          e0 = 0b0110, x = this.xmax, y = this.ymin;
          break;
        // top

        case 0b0110:
          e0 = 0b0010;
          continue;
        // top-right

        case 0b0010:
          e0 = 0b1010, x = this.xmax, y = this.ymax;
          break;
        // right

        case 0b1010:
          e0 = 0b1000;
          continue;
        // bottom-right

        case 0b1000:
          e0 = 0b1001, x = this.xmin, y = this.ymax;
          break;
        // bottom

        case 0b1001:
          e0 = 0b0001;
          continue;
        // bottom-left

        case 0b0001:
          e0 = 0b0101, x = this.xmin, y = this.ymin;
          break;
        // left
      }

      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {
        P.splice(j, 0, x, y), j += 2;
      }
    }

    if (P.length > 4) {
      for (let i = 0; i < P.length; i += 2) {
        const j = (i + 2) % P.length,
              k = (i + 4) % P.length;
        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) P.splice(j, 2), i -= 2;
      }
    }

    return j;
  }

  _project(x0, y0, vx, vy) {
    let t = Infinity,
        c,
        x,
        y;

    if (vy < 0) {
      // top
      if (y0 <= this.ymin) return null;
      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
    } else if (vy > 0) {
      // bottom
      if (y0 >= this.ymax) return null;
      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
    }

    if (vx > 0) {
      // right
      if (x0 >= this.xmax) return null;
      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
    } else if (vx < 0) {
      // left
      if (x0 <= this.xmin) return null;
      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
    }

    return [x, y];
  }

  _edgecode(x, y) {
    return (x === this.xmin ? 0b0001 : x === this.xmax ? 0b0010 : 0b0000) | (y === this.ymin ? 0b0100 : y === this.ymax ? 0b1000 : 0b0000);
  }

  _regioncode(x, y) {
    return (x < this.xmin ? 0b0001 : x > this.xmax ? 0b0010 : 0b0000) | (y < this.ymin ? 0b0100 : y > this.ymax ? 0b1000 : 0b0000);
  }

}

exports.default = Voronoi;
},{"./path.js":"Jacx","./polygon.js":"DM//"}],"UFGE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _delaunator = _interopRequireDefault(require("delaunator"));

var _path = _interopRequireDefault(require("./path.js"));

var _polygon = _interopRequireDefault(require("./polygon.js"));

var _voronoi = _interopRequireDefault(require("./voronoi.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const tau = 2 * Math.PI,
      pow = Math.pow;

function pointX(p) {
  return p[0];
}

function pointY(p) {
  return p[1];
} // A triangulation is collinear if all its triangles have a non-null area


function collinear(d) {
  const {
    triangles,
    coords
  } = d;

  for (let i = 0; i < triangles.length; i += 3) {
    const a = 2 * triangles[i],
          b = 2 * triangles[i + 1],
          c = 2 * triangles[i + 2],
          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
    if (cross > 1e-10) return false;
  }

  return true;
}

function jitter(x, y, r) {
  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];
}

class Delaunay {
  static from(points, fx = pointX, fy = pointY, that) {
    return new Delaunay("length" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));
  }

  constructor(points) {
    this._delaunator = new _delaunator.default(points);
    this.inedges = new Int32Array(points.length / 2);
    this._hullIndex = new Int32Array(points.length / 2);
    this.points = this._delaunator.coords;

    this._init();
  }

  update() {
    this._delaunator.update();

    this._init();

    return this;
  }

  _init() {
    const d = this._delaunator,
          points = this.points; // check for collinear

    if (d.hull && d.hull.length > 2 && collinear(d)) {
      this.collinear = Int32Array.from({
        length: points.length / 2
      }, (_, i) => i).sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors

      const e = this.collinear[0],
            f = this.collinear[this.collinear.length - 1],
            bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],
            r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);

      for (let i = 0, n = points.length / 2; i < n; ++i) {
        const p = jitter(points[2 * i], points[2 * i + 1], r);
        points[2 * i] = p[0];
        points[2 * i + 1] = p[1];
      }

      this._delaunator = new _delaunator.default(points);
    } else {
      delete this.collinear;
    }

    const halfedges = this.halfedges = this._delaunator.halfedges;
    const hull = this.hull = this._delaunator.hull;
    const triangles = this.triangles = this._delaunator.triangles;
    const inedges = this.inedges.fill(-1);

    const hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge
    // Used to give the first neighbor of each point; for this reason,
    // on the hull we give priority to exterior halfedges


    for (let e = 0, n = halfedges.length; e < n; ++e) {
      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
    }

    for (let i = 0, n = hull.length; i < n; ++i) {
      hullIndex[hull[i]] = i;
    } // degenerate case: 1 or 2 (distinct) points


    if (hull.length <= 2 && hull.length > 0) {
      this.triangles = new Int32Array(3).fill(-1);
      this.halfedges = new Int32Array(3).fill(-1);
      this.triangles[0] = hull[0];
      this.triangles[1] = hull[1];
      this.triangles[2] = hull[1];
      inedges[hull[0]] = 1;
      if (hull.length === 2) inedges[hull[1]] = 0;
    }
  }

  voronoi(bounds) {
    return new _voronoi.default(this, bounds);
  }

  *neighbors(i) {
    const {
      inedges,
      hull,
      _hullIndex,
      halfedges,
      triangles,
      collinear
    } = this; // degenerate case with several collinear points

    if (collinear) {
      const l = collinear.indexOf(i);
      if (l > 0) yield collinear[l - 1];
      if (l < collinear.length - 1) yield collinear[l + 1];
      return;
    }

    const e0 = inedges[i];
    if (e0 === -1) return; // coincident point

    let e = e0,
        p0 = -1;

    do {
      yield p0 = triangles[e];
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) return; // bad triangulation

      e = halfedges[e];

      if (e === -1) {
        const p = hull[(_hullIndex[i] + 1) % hull.length];
        if (p !== p0) yield p;
        return;
      }
    } while (e !== e0);
  }

  find(x, y, i = 0) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
    const i0 = i;
    let c;

    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;

    return c;
  }

  _step(i, x, y) {
    const {
      inedges,
      hull,
      _hullIndex,
      halfedges,
      triangles,
      points
    } = this;
    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
    let c = i;
    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);
    const e0 = inedges[i];
    let e = e0;

    do {
      let t = triangles[e];
      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);
      if (dt < dc) dc = dt, c = t;
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation

      e = halfedges[e];

      if (e === -1) {
        e = hull[(_hullIndex[i] + 1) % hull.length];

        if (e !== t) {
          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;
        }

        break;
      }
    } while (e !== e0);

    return c;
  }

  render(context) {
    const buffer = context == null ? context = new _path.default() : undefined;
    const {
      points,
      halfedges,
      triangles
    } = this;

    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = triangles[i] * 2;
      const tj = triangles[j] * 2;
      context.moveTo(points[ti], points[ti + 1]);
      context.lineTo(points[tj], points[tj + 1]);
    }

    this.renderHull(context);
    return buffer && buffer.value();
  }

  renderPoints(context, r = 2) {
    const buffer = context == null ? context = new _path.default() : undefined;
    const {
      points
    } = this;

    for (let i = 0, n = points.length; i < n; i += 2) {
      const x = points[i],
            y = points[i + 1];
      context.moveTo(x + r, y);
      context.arc(x, y, r, 0, tau);
    }

    return buffer && buffer.value();
  }

  renderHull(context) {
    const buffer = context == null ? context = new _path.default() : undefined;
    const {
      hull,
      points
    } = this;
    const h = hull[0] * 2,
          n = hull.length;
    context.moveTo(points[h], points[h + 1]);

    for (let i = 1; i < n; ++i) {
      const h = 2 * hull[i];
      context.lineTo(points[h], points[h + 1]);
    }

    context.closePath();
    return buffer && buffer.value();
  }

  hullPolygon() {
    const polygon = new _polygon.default();
    this.renderHull(polygon);
    return polygon.value();
  }

  renderTriangle(i, context) {
    const buffer = context == null ? context = new _path.default() : undefined;
    const {
      points,
      triangles
    } = this;
    const t0 = triangles[i *= 3] * 2;
    const t1 = triangles[i + 1] * 2;
    const t2 = triangles[i + 2] * 2;
    context.moveTo(points[t0], points[t0 + 1]);
    context.lineTo(points[t1], points[t1 + 1]);
    context.lineTo(points[t2], points[t2 + 1]);
    context.closePath();
    return buffer && buffer.value();
  }

  *trianglePolygons() {
    const {
      triangles
    } = this;

    for (let i = 0, n = triangles.length / 3; i < n; ++i) {
      yield this.trianglePolygon(i);
    }
  }

  trianglePolygon(i) {
    const polygon = new _polygon.default();
    this.renderTriangle(i, polygon);
    return polygon.value();
  }

}

exports.default = Delaunay;

function flatArray(points, fx, fy, that) {
  const n = points.length;
  const array = new Float64Array(n * 2);

  for (let i = 0; i < n; ++i) {
    const p = points[i];
    array[i * 2] = fx.call(that, p, i, points);
    array[i * 2 + 1] = fy.call(that, p, i, points);
  }

  return array;
}

function* flatIterable(points, fx, fy, that) {
  let i = 0;

  for (const p of points) {
    yield fx.call(that, p, i, points);
    yield fy.call(that, p, i, points);
    ++i;
  }
}
},{"delaunator":"4HpL","./path.js":"Jacx","./polygon.js":"DM//","./voronoi.js":"j03y"}],"2V5J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Delaunay", {
  enumerable: true,
  get: function () {
    return _delaunay.default;
  }
});
Object.defineProperty(exports, "Voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _delaunay = _interopRequireDefault(require("./delaunay.js"));

var _voronoi = _interopRequireDefault(require("./voronoi.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./delaunay.js":"UFGE","./voronoi.js":"j03y"}],"7SC/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}
},{}],"mU2J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatValue = exports.csvFormatRow = exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
var csvFormatRow = csv.formatRow;
exports.csvFormatRow = csvFormatRow;
var csvFormatValue = csv.formatValue;
exports.csvFormatValue = csvFormatValue;
},{"./dsv.js":"7SC/"}],"zpVZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatValue = exports.tsvFormatRow = exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
var tsvFormatRow = tsv.formatRow;
exports.tsvFormatRow = tsvFormatRow;
var tsvFormatValue = tsv.formatValue;
exports.tsvFormatValue = tsvFormatValue;
},{"./dsv.js":"7SC/"}],"7bjL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number,
        m;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    } else continue;
    object[key] = value;
  }

  return object;
} // https://github.com/d3/d3-dsv/issues/45


const fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
},{}],"mQVF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "csvFormatRow", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRow;
  }
});
Object.defineProperty(exports, "csvFormatValue", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatValue;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "tsvFormatRow", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRow;
  }
});
Object.defineProperty(exports, "tsvFormatValue", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatValue;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv.js"));

var _csv = require("./csv.js");

var _tsv = require("./tsv.js");

var _autoType = _interopRequireDefault(require("./autoType.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv.js":"7SC/","./csv.js":"mU2J","./tsv.js":"zpVZ","./autoType.js":"7bjL"}],"NEvU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"W4GS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"/QFe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"fvyQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"mQVF","./text.js":"/QFe"}],"oqjg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"Lvc+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  if (response.status === 204 || response.status === 205) return;
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"FRc5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return (input, init) => (0, _text.default)(input, init).then(text => new DOMParser().parseFromString(text, type));
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text.js":"/QFe"}],"hNko":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob.js"));

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _dsv = _interopRequireWildcard(require("./dsv.js"));

var _image = _interopRequireDefault(require("./image.js"));

var _json = _interopRequireDefault(require("./json.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _xml = _interopRequireWildcard(require("./xml.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob.js":"NEvU","./buffer.js":"W4GS","./dsv.js":"fvyQ","./image.js":"oqjg","./json.js":"Lvc+","./text.js":"/QFe","./xml.js":"FRc5"}],"y+F4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes,
      strength = 1;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  return force;
}
},{}],"c4hk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  const x = +this._x.call(null, d),
        y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"DeJI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0 || 1,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"7HTB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"JRL4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"BPLw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"2t1g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad.js":"BPLw"}],"3wnj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"aU2q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"PC8q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"MOvE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad.js":"BPLw"}],"6Edv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad.js":"BPLw"}],"2+yq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"FeNP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"HCic":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add.js"));

var _cover = _interopRequireDefault(require("./cover.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _remove = _interopRequireWildcard(require("./remove.js"));

var _root = _interopRequireDefault(require("./root.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _visit = _interopRequireDefault(require("./visit.js"));

var _visitAfter = _interopRequireDefault(require("./visitAfter.js"));

var _x = _interopRequireWildcard(require("./x.js"));

var _y = _interopRequireWildcard(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add.js":"c4hk","./cover.js":"DeJI","./data.js":"7HTB","./extent.js":"JRL4","./find.js":"2t1g","./remove.js":"3wnj","./root.js":"aU2q","./size.js":"PC8q","./visit.js":"MOvE","./visitAfter.js":"6Edv","./x.js":"2+yq","./y.js":"FeNP"}],"oxc3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree.js":"HCic"}],"jmDl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(random) {
  return (random() - 0.5) * 1e-6;
}
},{}],"ZCSV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Quadtree = require("d3-quadtree");

var _constant = _interopRequireDefault(require("./constant.js"));

var _jiggle = _interopRequireDefault(require("./jiggle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      random,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(random), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(random), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"d3-quadtree":"oxc3","./constant.js":"5O/Y","./jiggle.js":"jmDl"}],"M788":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

var _jiggle = _interopRequireDefault(require("./jiggle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("node not found: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      random,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)(random);
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)(random);
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant.js":"5O/Y","./jiggle.js":"jmDl"}],"ylPq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const a = 1664525;
const c = 1013904223;
const m = 4294967296; // 2^32

function _default() {
  let s = 1;
  return () => (s = (a * s + c) % m) / m;
}
},{}],"lwF8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var _lcg = _interopRequireDefault(require("./lcg.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = new Map(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end"),
      random = (0, _lcg.default)();
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.forEach(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(0.5 + i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes, random);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    randomSource: function (_) {
      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"UU/c","d3-timer":"CBES","./lcg.js":"ylPq"}],"cead":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Quadtree = require("d3-quadtree");

var _constant = _interopRequireDefault(require("./constant.js"));

var _jiggle = _interopRequireDefault(require("./jiggle.js"));

var _simulation = require("./simulation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      random,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(random), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(random), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(random), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(random), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"d3-quadtree":"oxc3","./constant.js":"5O/Y","./jiggle.js":"jmDl","./simulation.js":"lwF8"}],"qX1S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant.js":"5O/Y"}],"AO2h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant.js":"5O/Y"}],"9SU+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant.js":"5O/Y"}],"YpA1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center.js"));

var _collide = _interopRequireDefault(require("./collide.js"));

var _link = _interopRequireDefault(require("./link.js"));

var _manyBody = _interopRequireDefault(require("./manyBody.js"));

var _radial = _interopRequireDefault(require("./radial.js"));

var _simulation = _interopRequireDefault(require("./simulation.js"));

var _x = _interopRequireDefault(require("./x.js"));

var _y = _interopRequireDefault(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center.js":"y+F4","./collide.js":"ZCSV","./link.js":"M788","./manyBody.js":"cead","./radial.js":"qX1S","./simulation.js":"lwF8","./x.js":"AO2h","./y.js":"9SU+"}],"c+Jh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.formatDecimalParts = formatDecimalParts;

function _default(x) {
  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
} // Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].


function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"m3FQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = require("./formatDecimal.js");

function _default(x) {
  return x = (0, _formatDecimal.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"c+Jh"}],"e1cc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"Wswx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"gePe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"dWsa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"KTGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = require("./formatDecimal.js");

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"c+Jh"}],"e8g/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = require("./formatDecimal.js");

function _default(x, p) {
  var d = (0, _formatDecimal.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"c+Jh"}],"uFUO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": (x, p) => (x * 100).toFixed(p),
  "b": x => Math.round(x).toString(2),
  "c": x => x + "",
  "d": _formatDecimal.default,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": x => Math.round(x).toString(8),
  "p": (x, p) => (0, _formatRounded.default)(x * 100, p),
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": x => Math.round(x).toString(16).toUpperCase(),
  "x": x => Math.round(x).toString(16)
};
exports.default = _default;
},{"./formatDecimal.js":"c+Jh","./formatPrefixAuto.js":"KTGF","./formatRounded.js":"e8g/"}],"QWQX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!

        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.

        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.

        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"m3FQ","./formatGroup.js":"e1cc","./formatNumerals.js":"Wswx","./formatSpecifier.js":"gePe","./formatTrim.js":"dWsa","./formatTypes.js":"uFUO","./formatPrefixAuto.js":"KTGF","./identity.js":"nPOL"}],"y/m0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"QWQX"}],"QL8u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"m3FQ"}],"DzQJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"m3FQ"}],"4afb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"m3FQ"}],"4gWe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"y/m0","./locale.js":"QWQX","./formatSpecifier.js":"gePe","./precisionFixed.js":"QL8u","./precisionPrefix.js":"DzQJ","./precisionRound.js":"4afb"}],"sEgP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.hypot = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var hypot = Math.hypot;
exports.hypot = hypot;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"UPwg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"XBFK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"dpXv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _d3Array = require("d3-array");

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = new _d3Array.Adder(); // hello?

exports.areaRingSum = areaRingSum;
var areaSum = new _d3Array.Adder(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    exports.areaRingSum = areaRingSum = new _d3Array.Adder();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum = new _d3Array.Adder();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"d3-array":"cBuZ","./math.js":"sEgP","./noop.js":"UPwg","./stream.js":"XBFK"}],"+rFM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math.js");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math.js":"sEgP"}],"4wXR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _area = require("./area.js");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0, phi0, lambda1, phi1, // bounds
lambda2, // previous lambda-coordinate
lambda00, phi00, // first point
p0, // previous 3D point
deltaSum, ranges, range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum = new _d3Array.Adder();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"d3-array":"cBuZ","./area.js":"dpXv","./cartesian.js":"+rFM","./math.js":"sEgP","./stream.js":"XBFK"}],"pQGp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.hypot)(cx, cy, cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2.add(v * cx);
  Y2.add(v * cy);
  Z2.add(v * cz);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = 0;
  X2 = new _d3Array.Adder();
  Y2 = new _d3Array.Adder();
  Z2 = new _d3Array.Adder();
  (0, _stream.default)(object, centroidStream);
  var x = +X2,
      y = +Y2,
      z = +Z2,
      m = (0, _math.hypot)(x, y, z); // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = (0, _math.hypot)(x, y, z); // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / m) * _math.degrees];
}
},{"d3-array":"cBuZ","./math.js":"sEgP","./noop.js":"UPwg","./stream.js":"XBFK"}],"hCea":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"KwdP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose.js":"hCea","./math.js":"sEgP"}],"dbGM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

var _rotation = require("./rotation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian.js":"+rFM","./constant.js":"5O/Y","./math.js":"sEgP","./rotation.js":"KwdP"}],"VrlK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop.js":"UPwg"}],"j4Ms":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math.js":"sEgP"}],"03nq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x;

    if ((0, _pointEqual.default)(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();

        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

        stream.lineEnd();
        return;
      } // handle degenerate cases by moving the point


      p1[0] += 2 * _math.epsilon;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual.js":"j4Ms","../math.js":"sEgP"}],"Cmis":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  var sum = new _d3Array.Adder();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon2) ^ winding & 1;
}
},{"d3-array":"cBuZ","./cartesian.js":"+rFM","./math.js":"sEgP"}],"bbiM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _math = require("../math.js");

var _polygonContains = _interopRequireDefault(require("../polygonContains.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer.js":"VrlK","./rejoin.js":"03nq","../math.js":"sEgP","../polygonContains.js":"Cmis","d3-array":"cBuZ"}],"CWnN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index.js":"bbiM","../math.js":"sEgP"}],"1uul":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _circle = require("../circle.js");

var _math = require("../math.js");

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();

        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) point1[2] = 1;
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian.js":"+rFM","../circle.js":"dbGM","../math.js":"sEgP","../pointEqual.js":"j4Ms","./index.js":"bbiM"}],"RhqQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"E6SH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math.js");

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math.js":"sEgP","./buffer.js":"VrlK","./line.js":"RhqQ","./rejoin.js":"03nq","d3-array":"cBuZ"}],"Pttt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle.js":"E6SH"}],"rgN/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum, lambda0, sinPhi0, cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum = new _d3Array.Adder();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"d3-array":"cBuZ","./math.js":"sEgP","./noop.js":"UPwg","./stream.js":"XBFK"}],"IoFW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length.js":"rgN/"}],"bl0/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains.js":"Cmis","./distance.js":"IoFW","./math.js":"sEgP"}],"+fWg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math.js");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"cBuZ","./math.js":"sEgP"}],"PyvU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math.js":"sEgP"}],"7sNJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _default = x => x;

exports.default = _default;
},{}],"tBtz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Array = require("d3-array");

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = new _d3Array.Adder(),
    areaRingSum = new _d3Array.Adder(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum = new _d3Array.Adder();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum = new _d3Array.Adder();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"d3-array":"cBuZ","../math.js":"sEgP","../noop.js":"UPwg"}],"Mzp9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop.js":"UPwg"}],"HLbf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math.js":"sEgP"}],"ndK6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math.js":"sEgP","../noop.js":"UPwg"}],"CqmG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Array = require("d3-array");

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = new _d3Array.Adder(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum = new _d3Array.Adder();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"d3-array":"cBuZ","../math.js":"sEgP","../noop.js":"UPwg"}],"mB17":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"01A7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity.js"));

var _stream = _interopRequireDefault(require("../stream.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _context = _interopRequireDefault(require("./context.js"));

var _measure = _interopRequireDefault(require("./measure.js"));

var _string = _interopRequireDefault(require("./string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity.js":"7sNJ","../stream.js":"XBFK","./area.js":"tBtz","./bounds.js":"Mzp9","./centroid.js":"HLbf","./context.js":"ndK6","./measure.js":"CqmG","./string.js":"mB17"}],"ubFV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"Ty3O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream.js"));

var _bounds = _interopRequireDefault(require("../path/bounds.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream.js":"XBFK","../path/bounds.js":"Mzp9"}],"1vIa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _math = require("../math.js");

var _transform = require("../transform.js");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian.js":"+rFM","../math.js":"sEgP","../transform.js":"ubFV"}],"t1yD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian.js"));

var _circle = _interopRequireDefault(require("../clip/circle.js"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _compose = _interopRequireDefault(require("../compose.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _math = require("../math.js");

var _rotation = require("../rotation.js");

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _resample = _interopRequireDefault(require("./resample.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    x *= sx;
    y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate angle
  sx = 1,
      // reflectX
  sy = 1,
      // reflectX
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.reflectX = function (_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function (_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian.js":"CWnN","../clip/circle.js":"1uul","../clip/rectangle.js":"E6SH","../compose.js":"hCea","../identity.js":"7sNJ","../math.js":"sEgP","../rotation.js":"KwdP","../transform.js":"ubFV","./fit.js":"Ty3O","./resample.js":"1vIa"}],"FzMl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math.js");

var _index = require("./index.js");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math.js":"sEgP","./index.js":"t1yD"}],"5xg5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math.js":"sEgP"}],"uvEu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _cylindricalEqualArea = require("./cylindricalEqualArea.js");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y,
        l = (0, _math.atan2)(x, (0, _math.abs)(r0y)) * (0, _math.sign)(r0y);
    if (r0y * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(r0y);
    return [l / n, (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math.js":"sEgP","./conic.js":"FzMl","./cylindricalEqualArea.js":"5xg5"}],"HUYT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea.js":"uvEu"}],"WyCU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math.js");

var _albers = _interopRequireDefault(require("./albers.js"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math.js":"sEgP","./albers.js":"HUYT","./conicEqualArea.js":"uvEu","./fit.js":"Ty3O"}],"/4FJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    if (k === Infinity) return [2, 0];
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math.js":"sEgP"}],"c9jZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math.js":"sEgP","./azimuthal.js":"/4FJ","./index.js":"t1yD"}],"DPfU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math.js":"sEgP","./azimuthal.js":"/4FJ","./index.js":"t1yD"}],"Yvwi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math.js");

var _rotation = _interopRequireDefault(require("../rotation.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math.js":"sEgP","../rotation.js":"KwdP","./index.js":"t1yD"}],"QZ/H":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _mercator = require("./mercator.js");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy),
        l = (0, _math.atan2)(x, (0, _math.abs)(fy)) * (0, _math.sign)(fy);
    if (fy * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(fy);
    return [l / n, 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math.js":"sEgP","./conic.js":"FzMl","./mercator.js":"Yvwi"}],"xN4O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index.js":"t1yD"}],"wKng":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _equirectangular = require("./equirectangular.js");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y,
        l = (0, _math.atan2)(x, (0, _math.abs)(gy)) * (0, _math.sign)(gy);
    if (gy * n < 0) l -= _math.pi * (0, _math.sign)(x) * (0, _math.sign)(gy);
    return [l / n, g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math.js":"sEgP","./conic.js":"FzMl","./equirectangular.js":"xN4O"}],"svXP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"t1yD","../math.js":"sEgP"}],"bmsS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math.js":"sEgP","./azimuthal.js":"/4FJ","./index.js":"t1yD"}],"LapZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      // scale, translate and reflect
  alpha = 0,
      ca,
      sa,
      // angle
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  kx = 1,
      ky = 1,
      transform = (0, _transform.transformer)({
    point: function (x, y) {
      var p = projection([x, y]);
      this.stream.point(p[0], p[1]);
    }
  }),
      postclip = _identity.default,
      cache,
      cacheStream;

  function reset() {
    kx = k * sx;
    ky = k * sy;
    cache = cacheStream = null;
    return projection;
  }

  function projection(p) {
    var x = p[0] * kx,
        y = p[1] * ky;

    if (alpha) {
      var t = y * ca - x * sa;
      x = x * ca + y * sa;
      y = t;
    }

    return [x + tx, y + ty];
  }

  projection.invert = function (p) {
    var x = p[0] - tx,
        y = p[1] - ty;

    if (alpha) {
      var t = y * ca + x * sa;
      x = x * ca - y * sa;
      y = t;
    }

    return [x / kx, y / ky];
  };

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, reset()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, sa = (0, _math.sin)(alpha), ca = (0, _math.cos)(alpha), reset()) : alpha * _math.degrees;
  };

  projection.reflectX = function (_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };

  projection.reflectY = function (_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  return projection;
}
},{"../clip/rectangle.js":"E6SH","../identity.js":"7sNJ","../transform.js":"ubFV","./fit.js":"Ty3O","../math.js":"sEgP"}],"yWpl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index.js":"t1yD","../math.js":"sEgP"}],"H7pW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math.js":"sEgP","./azimuthal.js":"/4FJ","./index.js":"t1yD"}],"bNxf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math.js":"sEgP","./azimuthal.js":"/4FJ","./index.js":"t1yD"}],"BGbj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math.js");

var _mercator = require("./mercator.js");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math.js":"sEgP","./mercator.js":"Yvwi"}],"LMxt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _circle = _interopRequireDefault(require("./circle.js"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian.js"));

var _circle2 = _interopRequireDefault(require("./clip/circle.js"));

var _extent = _interopRequireDefault(require("./clip/extent.js"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _graticule = _interopRequireWildcard(require("./graticule.js"));

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

var _length = _interopRequireDefault(require("./length.js"));

var _index = _interopRequireDefault(require("./path/index.js"));

var _albers = _interopRequireDefault(require("./projection/albers.js"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa.js"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea.js"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant.js"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal.js"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea.js"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant.js"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth.js"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular.js"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic.js"));

var _identity = _interopRequireDefault(require("./projection/identity.js"));

var _index2 = _interopRequireWildcard(require("./projection/index.js"));

var _mercator = _interopRequireWildcard(require("./projection/mercator.js"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1.js"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic.js"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic.js"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator.js"));

var _rotation = _interopRequireDefault(require("./rotation.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"dpXv","./bounds.js":"4wXR","./centroid.js":"pQGp","./circle.js":"dbGM","./clip/antimeridian.js":"CWnN","./clip/circle.js":"1uul","./clip/extent.js":"Pttt","./clip/rectangle.js":"E6SH","./contains.js":"bl0/","./distance.js":"IoFW","./graticule.js":"+fWg","./interpolate.js":"PyvU","./length.js":"rgN/","./path/index.js":"01A7","./projection/albers.js":"HUYT","./projection/albersUsa.js":"WyCU","./projection/azimuthalEqualArea.js":"c9jZ","./projection/azimuthalEquidistant.js":"DPfU","./projection/conicConformal.js":"QZ/H","./projection/conicEqualArea.js":"uvEu","./projection/conicEquidistant.js":"wKng","./projection/equalEarth.js":"svXP","./projection/equirectangular.js":"xN4O","./projection/gnomonic.js":"bmsS","./projection/identity.js":"LapZ","./projection/index.js":"t1yD","./projection/mercator.js":"Yvwi","./projection/naturalEarth1.js":"yWpl","./projection/orthographic.js":"H7pW","./projection/stereographic.js":"bNxf","./projection/transverseMercator.js":"BGbj","./rotation.js":"KwdP","./stream.js":"XBFK","./transform.js":"ubFV"}],"brcY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"7jJj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"YN75":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback, that) {
  let index = -1;

  for (const node of this) {
    callback.call(that, node, ++index, this);
  }

  return this;
}
},{}],"b04E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback, that) {
  var node = this,
      nodes = [node],
      children,
      i,
      index = -1;

  while (node = nodes.pop()) {
    callback.call(that, node, ++index, this);

    if (children = node.children) {
      for (i = children.length - 1; i >= 0; --i) {
        nodes.push(children[i]);
      }
    }
  }

  return this;
}
},{}],"oHKJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback, that) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n,
      index = -1;

  while (node = nodes.pop()) {
    next.push(node);

    if (children = node.children) {
      for (i = 0, n = children.length; i < n; ++i) {
        nodes.push(children[i]);
      }
    }
  }

  while (node = next.pop()) {
    callback.call(that, node, ++index, this);
  }

  return this;
}
},{}],"j6t2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback, that) {
  let index = -1;

  for (const node of this) {
    if (callback.call(that, node, ++index, this)) {
      return node;
    }
  }
}
},{}],"Btd4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"q7tv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"5x0Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"fOge":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"+Res":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"gBUX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"dNlo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function* _default() {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      yield node;

      if (children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          next.push(children[i]);
        }
      }
    }
  } while (next.length);
}
},{}],"LCo+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachBefore = _interopRequireDefault(require("./eachBefore.js"));

var _eachAfter = _interopRequireDefault(require("./eachAfter.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _path = _interopRequireDefault(require("./path.js"));

var _ancestors = _interopRequireDefault(require("./ancestors.js"));

var _descendants = _interopRequireDefault(require("./descendants.js"));

var _leaves = _interopRequireDefault(require("./leaves.js"));

var _links = _interopRequireDefault(require("./links.js"));

var _iterator = _interopRequireDefault(require("./iterator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  if (data instanceof Map) {
    data = [undefined, data];
    if (children === undefined) children = mapChildren;
  } else if (children === undefined) {
    children = objectChildren;
  }

  var root = new Node(data),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  while (node = nodes.pop()) {
    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function objectChildren(d) {
  return d.children;
}

function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}

function copyData(node) {
  if (node.data.value !== undefined) node.value = node.data.value;
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  find: _find.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy,
  [Symbol.iterator]: _iterator.default
};
},{"./count.js":"7jJj","./each.js":"YN75","./eachBefore.js":"b04E","./eachAfter.js":"oHKJ","./find.js":"j6t2","./sum.js":"Btd4","./sort.js":"q7tv","./path.js":"5x0Y","./ancestors.js":"fOge","./descendants.js":"kO0T","./leaves.js":"+Res","./links.js":"gBUX","./iterator.js":"dNlo"}],"Wl9w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.shuffle = shuffle;

function _default(x) {
  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
  : Array.from(x); // Map, Set, iterable, string, or anything else
}

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"ZzhU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array.js");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(Array.from(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array.js":"Wl9w"}],"efS5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _array = _interopRequireDefault(require("../array.js"));

var _enclose = _interopRequireDefault(require("./enclose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = (circles = (0, _array.default)(circles)).length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"../array.js":"Wl9w","./enclose.js":"ZzhU"}],"OleL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"k/YM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"aVuj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings.js");

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings.js":"efS5","../accessors.js":"OleL","../constant.js":"k/YM"}],"PETl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"L3aV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"h/+W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round.js":"PETl","./treemap/dice.js":"L3aV"}],"bJDQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors.js");

var _index = require("./hierarchy/index.js");

var preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var nodes = Array.from(data),
        n = nodes.length,
        d,
        i,
        root,
        parent,
        node,
        nodeId,
        nodeKey,
        nodeByKey = new Map();

    for (i = 0; i < n; ++i) {
      d = nodes[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = node.id = nodeId;
        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);
      }

      if ((nodeId = parentId(d, i, data)) != null && (nodeId += "")) {
        node.parent = nodeId;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i];

      if (nodeId = node.parent) {
        parent = nodeByKey.get(nodeId);
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      } else {
        if (root) throw new Error("multiple roots");
        root = node;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors.js":"OleL","./hierarchy/index.js":"LCo+"}],"7nrL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index.js");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index.js":"LCo+"}],"RVbL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"jyLZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice.js":"L3aV","./slice.js":"RVbL"}],"3cC5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round.js"));

var _squarify = _interopRequireDefault(require("./squarify.js"));

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round.js":"PETl","./squarify.js":"jyLZ","../accessors.js":"OleL","../constant.js":"k/YM"}],"cDuG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"dACy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice.js":"L3aV","./slice.js":"RVbL"}],"GrWc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _squarify = require("./squarify.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice.js":"L3aV","./slice.js":"RVbL","./squarify.js":"jyLZ"}],"wNQE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster.js"));

var _index = _interopRequireDefault(require("./hierarchy/index.js"));

var _index2 = _interopRequireDefault(require("./pack/index.js"));

var _siblings = _interopRequireDefault(require("./pack/siblings.js"));

var _enclose = _interopRequireDefault(require("./pack/enclose.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _stratify = _interopRequireDefault(require("./stratify.js"));

var _tree = _interopRequireDefault(require("./tree.js"));

var _index3 = _interopRequireDefault(require("./treemap/index.js"));

var _binary = _interopRequireDefault(require("./treemap/binary.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

var _slice = _interopRequireDefault(require("./treemap/slice.js"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice.js"));

var _squarify = _interopRequireDefault(require("./treemap/squarify.js"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster.js":"brcY","./hierarchy/index.js":"LCo+","./pack/index.js":"aVuj","./pack/siblings.js":"efS5","./pack/enclose.js":"ZzhU","./partition.js":"h/+W","./stratify.js":"bJDQ","./tree.js":"7nrL","./treemap/index.js":"3cC5","./treemap/binary.js":"cDuG","./treemap/dice.js":"L3aV","./treemap/slice.js":"RVbL","./treemap/sliceDice.js":"dACy","./treemap/squarify.js":"jyLZ","./treemap/resquarify.js":"GrWc"}],"xGSp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"5ySB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"1Q4L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"tgjV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  const n = points.length,
        indexes = [0, 1];
  let size = 2,
      i;

  for (i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross.js":"1Q4L"}],"pcph":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"naEA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.hypot(xa, ya);
  }

  return perimeter;
}
},{}],"QnuL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _hull = _interopRequireDefault(require("./hull.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"xGSp","./centroid.js":"5ySB","./hull.js":"tgjV","./contains.js":"pcph","./length.js":"naEA"}],"uDia":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = Math.random;
exports.default = _default;
},{}],"hmOZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"6z6U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomInt(source) {
  function randomInt(min, max) {
    if (arguments.length < 2) max = min, min = 0;
    min = Math.floor(min);
    max = Math.floor(max) - min;
    return function () {
      return Math.floor(source() * max + min);
    };
  }

  randomInt.source = sourceRandomInt;
  return randomInt;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"pjsZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"lZpB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _normal = _interopRequireDefault(require("./normal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  var N = _normal.default.source(source);

  function randomLogNormal() {
    var randomNormal = N.apply(this, arguments);
    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./normal.js":"pjsZ"}],"DMHS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    if ((n = +n) <= 0) return () => 0;
    return function () {
      for (var sum = 0, i = n; i > 1; --i) sum += source();

      return sum + i * source();
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"g+l6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _irwinHall = _interopRequireDefault(require("./irwinHall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  var I = _irwinHall.default.source(source);

  function randomBates(n) {
    // use limiting distribution at n === 0
    if ((n = +n) === 0) return source;
    var randomIrwinHall = I(n);
    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./irwinHall.js":"DMHS"}],"gEmS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log1p(-source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"qEyw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomPareto(source) {
  function randomPareto(alpha) {
    if ((alpha = +alpha) < 0) throw new RangeError("invalid alpha");
    alpha = 1 / -alpha;
    return function () {
      return Math.pow(1 - source(), alpha);
    };
  }

  randomPareto.source = sourceRandomPareto;
  return randomPareto;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"/QFQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBernoulli(source) {
  function randomBernoulli(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    return function () {
      return Math.floor(source() + p);
    };
  }

  randomBernoulli.source = sourceRandomBernoulli;
  return randomBernoulli;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"1dJo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomGeometric(source) {
  function randomGeometric(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    if (p === 0) return () => Infinity;
    if (p === 1) return () => 1;
    p = Math.log1p(-p);
    return function () {
      return 1 + Math.floor(Math.log1p(-source()) / p);
    };
  }

  randomGeometric.source = sourceRandomGeometric;
  return randomGeometric;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"y91O":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _normal = _interopRequireDefault(require("./normal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomGamma(source) {
  var randomNormal = _normal.default.source(source)();

  function randomGamma(k, theta) {
    if ((k = +k) < 0) throw new RangeError("invalid k"); // degenerate distribution if k === 0

    if (k === 0) return () => 0;
    theta = theta == null ? 1 : +theta; // exponential distribution if k === 1

    if (k === 1) return () => -Math.log1p(-source()) * theta;
    var d = (k < 1 ? k + 1 : k) - 1 / 3,
        c = 1 / (3 * Math.sqrt(d)),
        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;
    return function () {
      do {
        do {
          var x = randomNormal(),
              v = 1 + c * x;
        } while (v <= 0);

        v *= v * v;
        var u = 1 - source();
      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));

      return d * v * multiplier() * theta;
    };
  }

  randomGamma.source = sourceRandomGamma;
  return randomGamma;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./normal.js":"pjsZ"}],"g3J4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _gamma = _interopRequireDefault(require("./gamma.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBeta(source) {
  var G = _gamma.default.source(source);

  function randomBeta(alpha, beta) {
    var X = G(alpha),
        Y = G(beta);
    return function () {
      var x = X();
      return x === 0 ? 0 : x / (x + Y());
    };
  }

  randomBeta.source = sourceRandomBeta;
  return randomBeta;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./gamma.js":"y91O"}],"6BDx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _beta = _interopRequireDefault(require("./beta.js"));

var _geometric = _interopRequireDefault(require("./geometric.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBinomial(source) {
  var G = _geometric.default.source(source),
      B = _beta.default.source(source);

  function randomBinomial(n, p) {
    n = +n;
    if ((p = +p) >= 1) return () => n;
    if (p <= 0) return () => 0;
    return function () {
      var acc = 0,
          nn = n,
          pp = p;

      while (nn * pp > 16 && nn * (1 - pp) > 16) {
        var i = Math.floor((nn + 1) * pp),
            y = B(i, nn - i + 1)();

        if (y <= pp) {
          acc += i;
          nn -= i;
          pp = (pp - y) / (1 - y);
        } else {
          nn = i - 1;
          pp /= y;
        }
      }

      var sign = pp < 0.5,
          pFinal = sign ? pp : 1 - pp,
          g = G(pFinal);

      for (var s = g(), k = 0; s <= nn; ++k) s += g();

      return acc + (sign ? k : nn - k);
    };
  }

  randomBinomial.source = sourceRandomBinomial;
  return randomBinomial;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./beta.js":"g3J4","./geometric.js":"1dJo"}],"Ani0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomWeibull(source) {
  function randomWeibull(k, a, b) {
    var outerFunc;

    if ((k = +k) === 0) {
      outerFunc = x => -Math.log(x);
    } else {
      k = 1 / k;

      outerFunc = x => Math.pow(x, k);
    }

    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function () {
      return a + b * outerFunc(-Math.log1p(-source()));
    };
  }

  randomWeibull.source = sourceRandomWeibull;
  return randomWeibull;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"aFFQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomCauchy(source) {
  function randomCauchy(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function () {
      return a + b * Math.tan(Math.PI * source());
    };
  }

  randomCauchy.source = sourceRandomCauchy;
  return randomCauchy;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"L/fP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogistic(source) {
  function randomLogistic(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function () {
      var u = source();
      return a + b * Math.log(u / (1 - u));
    };
  }

  randomLogistic.source = sourceRandomLogistic;
  return randomLogistic;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia"}],"C4Uu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource.js"));

var _binomial = _interopRequireDefault(require("./binomial.js"));

var _gamma = _interopRequireDefault(require("./gamma.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomPoisson(source) {
  var G = _gamma.default.source(source),
      B = _binomial.default.source(source);

  function randomPoisson(lambda) {
    return function () {
      var acc = 0,
          l = lambda;

      while (l > 16) {
        var n = Math.floor(0.875 * l),
            t = G(n)();
        if (t > l) return acc + B(n - 1, l / t)();
        acc += n;
        l -= t;
      }

      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());

      return acc + k;
    };
  }

  randomPoisson.source = sourceRandomPoisson;
  return randomPoisson;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource.js":"uDia","./binomial.js":"6BDx","./gamma.js":"y91O"}],"y/Oh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lcg;
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const mul = 0x19660D;
const inc = 0x3C6EF35F;
const eps = 1 / 0x100000000;

function lcg(seed = Math.random()) {
  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;
  return () => (state = mul * state + inc | 0, eps * (state >>> 0));
}
},{}],"4WQ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomInt", {
  enumerable: true,
  get: function () {
    return _int.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});
Object.defineProperty(exports, "randomPareto", {
  enumerable: true,
  get: function () {
    return _pareto.default;
  }
});
Object.defineProperty(exports, "randomBernoulli", {
  enumerable: true,
  get: function () {
    return _bernoulli.default;
  }
});
Object.defineProperty(exports, "randomGeometric", {
  enumerable: true,
  get: function () {
    return _geometric.default;
  }
});
Object.defineProperty(exports, "randomBinomial", {
  enumerable: true,
  get: function () {
    return _binomial.default;
  }
});
Object.defineProperty(exports, "randomGamma", {
  enumerable: true,
  get: function () {
    return _gamma.default;
  }
});
Object.defineProperty(exports, "randomBeta", {
  enumerable: true,
  get: function () {
    return _beta.default;
  }
});
Object.defineProperty(exports, "randomWeibull", {
  enumerable: true,
  get: function () {
    return _weibull.default;
  }
});
Object.defineProperty(exports, "randomCauchy", {
  enumerable: true,
  get: function () {
    return _cauchy.default;
  }
});
Object.defineProperty(exports, "randomLogistic", {
  enumerable: true,
  get: function () {
    return _logistic.default;
  }
});
Object.defineProperty(exports, "randomPoisson", {
  enumerable: true,
  get: function () {
    return _poisson.default;
  }
});
Object.defineProperty(exports, "randomLcg", {
  enumerable: true,
  get: function () {
    return _lcg.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform.js"));

var _int = _interopRequireDefault(require("./int.js"));

var _normal = _interopRequireDefault(require("./normal.js"));

var _logNormal = _interopRequireDefault(require("./logNormal.js"));

var _bates = _interopRequireDefault(require("./bates.js"));

var _irwinHall = _interopRequireDefault(require("./irwinHall.js"));

var _exponential = _interopRequireDefault(require("./exponential.js"));

var _pareto = _interopRequireDefault(require("./pareto.js"));

var _bernoulli = _interopRequireDefault(require("./bernoulli.js"));

var _geometric = _interopRequireDefault(require("./geometric.js"));

var _binomial = _interopRequireDefault(require("./binomial.js"));

var _gamma = _interopRequireDefault(require("./gamma.js"));

var _beta = _interopRequireDefault(require("./beta.js"));

var _weibull = _interopRequireDefault(require("./weibull.js"));

var _cauchy = _interopRequireDefault(require("./cauchy.js"));

var _logistic = _interopRequireDefault(require("./logistic.js"));

var _poisson = _interopRequireDefault(require("./poisson.js"));

var _lcg = _interopRequireDefault(require("./lcg.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform.js":"hmOZ","./int.js":"6z6U","./normal.js":"pjsZ","./logNormal.js":"lZpB","./bates.js":"g+l6","./irwinHall.js":"DMHS","./exponential.js":"gEmS","./pareto.js":"qEyw","./bernoulli.js":"/QFQ","./geometric.js":"1dJo","./binomial.js":"6BDx","./gamma.js":"y91O","./beta.js":"g3J4","./weibull.js":"Ani0","./cauchy.js":"aFFQ","./logistic.js":"L/fP","./poisson.js":"C4Uu","./lcg.js":"y/Oh"}],"aZlr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      {
        if (typeof domain === "function") this.interpolator(domain);else this.range(domain);
        break;
      }

    default:
      {
        this.domain(domain);
        if (typeof interpolator === "function") this.interpolator(interpolator);else this.range(interpolator);
        break;
      }
  }

  return this;
}
},{}],"ELIM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _init = require("./init.js");

const implicit = Symbol("implicit");
exports.implicit = implicit;

function ordinal() {
  var index = new Map(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new Map();

    for (const value of _) {
      const key = value + "";
      if (index.has(key)) continue;
      index.set(key, domain.push(value));
    }

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"./init.js":"aZlr"}],"rJZF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init.js");

var _ordinal = _interopRequireDefault(require("./ordinal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function (_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"cBuZ","./init.js":"aZlr","./ordinal.js":"ELIM"}],"1l5S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = constants;

function constants(x) {
  return function () {
    return x;
  };
}
},{}],"zRWI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = number;

function number(x) {
  return +x;
}
},{}],"ZpMB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _constant = _interopRequireDefault(require("./constant.js"));

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = Array.from(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer()(identity, identity);
}
},{"d3-array":"cBuZ","d3-interpolate":"mkGF","./constant.js":"1l5S","./number.js":"zRWI"}],"m0SA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = tickFormat;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function tickFormat(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"cBuZ","d3-format":"4gWe"}],"VMtl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous.js"));

var _init = require("./init.js");

var _tickFormat = _interopRequireDefault(require("./tickFormat.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    while (maxIter-- > 0) {
      step = (0, _d3Array.tickIncrement)(start, stop, count);

      if (step === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }

      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)();

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"cBuZ","./continuous.js":"ZpMB","./init.js":"aZlr","./tickFormat.js":"m0SA"}],"eP89":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _linear = require("./linear.js");

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = Array.from(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? Array.from(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./linear.js":"VMtl","./number.js":"zRWI"}],"gRJQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = nice;

function nice(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"X3YW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice.js"));

var _continuous = require("./continuous.js");

var _init = require("./init.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = (0, _d3Array.ticks)(u, v, n);
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"cBuZ","d3-format":"4gWe","./nice.js":"gRJQ","./continuous.js":"ZpMB","./init.js":"aZlr"}],"Prec":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear.js");

var _continuous = require("./continuous.js");

var _init = require("./init.js");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear.js":"VMtl","./continuous.js":"ZpMB","./init.js":"aZlr"}],"/yse":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear.js");

var _continuous = require("./continuous.js");

var _init = require("./init.js");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear.js":"VMtl","./continuous.js":"ZpMB","./init.js":"aZlr"}],"OJb5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = radial;

var _continuous = _interopRequireDefault(require("./continuous.js"));

var _init = require("./init.js");

var _linear = require("./linear.js");

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function square(x) {
  return Math.sign(x) * x * x;
}

function unsquare(x) {
  return Math.sign(x) * Math.sqrt(Math.abs(x));
}

function radial() {
  var squared = (0, _continuous.default)(),
      range = [0, 1],
      round = false,
      unknown;

  function scale(x) {
    var y = unsquare(squared(x));
    return isNaN(y) ? unknown : round ? Math.round(y) : y;
  }

  scale.invert = function (y) {
    return squared.invert(square(y));
  };

  scale.domain = function (_) {
    return arguments.length ? (squared.domain(_), scale) : squared.domain();
  };

  scale.range = function (_) {
    return arguments.length ? (squared.range((range = Array.from(_, _number.default)).map(square)), scale) : range.slice();
  };

  scale.rangeRound = function (_) {
    return scale.range(_).round(true);
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, scale) : round;
  };

  scale.clamp = function (_) {
    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return radial(squared.domain(), range).round(round).clamp(squared.clamp()).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return (0, _linear.linearish)(scale);
}
},{"./continuous.js":"ZpMB","./init.js":"aZlr","./linear.js":"VMtl","./number.js":"zRWI"}],"fsZk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _init = require("./init.js");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantileSorted)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./init.js":"aZlr"}],"8Z2c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _linear = require("./linear.js");

var _init = require("./init.js");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x != null && x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"cBuZ","./linear.js":"VMtl","./init.js":"aZlr"}],"odYE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _init = require("./init.js");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x != null && x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./init.js":"aZlr"}],"gsab":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"r4Yr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"gsab"}],"EMi+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationYear = exports.durationMonth = exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
const durationSecond = 1000;
exports.durationSecond = durationSecond;
const durationMinute = durationSecond * 60;
exports.durationMinute = durationMinute;
const durationHour = durationMinute * 60;
exports.durationHour = durationHour;
const durationDay = durationHour * 24;
exports.durationDay = durationDay;
const durationWeek = durationDay * 7;
exports.durationWeek = durationWeek;
const durationMonth = durationDay * 30;
exports.durationMonth = durationMonth;
const durationYear = durationDay * 365;
exports.durationYear = durationYear;
},{}],"K4G6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"sObl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"wPv4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"bZ++":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(date => date.setHours(0, 0, 0, 0), (date, step) => date.setDate(date.getDate() + step), (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay, date => date.getDate() - 1);
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"6SUb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"XpbA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"gsab"}],"djmh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"gsab"}],"c3Ah":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"sGav":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"ns65":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"/HsO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"gsab","./duration.js":"EMi+"}],"KWFc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"gsab"}],"LM11":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"gsab"}],"SWkQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timeTickInterval = exports.timeTicks = exports.utcTickInterval = exports.utcTicks = void 0;

var _d3Array = require("d3-array");

var _duration = require("./duration.js");

var _millisecond = _interopRequireDefault(require("./millisecond.js"));

var _second = _interopRequireDefault(require("./second.js"));

var _minute = _interopRequireDefault(require("./minute.js"));

var _hour = _interopRequireDefault(require("./hour.js"));

var _day = _interopRequireDefault(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireDefault(require("./month.js"));

var _year = _interopRequireDefault(require("./year.js"));

var _utcMinute = _interopRequireDefault(require("./utcMinute.js"));

var _utcHour = _interopRequireDefault(require("./utcHour.js"));

var _utcDay = _interopRequireDefault(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireDefault(require("./utcMonth.js"));

var _utcYear = _interopRequireDefault(require("./utcYear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ticker(year, month, week, day, hour, minute) {
  const tickIntervals = [[_second.default, 1, _duration.durationSecond], [_second.default, 5, 5 * _duration.durationSecond], [_second.default, 15, 15 * _duration.durationSecond], [_second.default, 30, 30 * _duration.durationSecond], [minute, 1, _duration.durationMinute], [minute, 5, 5 * _duration.durationMinute], [minute, 15, 15 * _duration.durationMinute], [minute, 30, 30 * _duration.durationMinute], [hour, 1, _duration.durationHour], [hour, 3, 3 * _duration.durationHour], [hour, 6, 6 * _duration.durationHour], [hour, 12, 12 * _duration.durationHour], [day, 1, _duration.durationDay], [day, 2, 2 * _duration.durationDay], [week, 1, _duration.durationWeek], [month, 1, _duration.durationMonth], [month, 3, 3 * _duration.durationMonth], [year, 1, _duration.durationYear]];

  function ticks(start, stop, count) {
    const reverse = stop < start;
    if (reverse) [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop

    return reverse ? ticks.reverse() : ticks;
  }

  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = (0, _d3Array.bisector)(([,, step]) => step).right(tickIntervals, target);
    if (i === tickIntervals.length) return year.every((0, _d3Array.tickStep)(start / _duration.durationYear, stop / _duration.durationYear, count));
    if (i === 0) return _millisecond.default.every(Math.max((0, _d3Array.tickStep)(start, stop, count), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }

  return [ticks, tickInterval];
}

const [utcTicks, utcTickInterval] = ticker(_utcYear.default, _utcMonth.default, _utcWeek.utcSunday, _utcDay.default, _utcHour.default, _utcMinute.default);
exports.utcTickInterval = utcTickInterval;
exports.utcTicks = utcTicks;
const [timeTicks, timeTickInterval] = ticker(_year.default, _month.default, _week.sunday, _day.default, _hour.default, _minute.default);
exports.timeTickInterval = timeTickInterval;
exports.timeTicks = timeTicks;
},{"d3-array":"cBuZ","./duration.js":"EMi+","./millisecond.js":"r4Yr","./second.js":"K4G6","./minute.js":"sObl","./hour.js":"wPv4","./day.js":"bZ++","./week.js":"6SUb","./month.js":"XpbA","./year.js":"djmh","./utcMinute.js":"c3Ah","./utcHour.js":"sGav","./utcDay.js":"ns65","./utcWeek.js":"/HsO","./utcMonth.js":"KWFc","./utcYear.js":"LM11"}],"F00f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});
Object.defineProperty(exports, "utcTicks", {
  enumerable: true,
  get: function () {
    return _ticks.utcTicks;
  }
});
Object.defineProperty(exports, "utcTickInterval", {
  enumerable: true,
  get: function () {
    return _ticks.utcTickInterval;
  }
});
Object.defineProperty(exports, "timeTicks", {
  enumerable: true,
  get: function () {
    return _ticks.timeTicks;
  }
});
Object.defineProperty(exports, "timeTickInterval", {
  enumerable: true,
  get: function () {
    return _ticks.timeTickInterval;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

var _ticks = require("./ticks.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"gsab","./millisecond.js":"r4Yr","./second.js":"K4G6","./minute.js":"sObl","./hour.js":"wPv4","./day.js":"bZ++","./week.js":"6SUb","./month.js":"XpbA","./year.js":"djmh","./utcMinute.js":"c3Ah","./utcHour.js":"sGav","./utcDay.js":"ns65","./utcWeek.js":"/HsO","./utcMonth.js":"KWFc","./utcYear.js":"LM11","./ticks.js":"SWkQ"}],"rf9h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {
    y: y,
    m: m,
    d: d,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function (string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.

      if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.

      if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", false);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier += "", true);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"F00f"}],"LmVV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale.js":"rf9h"}],"UFnF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale.js":"LmVV"}],"hAdq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat.js");

var _defaultLocale = require("./defaultLocale.js");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat.js":"UFnF","./defaultLocale.js":"LmVV"}],"+7zs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _isoFormat = _interopRequireDefault(require("./isoFormat.js"));

var _isoParse = _interopRequireDefault(require("./isoParse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"LmVV","./locale.js":"rf9h","./isoFormat.js":"UFnF","./isoParse.js":"hAdq"}],"QHrh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = time;

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _continuous = _interopRequireWildcard(require("./continuous.js"));

var _init = require("./init.js");

var _nice = _interopRequireDefault(require("./nice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
  var scale = (0, _continuous.default)(),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
  };

  return scale;
}

function time() {
  return _init.initRange.apply(calendar(_d3Time.timeTicks, _d3Time.timeTickInterval, _d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-time":"F00f","d3-time-format":"+7zs","./continuous.js":"ZpMB","./init.js":"aZlr","./nice.js":"gRJQ"}],"D6Mr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = utcTime;

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _time = require("./time.js");

var _init = require("./init.js");

function utcTime() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcTicks, _d3Time.utcTickInterval, _d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"d3-time":"F00f","d3-time-format":"+7zs","./time.js":"QHrh","./init.js":"aZlr"}],"O1DZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _d3Interpolate = require("d3-interpolate");

var _continuous = require("./continuous.js");

var _init = require("./init.js");

var _linear = require("./linear.js");

var _log = require("./log.js");

var _symlog = require("./symlog.js");

var _pow = require("./pow.js");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function (_) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }

  scale.range = range(_d3Interpolate.interpolate);
  scale.rangeRound = range(_d3Interpolate.interpolateRound);

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"d3-interpolate":"mkGF","./continuous.js":"ZpMB","./init.js":"aZlr","./linear.js":"VMtl","./log.js":"X3YW","./symlog.js":"Prec","./pow.js":"/yse"}],"Y40z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous.js");

var _init = require("./init.js");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (x != null && !isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x, 1) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.range = function () {
    return domain.map((d, i) => interpolator(i / (domain.length - 1)));
  };

  scale.quantiles = function (n) {
    return Array.from({
      length: n + 1
    }, (_, i) => (0, _d3Array.quantile)(domain, i / n));
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"cBuZ","./continuous.js":"ZpMB","./init.js":"aZlr"}],"shE4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _d3Interpolate = require("d3-interpolate");

var _continuous = require("./continuous.js");

var _init = require("./init.js");

var _linear = require("./linear.js");

var _log = require("./log.js");

var _sequential = require("./sequential.js");

var _symlog = require("./symlog.js");

var _pow = require("./pow.js");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      s = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function (_) {
      var r0, r1, r2;
      return arguments.length ? ([r0, r1, r2] = _, interpolator = (0, _d3Interpolate.piecewise)(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }

  scale.range = range(_d3Interpolate.interpolate);
  scale.rangeRound = range(_d3Interpolate.interpolateRound);

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"d3-interpolate":"mkGF","./continuous.js":"ZpMB","./init.js":"aZlr","./linear.js":"VMtl","./log.js":"X3YW","./sequential.js":"O1DZ","./symlog.js":"Prec","./pow.js":"/yse"}],"zt+a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _linear = _interopRequireDefault(require("./linear.js"));

var _log = _interopRequireDefault(require("./log.js"));

var _symlog = _interopRequireDefault(require("./symlog.js"));

var _ordinal = _interopRequireWildcard(require("./ordinal.js"));

var _pow = _interopRequireWildcard(require("./pow.js"));

var _radial = _interopRequireDefault(require("./radial.js"));

var _quantile = _interopRequireDefault(require("./quantile.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

var _threshold = _interopRequireDefault(require("./threshold.js"));

var _time = _interopRequireDefault(require("./time.js"));

var _utcTime = _interopRequireDefault(require("./utcTime.js"));

var _sequential = _interopRequireWildcard(require("./sequential.js"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile.js"));

var _diverging = _interopRequireWildcard(require("./diverging.js"));

var _tickFormat = _interopRequireDefault(require("./tickFormat.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band.js":"rJZF","./identity.js":"eP89","./linear.js":"VMtl","./log.js":"X3YW","./symlog.js":"Prec","./ordinal.js":"ELIM","./pow.js":"/yse","./radial.js":"OJb5","./quantile.js":"fsZk","./quantize.js":"8Z2c","./threshold.js":"odYE","./time.js":"QHrh","./utcTime.js":"D6Mr","./sequential.js":"O1DZ","./sequentialQuantile.js":"Y40z","./diverging.js":"shE4","./tickFormat.js":"m0SA"}],"e9Ar":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"PcKk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"2TXT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"MCH8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"bH6q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"2GbC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"SQbk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"/J0n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"rdh9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"7/o5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"n6R9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"e9Ar"}],"tFWC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Interpolate = require("d3-interpolate");

var _default = scheme => (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);

exports.default = _default;
},{"d3-interpolate":"mkGF"}],"kmpN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Hn8a":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"cCiT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"k6z3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"75sN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"mrMT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"uyGf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Dt8k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"eSjI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"L6xI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"JRrn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"j/1f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"nT+z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"3B5M":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"NAcy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"DZXx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"aT++":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"et2z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"lF8J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"aI9y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"JWLI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"b4OA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"NKRR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"jAVD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"Emw5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"wB2L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"wV9s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"e9Ar","../ramp.js":"tFWC"}],"5w3g":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"Spoc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"pM5F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"4TJ2","d3-interpolate":"mkGF"}],"dT4l":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"4TJ2"}],"Wgpo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"kmxq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"e9Ar"}],"zd6o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"PcKk","./categorical/Accent.js":"2TXT","./categorical/Dark2.js":"MCH8","./categorical/Paired.js":"bH6q","./categorical/Pastel1.js":"2GbC","./categorical/Pastel2.js":"SQbk","./categorical/Set1.js":"/J0n","./categorical/Set2.js":"rdh9","./categorical/Set3.js":"7/o5","./categorical/Tableau10.js":"n6R9","./diverging/BrBG.js":"kmpN","./diverging/PRGn.js":"Hn8a","./diverging/PiYG.js":"cCiT","./diverging/PuOr.js":"k6z3","./diverging/RdBu.js":"75sN","./diverging/RdGy.js":"mrMT","./diverging/RdYlBu.js":"uyGf","./diverging/RdYlGn.js":"Dt8k","./diverging/Spectral.js":"eSjI","./sequential-multi/BuGn.js":"L6xI","./sequential-multi/BuPu.js":"JRrn","./sequential-multi/GnBu.js":"j/1f","./sequential-multi/OrRd.js":"nT+z","./sequential-multi/PuBuGn.js":"3B5M","./sequential-multi/PuBu.js":"NAcy","./sequential-multi/PuRd.js":"DZXx","./sequential-multi/RdPu.js":"aT++","./sequential-multi/YlGnBu.js":"et2z","./sequential-multi/YlGn.js":"lF8J","./sequential-multi/YlOrBr.js":"aI9y","./sequential-multi/YlOrRd.js":"JWLI","./sequential-single/Blues.js":"b4OA","./sequential-single/Greens.js":"NKRR","./sequential-single/Greys.js":"jAVD","./sequential-single/Purples.js":"Emw5","./sequential-single/Reds.js":"wB2L","./sequential-single/Oranges.js":"wV9s","./sequential-multi/cividis.js":"5w3g","./sequential-multi/cubehelix.js":"Spoc","./sequential-multi/rainbow.js":"pM5F","./sequential-multi/sinebow.js":"dT4l","./sequential-multi/turbo.js":"Wgpo","./sequential-multi/viridis.js":"kmxq"}],"D3Ln":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"9R8v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"TV07":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"dz42","./constant.js":"D3Ln","./math.js":"9R8v"}],"brsM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function _default(x) {
  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
  : Array.from(x); // Map, Set, iterable, string, or anything else
}
},{}],"4VCF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"aLIe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"Ume/":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _array = _interopRequireDefault(require("./array.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y) {
  var defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;
  x = typeof x === "function" ? x : x === undefined ? _point.x : (0, _constant.default)(x);
  y = typeof y === "function" ? y : y === undefined ? _point.y : (0, _constant.default)(y);

  function line(data) {
    var i,
        n = (data = (0, _array.default)(data)).length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"dz42","./array.js":"brsM","./constant.js":"D3Ln","./curve/linear.js":"4VCF","./point.js":"aLIe"}],"UWil":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _array = _interopRequireDefault(require("./array.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x0, y0, y1) {
  var x1 = null,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;
  x0 = typeof x0 === "function" ? x0 : x0 === undefined ? _point.x : (0, _constant.default)(+x0);
  y0 = typeof y0 === "function" ? y0 : y0 === undefined ? (0, _constant.default)(0) : (0, _constant.default)(+y0);
  y1 = typeof y1 === "function" ? y1 : y1 === undefined ? _point.y : (0, _constant.default)(+y1);

  function area(data) {
    var i,
        j,
        k,
        n = (data = (0, _array.default)(data)).length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"dz42","./array.js":"brsM","./constant.js":"D3Ln","./curve/linear.js":"4VCF","./line.js":"Ume/","./point.js":"aLIe"}],"7Rov":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"5OJY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = _interopRequireDefault(require("./array.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = (data = (0, _array.default)(data)).length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./array.js":"brsM","./constant.js":"D3Ln","./descending.js":"wjXp","./identity.js":"7Rov","./math.js":"9R8v"}],"m9TD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear.js":"4VCF"}],"p8dR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _line = _interopRequireDefault(require("./line.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial.js":"m9TD","./line.js":"Ume/"}],"7HIq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _lineRadial = require("./lineRadial.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial.js":"m9TD","./area.js":"UWil","./lineRadial.js":"p8dR"}],"wQOf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"CMsX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array.js");

var _constant = _interopRequireDefault(require("../constant.js"));

var _point = require("../point.js");

var _pointRadial = _interopRequireDefault(require("../pointRadial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"dz42","../array.js":"brsM","../constant.js":"D3Ln","../point.js":"aLIe","../pointRadial.js":"wQOf"}],"NEs3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math.js":"9R8v"}],"57OD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"nSnU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"3SkC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math.js":"9R8v"}],"lQ43":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"Z5S+":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"JWBh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"XBPQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default(type, size) {
  var context = null;
  type = typeof type === "function" ? type : (0, _constant.default)(type || _circle.default);
  size = typeof size === "function" ? size : (0, _constant.default)(size === undefined ? 64 : +size);

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"dz42","./symbol/circle.js":"NEs3","./symbol/cross.js":"57OD","./symbol/diamond.js":"nSnU","./symbol/star.js":"3SkC","./symbol/square.js":"lQ43","./symbol/triangle.js":"Z5S+","./symbol/wye.js":"JWBh","./constant.js":"D3Ln"}],"XakR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"WkDE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

var _basis = require("./basis.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop.js":"BhKh","./basis.js":"XakR"}],"+5Gg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis.js":"XakR"}],"3DbQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bumpX = bumpX;
exports.bumpY = bumpY;

class Bump {
  constructor(context, x) {
    this._context = context;
    this._x = x;
  }

  areaStart() {
    this._line = 0;
  }

  areaEnd() {
    this._line = NaN;
  }

  lineStart() {
    this._point = 0;
  }

  lineEnd() {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  }

  point(x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        {
          this._point = 1;
          if (this._line) this._context.lineTo(x, y);else this._context.moveTo(x, y);
          break;
        }

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
          break;
        }
    }

    this._x0 = x, this._y0 = y;
  }

}

function bumpX(context) {
  return new Bump(context, true);
}

function bumpY(context) {
  return new Bump(context, false);
}
},{}],"eh91":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis.js");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis.js":"XakR"}],"fNTp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"euEz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

var _cardinal = require("./cardinal.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop.js":"BhKh","./cardinal.js":"fNTp"}],"it46":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal.js":"fNTp"}],"oWDJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math.js");

var _cardinal = require("./cardinal.js");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math.js":"9R8v","./cardinal.js":"fNTp"}],"41Cs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed.js");

var _noop = _interopRequireDefault(require("../noop.js"));

var _catmullRom = require("./catmullRom.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed.js":"euEz","../noop.js":"BhKh","./catmullRom.js":"oWDJ"}],"Vf6b":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen.js");

var _catmullRom = require("./catmullRom.js");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen.js":"it46","./catmullRom.js":"oWDJ"}],"QDqS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop.js":"BhKh"}],"7Vae":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"0T3B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"UYn4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"x5Mk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"0IgC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"S7q8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = _interopRequireDefault(require("./array.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var sz = Array.from(keys.apply(this, arguments), stackSeries),
        i,
        n = sz.length,
        j = -1,
        oz;

    for (const d of data) {
      for (i = 0, ++j; i < n; ++i) {
        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
      }
    }

    for (i = 0, oz = (0, _array.default)(order(sz)); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(Array.from(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array.js":"brsM","./constant.js":"D3Ln","./offset/none.js":"x5Mk","./order/none.js":"0IgC"}],"2jY6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"x5Mk"}],"P+6Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}
},{}],"sf4d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"x5Mk"}],"EH71":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none.js":"x5Mk"}],"zyBr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none.js":"0IgC"}],"4koe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none.js":"0IgC"}],"i2th":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending.js":"4koe"}],"msEL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance.js"));

var _ascending = require("./ascending.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance.js":"zyBr","./ascending.js":"4koe"}],"w5Iz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none.js":"0IgC"}],"pW+U":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBumpX", {
  enumerable: true,
  get: function () {
    return _bump.bumpX;
  }
});
Object.defineProperty(exports, "curveBumpY", {
  enumerable: true,
  get: function () {
    return _bump.bumpY;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _pie = _interopRequireDefault(require("./pie.js"));

var _areaRadial = _interopRequireDefault(require("./areaRadial.js"));

var _lineRadial = _interopRequireDefault(require("./lineRadial.js"));

var _pointRadial = _interopRequireDefault(require("./pointRadial.js"));

var _index = require("./link/index.js");

var _symbol = _interopRequireWildcard(require("./symbol.js"));

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed.js"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen.js"));

var _basis = _interopRequireDefault(require("./curve/basis.js"));

var _bump = require("./curve/bump.js");

var _bundle = _interopRequireDefault(require("./curve/bundle.js"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed.js"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen.js"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal.js"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed.js"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen.js"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom.js"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _monotone = require("./curve/monotone.js");

var _natural = _interopRequireDefault(require("./curve/natural.js"));

var _step = _interopRequireWildcard(require("./curve/step.js"));

var _stack = _interopRequireDefault(require("./stack.js"));

var _expand = _interopRequireDefault(require("./offset/expand.js"));

var _diverging = _interopRequireDefault(require("./offset/diverging.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette.js"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle.js"));

var _appearance = _interopRequireDefault(require("./order/appearance.js"));

var _ascending = _interopRequireDefault(require("./order/ascending.js"));

var _descending = _interopRequireDefault(require("./order/descending.js"));

var _insideOut = _interopRequireDefault(require("./order/insideOut.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

var _reverse = _interopRequireDefault(require("./order/reverse.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc.js":"TV07","./area.js":"UWil","./line.js":"Ume/","./pie.js":"5OJY","./areaRadial.js":"7HIq","./lineRadial.js":"p8dR","./pointRadial.js":"wQOf","./link/index.js":"CMsX","./symbol.js":"XBPQ","./symbol/circle.js":"NEs3","./symbol/cross.js":"57OD","./symbol/diamond.js":"nSnU","./symbol/square.js":"lQ43","./symbol/star.js":"3SkC","./symbol/triangle.js":"Z5S+","./symbol/wye.js":"JWBh","./curve/basisClosed.js":"WkDE","./curve/basisOpen.js":"+5Gg","./curve/basis.js":"XakR","./curve/bump.js":"3DbQ","./curve/bundle.js":"eh91","./curve/cardinalClosed.js":"euEz","./curve/cardinalOpen.js":"it46","./curve/cardinal.js":"fNTp","./curve/catmullRomClosed.js":"41Cs","./curve/catmullRomOpen.js":"Vf6b","./curve/catmullRom.js":"oWDJ","./curve/linearClosed.js":"QDqS","./curve/linear.js":"4VCF","./curve/monotone.js":"7Vae","./curve/natural.js":"0T3B","./curve/step.js":"UYn4","./stack.js":"S7q8","./offset/expand.js":"2jY6","./offset/diverging.js":"P+6Q","./offset/none.js":"x5Mk","./offset/silhouette.js":"sf4d","./offset/wiggle.js":"EH71","./order/appearance.js":"zyBr","./order/ascending.js":"4koe","./order/descending.js":"i2th","./order/insideOut.js":"msEL","./order/none.js":"0IgC","./order/reverse.js":"w5Iz"}],"pmu8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(type, {
  sourceEvent,
  target,
  transform,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {
      value: type,
      enumerable: true,
      configurable: true
    },
    sourceEvent: {
      value: sourceEvent,
      enumerable: true,
      configurable: true
    },
    target: {
      value: target,
      enumerable: true,
      configurable: true
    },
    transform: {
      value: transform,
      enumerable: true,
      configurable: true
    },
    _: {
      value: dispatch
    }
  });
}
},{}],"RGu5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"T0tZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
function defaultFilter(event) {
  return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchfirst,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0,
      tapDistance = 10;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point, event) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point, event);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).event(event).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p, event) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };

  zoom.scaleTo = function (selection, k, p, event) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p, event);
  };

  zoom.translateBy = function (selection, x, y, event) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };

  zoom.translateTo = function (selection, x, y, p, event) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p, event);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point, event) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).event(event).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).event(event).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args).event(event),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    event: function (event) {
      if (event) this.sourceEvent = event;
      return this;
    },
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      var d = (0, _d3Selection.select)(this.that).datum();
      listeners.call(type, this.that, new _event.default(type, {
        sourceEvent: this.sourceEvent,
        target: zoom,
        type,
        transform: this.that.__zoom,
        dispatch: listeners
      }), d);
    }
  };

  function wheeled(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, args).event(event),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.pointer)(event); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned(event, ...args) {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, args, true).event(event),
        v = (0, _d3Selection.select)(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.pointer)(event, currentTarget),
        currentTarget = event.currentTarget,
        x0 = event.clientX,
        y0 = event.clientY;
    (0, _d3Drag.dragDisable)(event.view);
    (0, _noevent.nopropagation)(event);
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved(event) {
      (0, _noevent.default)(event);

      if (!g.moved) {
        var dx = event.clientX - x0,
            dy = event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.event(event).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.pointer)(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped(event) {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(event.view, g.moved);
      (0, _noevent.default)(event);
      g.event(event).end();
    }
  }

  function dblclicked(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.pointer)(event.changedTouches ? event.changedTouches[0] : event, this),
        p1 = t0.invert(p0),
        k1 = t0.k * (event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);
    (0, _noevent.default)(event);
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0, event);else (0, _d3Selection.select)(this).call(zoom.transform, t1, p0, event);
  }

  function touchstarted(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var touches = event.touches,
        n = touches.length,
        g = gesture(this, args, event.changedTouches.length === n).event(event),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)(event);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.pointer)(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)(event);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.pointer)(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)(event);
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        t = (0, _d3Selection.pointer)(t, this);

        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
          if (p) p.apply(this, arguments);
        }
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  zoom.tapDistance = function (_) {
    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
  };

  return zoom;
}
},{"d3-dispatch":"UU/c","d3-drag":"LrBi","d3-interpolate":"mkGF","d3-selection":"lm1C","d3-transition":"Fcbi","./constant.js":"gzkf","./event.js":"pmu8","./transform.js":"RGu5","./noevent.js":"DCEg"}],"uzwd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"T0tZ","./transform.js":"RGu5"}],"BG5c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Array[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Axis[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Brush[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Chord[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Color[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Contour[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Delaunay = require("d3-delaunay");

Object.keys(_d3Delaunay).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Delaunay[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Delaunay[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Dispatch[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Drag[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Dsv[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Ease[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Fetch[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Force[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Format[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Geo[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Hierarchy[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Interpolate[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Path[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Polygon[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Quadtree[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Random[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Scale[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3ScaleChromatic[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Selection[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Shape[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Time[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3TimeFormat[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Timer[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Transition[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _d3Zoom[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"hADF","d3-array":"cBuZ","d3-axis":"y9Kr","d3-brush":"TNt0","d3-chord":"cf1+","d3-color":"4TJ2","d3-contour":"cfrl","d3-delaunay":"2V5J","d3-dispatch":"UU/c","d3-drag":"LrBi","d3-dsv":"mQVF","d3-ease":"CFyW","d3-fetch":"hNko","d3-force":"YpA1","d3-format":"4gWe","d3-geo":"LMxt","d3-hierarchy":"wNQE","d3-interpolate":"mkGF","d3-path":"dz42","d3-polygon":"QnuL","d3-quadtree":"oxc3","d3-random":"4WQ4","d3-scale":"zt+a","d3-scale-chromatic":"zd6o","d3-selection":"lm1C","d3-shape":"pW+U","d3-time":"F00f","d3-time-format":"+7zs","d3-timer":"CBES","d3-transition":"Fcbi","d3-zoom":"uzwd"}],"wD+C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"6TaN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"wD+C"}],"/fgw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"wD+C"}],"S/tS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"wANB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"u9ZW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"qqV1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"6TaN","./set":"/fgw","./map":"wD+C","./keys":"S/tS","./values":"wANB","./entries":"u9ZW"}],"ARBg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"UzOB"}],"3geq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"ARBg","./namespaces":"UzOB"}],"St6Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"4Epv","../selector":"xs2I"}],"pmO5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"4Epv","../selectorAll":"+mHY"}],"qEr7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"XPZU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"4Epv","../matcher":"qEr7"}],"M7rI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"NmjR","./index":"4Epv"}],"5a1s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"4Epv","./enter":"M7rI","../constant":"5O/Y"}],"qUvw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"NmjR","./index":"4Epv"}],"FYgK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"4Epv"}],"M3Jz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"4Epv"}],"FzRa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"K7dN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"jOD5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"ARBg"}],"3WyW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"D1dR"}],"nvge":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"3geq"}],"4L+3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"3geq","../selector":"xs2I"}],"QEZS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"NF9Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"D1dR"}],"4Epv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"St6Q","./selectAll":"pmO5","./filter":"XPZU","./data":"5a1s","./enter":"M7rI","./exit":"qUvw","./join":"oO6z","./merge":"FYgK","./order":"RepQ","./sort":"M3Jz","./call":"+pbQ","./nodes":"FzRa","./node":"84xF","./size":"K7dN","./empty":"UF+O","./each":"q4XW","./attr":"jOD5","./style":"3WyW","./property":"Q/OW","./classed":"+rtN","./text":"hAJ3","./html":"FiSM","./raise":"gvi7","./lower":"gv/5","./append":"nvge","./insert":"4L+3","./remove":"quBB","./clone":"UpcG","./datum":"fuQ8","./on":"QEZS","./dispatch":"NF9Y"}],"/+WW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"4Epv"}],"GqAL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"3geq","./select":"/+WW"}],"Cj6f":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"QEZS"}],"bmqF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"cR0m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"Cj6f","./point":"bmqF"}],"uBpz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"4Epv"}],"C+pd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"Cj6f","./point":"bmqF"}],"+QuF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"Cj6f","./point":"bmqF"}],"LZed":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"GqAL","./creator":"3geq","./local":"JuPP","./matcher":"qEr7","./mouse":"cR0m","./namespace":"ARBg","./namespaces":"UzOB","./point":"bmqF","./select":"/+WW","./selectAll":"uBpz","./selection/index":"4Epv","./selector":"xs2I","./selectorAll":"+mHY","./selection/style":"3WyW","./touch":"C+pd","./touches":"+QuF","./window":"D1dR","./selection/on":"QEZS"}],"TLCm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Collection = require("d3-collection");

var _d3Selection = require("d3-selection");

/**
 * d3.tip
 * Copyright (c) 2013-2017 Justin Palmer
 *
 * Tooltips for d3.js SVG visualizations
 */
// eslint-disable-next-line no-extra-semi
// Public - constructs a new tooltip
//
// Returns a tip
function _default() {
  var direction = d3TipDirection,
      offset = d3TipOffset,
      html = d3TipHTML,
      rootElement = document.body,
      node = initNode(),
      svg = null,
      point = null,
      target = null;

  function tip(vis) {
    svg = getSVGNode(vis);
    if (!svg) return;
    point = svg.createSVGPoint();
    rootElement.appendChild(node);
  } // Public - show the tooltip on the screen
  //
  // Returns a tip


  tip.show = function () {
    var args = Array.prototype.slice.call(arguments);
    if (args[args.length - 1] instanceof SVGElement) target = args.pop();
    var content = html.apply(this, args),
        poffset = offset.apply(this, args),
        dir = direction.apply(this, args),
        nodel = getNodeEl(),
        i = directions.length,
        coords,
        scrollTop = document.documentElement.scrollTop || rootElement.scrollTop,
        scrollLeft = document.documentElement.scrollLeft || rootElement.scrollLeft;
    nodel.html(content).style('opacity', 1).style('pointer-events', 'all');

    while (i--) nodel.classed(directions[i], false);

    coords = directionCallbacks.get(dir).apply(this);
    nodel.classed(dir, true).style('top', coords.top + poffset[0] + scrollTop + 'px').style('left', coords.left + poffset[1] + scrollLeft + 'px');
    return tip;
  }; // Public - hide the tooltip
  //
  // Returns a tip


  tip.hide = function () {
    var nodel = getNodeEl();
    nodel.style('opacity', 0).style('pointer-events', 'none');
    return tip;
  }; // Public: Proxy attr calls to the d3 tip container.
  // Sets or gets attribute value.
  //
  // n - name of the attribute
  // v - value of the attribute
  //
  // Returns tip or attribute value
  // eslint-disable-next-line no-unused-vars


  tip.attr = function (n, v) {
    if (arguments.length < 2 && typeof n === 'string') {
      return getNodeEl().attr(n);
    }

    var args = Array.prototype.slice.call(arguments);

    _d3Selection.selection.prototype.attr.apply(getNodeEl(), args);

    return tip;
  }; // Public: Proxy style calls to the d3 tip container.
  // Sets or gets a style value.
  //
  // n - name of the property
  // v - value of the property
  //
  // Returns tip or style property value
  // eslint-disable-next-line no-unused-vars


  tip.style = function (n, v) {
    if (arguments.length < 2 && typeof n === 'string') {
      return getNodeEl().style(n);
    }

    var args = Array.prototype.slice.call(arguments);

    _d3Selection.selection.prototype.style.apply(getNodeEl(), args);

    return tip;
  }; // Public: Set or get the direction of the tooltip
  //
  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),
  //     sw(southwest), ne(northeast) or se(southeast)
  //
  // Returns tip or direction


  tip.direction = function (v) {
    if (!arguments.length) return direction;
    direction = v == null ? v : functor(v);
    return tip;
  }; // Public: Sets or gets the offset of the tip
  //
  // v - Array of [x, y] offset
  //
  // Returns offset or


  tip.offset = function (v) {
    if (!arguments.length) return offset;
    offset = v == null ? v : functor(v);
    return tip;
  }; // Public: sets or gets the html value of the tooltip
  //
  // v - String value of the tip
  //
  // Returns html value or tip


  tip.html = function (v) {
    if (!arguments.length) return html;
    html = v == null ? v : functor(v);
    return tip;
  }; // Public: sets or gets the root element anchor of the tooltip
  //
  // v - root element of the tooltip
  //
  // Returns root node of tip


  tip.rootElement = function (v) {
    if (!arguments.length) return rootElement;
    rootElement = v == null ? v : functor(v);
    return tip;
  }; // Public: destroys the tooltip and removes it from the DOM
  //
  // Returns a tip


  tip.destroy = function () {
    if (node) {
      getNodeEl().remove();
      node = null;
    }

    return tip;
  };

  function d3TipDirection() {
    return 'n';
  }

  function d3TipOffset() {
    return [0, 0];
  }

  function d3TipHTML() {
    return ' ';
  }

  var directionCallbacks = (0, _d3Collection.map)({
    n: directionNorth,
    s: directionSouth,
    e: directionEast,
    w: directionWest,
    nw: directionNorthWest,
    ne: directionNorthEast,
    sw: directionSouthWest,
    se: directionSouthEast
  }),
      directions = directionCallbacks.keys();

  function directionNorth() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.n.y - node.offsetHeight,
      left: bbox.n.x - node.offsetWidth / 2
    };
  }

  function directionSouth() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.s.y,
      left: bbox.s.x - node.offsetWidth / 2
    };
  }

  function directionEast() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.e.y - node.offsetHeight / 2,
      left: bbox.e.x
    };
  }

  function directionWest() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.w.y - node.offsetHeight / 2,
      left: bbox.w.x - node.offsetWidth
    };
  }

  function directionNorthWest() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.nw.y - node.offsetHeight,
      left: bbox.nw.x - node.offsetWidth
    };
  }

  function directionNorthEast() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.ne.y - node.offsetHeight,
      left: bbox.ne.x
    };
  }

  function directionSouthWest() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.sw.y,
      left: bbox.sw.x - node.offsetWidth
    };
  }

  function directionSouthEast() {
    var bbox = getScreenBBox(this);
    return {
      top: bbox.se.y,
      left: bbox.se.x
    };
  }

  function initNode() {
    var div = (0, _d3Selection.select)(document.createElement('div'));
    div.style('position', 'absolute').style('top', 0).style('opacity', 0).style('pointer-events', 'none').style('box-sizing', 'border-box');
    return div.node();
  }

  function getSVGNode(element) {
    var svgNode = element.node();
    if (!svgNode) return null;
    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode;
    return svgNode.ownerSVGElement;
  }

  function getNodeEl() {
    if (node == null) {
      node = initNode(); // re-add node to DOM

      rootElement.appendChild(node);
    }

    return (0, _d3Selection.select)(node);
  } // Private - gets the screen coordinates of a shape
  //
  // Given a shape on the screen, will return an SVGPoint for the directions
  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),
  // nw(northwest), sw(southwest).
  //
  //    +-+-+
  //    |   |
  //    +   +
  //    |   |
  //    +-+-+
  //
  // Returns an Object {n, s, e, w, nw, sw, ne, se}


  function getScreenBBox(targetShape) {
    var targetel = target || targetShape;

    while (targetel.getScreenCTM == null && targetel.parentNode != null) {
      targetel = targetel.parentNode;
    }

    var bbox = {},
        matrix = targetel.getScreenCTM(),
        tbbox = targetel.getBBox(),
        width = tbbox.width,
        height = tbbox.height,
        x = tbbox.x,
        y = tbbox.y;
    point.x = x;
    point.y = y;
    bbox.nw = point.matrixTransform(matrix);
    point.x += width;
    bbox.ne = point.matrixTransform(matrix);
    point.y += height;
    bbox.se = point.matrixTransform(matrix);
    point.x -= width;
    bbox.sw = point.matrixTransform(matrix);
    point.y -= height / 2;
    bbox.w = point.matrixTransform(matrix);
    point.x += width;
    bbox.e = point.matrixTransform(matrix);
    point.x -= width / 2;
    point.y -= height / 2;
    bbox.n = point.matrixTransform(matrix);
    point.y += height;
    bbox.s = point.matrixTransform(matrix);
    return bbox;
  } // Private - replace D3JS 3.X d3.functor() function


  function functor(v) {
    return typeof v === 'function' ? v : function () {
      return v;
    };
  }

  return tip;
}
},{"d3-collection":"qqV1","d3-selection":"LZed"}],"g5I+":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"m8nE":[function(require,module,exports) {
var process = require("process");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Generated by purs bundle 0.13.6
var PS = {};

(function (exports) {
  /* global XMLHttpRequest */

  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = {};

    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");

        return new XHR();
      };

      platformSpecific.fixupUrl = function (url, xhr) {
        if (xhr.nodejsBaseUrl === null) {
          var urllib = module.require("url");

          var u = urllib.parse(url);
          u.protocol = u.protocol || "http:";
          u.hostname = u.hostname || "localhost";
          return urllib.format(u);
        } else {
          return url || "/";
        }
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);

        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }

        var onerror = function onerror(msg) {
          return function () {
            errback(new Error(msg + ": " + options.method + " " + options.url));
          };
        };

        xhr.onerror = onerror("AJAX request failed");
        xhr.ontimeout = onerror("AJAX request timed out");

        xhr.onload = function () {
          callback({
            status: xhr.status,
            statusText: xhr.statusText,
            headers: xhr.getAllResponseHeaders().split("\r\n").filter(function (header) {
              return header.length > 0;
            }).map(function (header) {
              var i = header.indexOf(":");
              return mkHeader(header.substring(0, i))(header.substring(i + 2));
            }),
            body: platformSpecific.getResponse(xhr)
          });
        };

        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);
        return function (error, cancelErrback, cancelCallback) {
          try {
            xhr.abort();
          } catch (e) {
            return cancelErrback(e);
          }

          return cancelCallback();
        };
      };
    };
  }();
})(PS["Affjax"] = PS["Affjax"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];

  var Semigroupoid = function Semigroupoid(compose) {
    this.compose = compose;
  };

  var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
      return function (x) {
        return f(g(x));
      };
    };
  });

  var compose = function compose(dict) {
    return dict.compose;
  };

  var composeFlipped = function composeFlipped(dictSemigroupoid) {
    return function (f) {
      return function (g) {
        return compose(dictSemigroupoid)(g)(f);
      };
    };
  };

  exports["compose"] = compose;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];

  var Category = function Category(Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
  };

  var identity = function identity(dict) {
    return dict.identity;
  };

  var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
    return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var Data_Boolean = $PS["Data.Boolean"];

  var on = function on(f) {
    return function (g) {
      return function (x) {
        return function (y) {
          return f(g(x))(g(y));
        };
      };
    };
  };

  var flip = function flip(f) {
    return function (b) {
      return function (a) {
        return f(a)(b);
      };
    };
  };

  var $$const = function $$const(a) {
    return function (v) {
      return a;
    };
  };

  var applyN = function applyN(f) {
    var go = function go($copy_n) {
      return function ($copy_acc) {
        var $tco_var_n = $copy_n;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(n, acc) {
          if (n <= 0) {
            $tco_done = true;
            return acc;
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_n = n - 1 | 0;
            $copy_acc = f(acc);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Function (line 94, column 3 - line 96, column 37): " + [n.constructor.name, acc.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_n, $copy_acc);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  };

  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyN"] = applyN;
  exports["on"] = on;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }

      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});

(function (exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];

  var Functor = function Functor(map) {
    this.map = map;
  };

  var map = function map(dict) {
    return dict.map;
  };

  var mapFlipped = function mapFlipped(dictFunctor) {
    return function (fa) {
      return function (f) {
        return map(dictFunctor)(f)(fa);
      };
    };
  };

  var $$void = function $$void(dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };

  var voidLeft = function voidLeft(dictFunctor) {
    return function (f) {
      return function (x) {
        return map(dictFunctor)(Data_Function["const"](x))(f);
      };
    };
  };

  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);

  var flap = function flap(dictFunctor) {
    return function (ff) {
      return function (x) {
        return map(dictFunctor)(function (f) {
          return f(x);
        })(ff);
      };
    };
  };

  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidLeft"] = voidLeft;
  exports["flap"] = flap;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];

  var Apply = function Apply(Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
  };

  var apply = function apply(dict) {
    return dict.apply;
  };

  var applyFirst = function applyFirst(dictApply) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
      };
    };
  };

  var applySecond = function applySecond(dictApply) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
      };
    };
  };

  var lift2 = function lift2(dictApply) {
    return function (f) {
      return function (a) {
        return function (b) {
          return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
        };
      };
    };
  };

  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];

  var Applicative = function Applicative(Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
  };

  var pure = function pure(dict) {
    return dict.pure;
  };

  var unless = function unless(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (!v) {
          return v1;
        }

        ;

        if (v) {
          return pure(dictApplicative)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };

  var liftA1 = function liftA1(dictApplicative) {
    return function (f) {
      return function (a) {
        return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
      };
    };
  };

  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];

  var Discard = function Discard(discard) {
    this.discard = discard;
  };

  var Bind = function Bind(Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
  };

  var discard = function discard(dict) {
    return dict.discard;
  };

  var bind = function bind(dict) {
    return dict.bind;
  };

  var bindFlipped = function bindFlipped(dictBind) {
    return Data_Function.flip(bind(dictBind));
  };

  var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bindFlipped(dictBind)(f)(g(a));
        };
      };
    };
  };

  var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
  });

  var join = function join(dictBind) {
    return function (m) {
      return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];

  var Nothing = function () {
    function Nothing() {}

    ;
    Nothing.value = new Nothing();
    return Nothing;
  }();

  var Just = function () {
    function Just(value0) {
      this.value0 = value0;
    }

    ;

    Just.create = function (value0) {
      return new Just(value0);
    };

    return Just;
  }();

  var maybe = function maybe(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Nothing) {
          return v;
        }

        ;

        if (v2 instanceof Just) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
      if (v1 instanceof Just) {
        return new Just(v(v1.value0));
      }

      ;
      return Nothing.value;
    };
  });

  var fromMaybe = function fromMaybe(a) {
    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };

  var fromJust = function fromJust(dictPartial) {
    return function (v) {
      if (v instanceof Just) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [v.constructor.name]);
    };
  };

  var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
  }, function (v) {
    return function (v1) {
      if (v instanceof Just) {
        return Data_Functor.map(functorMaybe)(v.value0)(v1);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
  }, function (v) {
    return function (v1) {
      if (v instanceof Just) {
        return v1(v.value0);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";
  exports["applicationFormURLEncoded"] = applicationFormURLEncoded;
  exports["applicationJSON"] = applicationJSON;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Affjax.RequestBody"] = $PS["Affjax.RequestBody"] || {};
  var exports = $PS["Affjax.RequestBody"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];

  var ArrayView = function () {
    function ArrayView(value0) {
      this.value0 = value0;
    }

    ;

    ArrayView.create = function (value0) {
      return new ArrayView(value0);
    };

    return ArrayView;
  }();

  var Blob = function () {
    function Blob(value0) {
      this.value0 = value0;
    }

    ;

    Blob.create = function (value0) {
      return new Blob(value0);
    };

    return Blob;
  }();

  var Document = function () {
    function Document(value0) {
      this.value0 = value0;
    }

    ;

    Document.create = function (value0) {
      return new Document(value0);
    };

    return Document;
  }();

  var $$String = function () {
    function $$String(value0) {
      this.value0 = value0;
    }

    ;

    $$String.create = function (value0) {
      return new $$String(value0);
    };

    return $$String;
  }();

  var FormData = function () {
    function FormData(value0) {
      this.value0 = value0;
    }

    ;

    FormData.create = function (value0) {
      return new FormData(value0);
    };

    return FormData;
  }();

  var FormURLEncoded = function () {
    function FormURLEncoded(value0) {
      this.value0 = value0;
    }

    ;

    FormURLEncoded.create = function (value0) {
      return new FormURLEncoded(value0);
    };

    return FormURLEncoded;
  }();

  var Json = function () {
    function Json(value0) {
      this.value0 = value0;
    }

    ;

    Json.create = function (value0) {
      return new Json(value0);
    };

    return Json;
  }();

  var toMediaType = function toMediaType(v) {
    if (v instanceof FormURLEncoded) {
      return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
    }

    ;

    if (v instanceof Json) {
      return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  exports["ArrayView"] = ArrayView;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["String"] = $$String;
  exports["FormData"] = FormData;
  exports["FormURLEncoded"] = FormURLEncoded;
  exports["Json"] = Json;
  exports["toMediaType"] = toMediaType;
})(PS);

(function (exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];

  var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
  };

  var not = function not(dict) {
    return dict.not;
  };

  var ff = function ff(dict) {
    return dict.ff;
  };

  var disj = function disj(dict) {
    return dict.disj;
  };

  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
      return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
  }, $foreign.boolNot, true);

  var conj = function conj(dict) {
    return dict.conj;
  };

  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);

(function (exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];

  var Semigroup = function Semigroup(append) {
    this.append = append;
  };

  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);

  var append = function append(dict) {
    return dict.append;
  };

  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Monoid = function Monoid(Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
  };

  var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
  }, "");

  var mempty = function mempty(dict) {
    return dict.mempty;
  };

  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Disj = function Disj(x) {
    return x;
  };

  var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    });
  };

  var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
      return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };

  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Monoid.Endo"] = $PS["Data.Monoid.Endo"] || {};
  var exports = $PS["Data.Monoid.Endo"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Endo = function Endo(x) {
    return x;
  };

  var semigroupEndo = function semigroupEndo(dictSemigroupoid) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
      };
    });
  };

  var monoidEndo = function monoidEndo(dictCategory) {
    return new Data_Monoid.Monoid(function () {
      return semigroupEndo(dictCategory.Semigroupoid0());
    }, Control_Category.identity(dictCategory));
  };

  exports["Endo"] = Endo;
  exports["monoidEndo"] = monoidEndo;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Monoid_Endo = $PS["Data.Monoid.Endo"];

  var Newtype = function Newtype(unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
  };

  var wrap = function wrap(dict) {
    return dict.wrap;
  };

  var unwrap = function unwrap(dict) {
    return dict.unwrap;
  };

  var newtypeEndo = new Newtype(function (v) {
    return v;
  }, Data_Monoid_Endo.Endo);
  var newtypeDisj = new Newtype(function (v) {
    return v;
  }, Data_Monoid_Disj.Disj);

  var alaF = function alaF(dictFunctor) {
    return function (dictFunctor1) {
      return function (dictNewtype) {
        return function (dictNewtype1) {
          return function (v) {
            return function (f) {
              var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
              var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
              return function ($98) {
                return $96(f($97($98)));
              };
            };
          };
        };
      };
    };
  };

  var ala = function ala(dictFunctor) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return function (f) {
            return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
          };
        };
      };
    };
  };

  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["ala"] = ala;
  exports["alaF"] = alaF;
  exports["newtypeDisj"] = newtypeDisj;
  exports["newtypeEndo"] = newtypeEndo;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];

  var MediaType = function MediaType(x) {
    return x;
  };

  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
  }, MediaType);
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Affjax.RequestHeader"] = $PS["Affjax.RequestHeader"] || {};
  var exports = $PS["Affjax.RequestHeader"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Accept = function () {
    function Accept(value0) {
      this.value0 = value0;
    }

    ;

    Accept.create = function (value0) {
      return new Accept(value0);
    };

    return Accept;
  }();

  var ContentType = function () {
    function ContentType(value0) {
      this.value0 = value0;
    }

    ;

    ContentType.create = function (value0) {
      return new ContentType(value0);
    };

    return ContentType;
  }();

  var RequestHeader = function () {
    function RequestHeader(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    RequestHeader.create = function (value0) {
      return function (value1) {
        return new RequestHeader(value0, value1);
      };
    };

    return RequestHeader;
  }();

  var value = function value(v) {
    if (v instanceof Accept) {
      return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    }

    ;

    if (v instanceof ContentType) {
      return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
    }

    ;

    if (v instanceof RequestHeader) {
      return v.value1;
    }

    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [v.constructor.name]);
  };

  var name = function name(v) {
    if (v instanceof Accept) {
      return "Accept";
    }

    ;

    if (v instanceof ContentType) {
      return "Content-Type";
    }

    ;

    if (v instanceof RequestHeader) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [v.constructor.name]);
  };

  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["name"] = name;
  exports["value"] = value;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Affjax.ResponseFormat"] = $PS["Affjax.ResponseFormat"] || {};
  var exports = $PS["Affjax.ResponseFormat"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];

  var $$ArrayBuffer = function () {
    function $$ArrayBuffer(value0) {
      this.value0 = value0;
    }

    ;

    $$ArrayBuffer.create = function (value0) {
      return new $$ArrayBuffer(value0);
    };

    return $$ArrayBuffer;
  }();

  var Blob = function () {
    function Blob(value0) {
      this.value0 = value0;
    }

    ;

    Blob.create = function (value0) {
      return new Blob(value0);
    };

    return Blob;
  }();

  var Document = function () {
    function Document(value0) {
      this.value0 = value0;
    }

    ;

    Document.create = function (value0) {
      return new Document(value0);
    };

    return Document;
  }();

  var Json = function () {
    function Json(value0) {
      this.value0 = value0;
    }

    ;

    Json.create = function (value0) {
      return new Json(value0);
    };

    return Json;
  }();

  var $$String = function () {
    function $$String(value0) {
      this.value0 = value0;
    }

    ;

    $$String.create = function (value0) {
      return new $$String(value0);
    };

    return $$String;
  }();

  var Ignore = function () {
    function Ignore(value0) {
      this.value0 = value0;
    }

    ;

    Ignore.create = function (value0) {
      return new Ignore(value0);
    };

    return Ignore;
  }();

  var toResponseType = function toResponseType(v) {
    if (v instanceof $$ArrayBuffer) {
      return "arraybuffer";
    }

    ;

    if (v instanceof Blob) {
      return "blob";
    }

    ;

    if (v instanceof Document) {
      return "document";
    }

    ;

    if (v instanceof Json) {
      return "text";
    }

    ;

    if (v instanceof $$String) {
      return "text";
    }

    ;

    if (v instanceof Ignore) {
      return "";
    }

    ;
    throw new Error("Failed pattern match at Affjax.ResponseFormat (line 46, column 3 - line 52, column 19): " + [v.constructor.name]);
  };

  var toMediaType = function toMediaType(v) {
    if (v instanceof Json) {
      return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  var string = new $$String(Control_Category.identity(Control_Category.categoryFn));
  var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["Json"] = Json;
  exports["String"] = $$String;
  exports["Ignore"] = Ignore;
  exports["string"] = string;
  exports["ignore"] = ignore;
  exports["toResponseType"] = toResponseType;
  exports["toMediaType"] = toMediaType;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Affjax.ResponseHeader"] = $PS["Affjax.ResponseHeader"] || {};
  var exports = $PS["Affjax.ResponseHeader"];

  var ResponseHeader = function () {
    function ResponseHeader(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ResponseHeader.create = function (value0) {
      return function (value1) {
        return new ResponseHeader(value0, value1);
      };
    };

    return ResponseHeader;
  }();

  exports["ResponseHeader"] = ResponseHeader;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];

  var Alt = function Alt(Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
  };

  var alt = function alt(dict) {
    return dict.alt;
  };

  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];

  var Monad = function Monad(Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
  };

  var ap = function ap(dictMonad) {
    return function (f) {
      return function (a) {
        return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
          return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
            return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
          });
        });
      };
    };
  };

  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];

  var Bifunctor = function Bifunctor(bimap) {
    this.bimap = bimap;
  };

  var bimap = function bimap(dict) {
    return dict.bimap;
  };

  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];

  var Left = function () {
    function Left(value0) {
      this.value0 = value0;
    }

    ;

    Left.create = function (value0) {
      return new Left(value0);
    };

    return Left;
  }();

  var Right = function () {
    function Right(value0) {
      this.value0 = value0;
    }

    ;

    Right.create = function (value0) {
      return new Right(value0);
    };

    return Right;
  }();

  var note = function note(a) {
    return Data_Maybe.maybe(new Left(a))(Right.create);
  };

  var functorEither = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }

      ;

      if (m instanceof Right) {
        return new Right(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [m.constructor.name]);
    };
  });

  var either = function either(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var choose = function choose(dictAlt) {
    return function (a) {
      return function (b) {
        return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
      };
    };
  };

  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return new Left(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return new Right(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  });
  var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
  }, function (v) {
    return function (v1) {
      if (v instanceof Left) {
        return new Left(v.value0);
      }

      ;

      if (v instanceof Right) {
        return Data_Functor.map(functorEither)(v.value0)(v1);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
  }, either(function (e) {
    return function (v) {
      return new Left(e);
    };
  })(function (a) {
    return function (f) {
      return f(a);
    };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
  }, function () {
    return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["choose"] = choose;
  exports["note"] = note;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];

  var MonadThrow = function MonadThrow(Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
  };

  var MonadError = function MonadError(MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
  };

  var throwError = function throwError(dict) {
    return dict.throwError;
  };

  var catchError = function catchError(dict) {
    return dict.catchError;
  };

  var $$try = function $$try(dictMonadError) {
    return function (a) {
      return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function () {
        var $17 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
        return function ($18) {
          return $17(Data_Either.Left.create($18));
        };
      }());
    };
  };

  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);

(function (exports) {
  "use strict";

  var refEq = function refEq(r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];

  var Eq1 = function Eq1(eq1) {
    this.eq1 = eq1;
  };

  var Eq = function Eq(eq) {
    this.eq = eq;
  };

  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);

  var eq1 = function eq1(dict) {
    return dict.eq1;
  };

  var eq = function eq(dict) {
    return dict.eq;
  };

  var notEq = function notEq(dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
      };
    };
  };

  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["Eq1"] = Eq1;
  exports["eq1"] = eq1;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);

(function (exports) {
  "use strict";

  var unsafeCompareImpl = function unsafeCompareImpl(lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };

  exports.ordBooleanImpl = unsafeCompareImpl;
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var Data_Eq = $PS["Data.Eq"];

  var LT = function () {
    function LT() {}

    ;
    LT.value = new LT();
    return LT;
  }();

  var GT = function () {
    function GT() {}

    ;
    GT.value = new GT();
    return GT;
  }();

  var EQ = function () {
    function EQ() {}

    ;
    EQ.value = new EQ();
    return EQ;
  }();

  var invert = function invert(v) {
    if (v instanceof GT) {
      return LT.value;
    }

    ;

    if (v instanceof EQ) {
      return EQ.value;
    }

    ;

    if (v instanceof LT) {
      return GT.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
  };

  var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
      if (v instanceof LT && v1 instanceof LT) {
        return true;
      }

      ;

      if (v instanceof GT && v1 instanceof GT) {
        return true;
      }

      ;

      if (v instanceof EQ && v1 instanceof EQ) {
        return true;
      }

      ;
      return false;
    };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["invert"] = invert;
  exports["eqOrdering"] = eqOrdering;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];

  var Ord1 = function Ord1(Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
  };

  var Ord = function Ord(Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
  };

  var ordString = new Ord(function () {
    return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
  }, $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));

  var compare1 = function compare1(dict) {
    return dict.compare1;
  };

  var compare = function compare(dict) {
    return dict.compare;
  };

  var comparing = function comparing(dictOrd) {
    return function (f) {
      return function (x) {
        return function (y) {
          return compare(dictOrd)(f(x))(f(y));
        };
      };
    };
  };

  var greaterThan = function greaterThan(dictOrd) {
    return function (a1) {
      return function (a2) {
        var v = compare(dictOrd)(a1)(a2);

        if (v instanceof Data_Ordering.GT) {
          return true;
        }

        ;
        return false;
      };
    };
  };

  var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
    return function (a1) {
      return function (a2) {
        var v = compare(dictOrd)(a1)(a2);

        if (v instanceof Data_Ordering.LT) {
          return false;
        }

        ;
        return true;
      };
    };
  };

  var lessThan = function lessThan(dictOrd) {
    return function (a1) {
      return function (a2) {
        var v = compare(dictOrd)(a1)(a2);

        if (v instanceof Data_Ordering.LT) {
          return true;
        }

        ;
        return false;
      };
    };
  };

  var lessThanOrEq = function lessThanOrEq(dictOrd) {
    return function (a1) {
      return function (a2) {
        var v = compare(dictOrd)(a1)(a2);

        if (v instanceof Data_Ordering.GT) {
          return false;
        }

        ;
        return true;
      };
    };
  };

  var max = function max(dictOrd) {
    return function (x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.LT) {
          return y;
        }

        ;

        if (v instanceof Data_Ordering.EQ) {
          return x;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [v.constructor.name]);
      };
    };
  };

  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["Ord1"] = Ord1;
  exports["compare1"] = compare1;
  exports["lessThan"] = lessThan;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["greaterThan"] = greaterThan;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["comparing"] = comparing;
  exports["max"] = max;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);

(function (exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);

    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07":
          return "'\\a'";

        case "\b":
          return "'\\b'";

        case "\f":
          return "'\\f'";

        case "\n":
          return "'\\n'";

        case "\r":
          return "'\\r'";

        case "\t":
          return "'\\t'";

        case "\v":
          return "'\\v'";
      }

      return "'\\" + code.toString(10) + "'";
    }

    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;

        case "\x07":
          return "\\a";

        case "\b":
          return "\\b";

        case "\f":
          return "\\f";

        case "\n":
          return "\\n";

        case "\r":
          return "\\r";

        case "\t":
          return "\\t";

        case "\v":
          return "\\v";
      }

      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];

      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }

      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];

  var Show = function Show(show) {
    this.show = show;
  };

  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (v) {
    if (v) {
      return "true";
    }

    ;

    if (!v) {
      return "false";
    }

    ;
    throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [v.constructor.name]);
  });

  var show = function show(dict) {
    return dict.show;
  };

  var showArray = function showArray(dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
  };

  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];

  var Tuple = function () {
    function Tuple(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Tuple.create = function (value0) {
      return function (value1) {
        return new Tuple(value0, value1);
      };
    };

    return Tuple;
  }();

  var uncurry = function uncurry(f) {
    return function (v) {
      return f(v.value0)(v.value1);
    };
  };

  var snd = function snd(v) {
    return v.value1;
  };

  var showTuple = function showTuple(dictShow) {
    return function (dictShow1) {
      return new Data_Show.Show(function (v) {
        return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
      });
    };
  };

  var functorTuple = new Data_Functor.Functor(function (f) {
    return function (m) {
      return new Tuple(m.value0, f(m.value1));
    };
  });

  var fst = function fst(v) {
    return v.value0;
  };

  var eqTuple = function eqTuple(dictEq) {
    return function (dictEq1) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
        };
      });
    };
  };

  var ordTuple = function ordTuple(dictOrd) {
    return function (dictOrd1) {
      return new Data_Ord.Ord(function () {
        return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
      }, function (x) {
        return function (y) {
          var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

          if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
          }

          ;
          return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
        };
      });
    };
  };

  var curry = function curry(f) {
    return function (a) {
      return function (b) {
        return f(new Tuple(a, b));
      };
    };
  };

  var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return new Tuple(f(v.value0), g(v.value1));
      };
    };
  });
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["curry"] = curry;
  exports["uncurry"] = uncurry;
  exports["showTuple"] = showTuple;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
  exports["bifunctorTuple"] = bifunctorTuple;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];

  var MonadState = function MonadState(Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
  };

  var state = function state(dict) {
    return dict.state;
  };

  var modify_ = function modify_(dictMonadState) {
    return function (f) {
      return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
      });
    };
  };

  var gets = function gets(dictMonadState) {
    return function (f) {
      return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(f(s), s);
      });
    };
  };

  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["gets"] = gets;
  exports["modify_"] = modify_;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];

  var MonadTrans = function MonadTrans(lift) {
    this.lift = lift;
  };

  var lift = function lift(dict) {
    return dict.lift;
  };

  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];

  var ExceptT = function ExceptT(x) {
    return x;
  };

  var runExceptT = function runExceptT(v) {
    return v;
  };

  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
      });
    };
  });

  var mapExceptT = function mapExceptT(f) {
    return function (v) {
      return f(v);
    };
  };

  var functorExceptT = function functorExceptT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
  };

  var monadExceptT = function monadExceptT(dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return bindExceptT(dictMonad);
    });
  };

  var bindExceptT = function bindExceptT(dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyExceptT(dictMonad);
    }, function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function () {
          var $90 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($91) {
            return $90(Data_Either.Left.create($91));
          };
        }())(function (a) {
          var v1 = k(a);
          return v1;
        }));
      };
    });
  };

  var applyExceptT = function applyExceptT(dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
  };

  var applicativeExceptT = function applicativeExceptT(dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyExceptT(dictMonad);
    }, function () {
      var $92 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($93) {
        return ExceptT($92(Data_Either.Right.create($93)));
      };
    }());
  };

  var monadStateExceptT = function monadStateExceptT(dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
      return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
  };

  var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadExceptT(dictMonad);
    }, function () {
      var $102 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($103) {
        return ExceptT($102(Data_Either.Left.create($103)));
      };
    }());
  };

  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Identity = function Identity(x) {
    return x;
  };

  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (m) {
      return f(m);
    };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
  }, function (v) {
    return function (v1) {
      return v(v1);
    };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
  }, function (v) {
    return function (f) {
      return f(v);
    };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
  }, function () {
    return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];

  var runExcept = function () {
    var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
    return function ($1) {
      return $0(Control_Monad_Except_Trans.runExceptT($1));
    };
  }();

  exports["runExcept"] = runExcept;
})(PS);

(function (exports) {
  "use strict";

  function id(x) {
    return x;
  }

  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});

(function (exports) {
  "use strict";

  exports.empty = {};

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }

      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  exports["empty"] = $foreign.empty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Foreign_Object = $PS["Foreign.Object"];
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["stringify"] = $foreign.stringify;
})(PS);

(function (exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    } catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];

  var jsonParser = function jsonParser(j) {
    return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };

  exports["jsonParser"] = jsonParser;
})(PS);

(function (exports) {
  "use strict"; //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start,
          n = 0;

      while (i !== end) {
        result[n++] = i;
        i += step;
      }

      result[n] = i;
      return result;
    };
  };

  var replicateFill = function replicateFill(count) {
    return function (value) {
      if (count < 1) {
        return [];
      }

      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function replicatePolyfill(count) {
    return function (value) {
      var result = [];
      var n = 0;

      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }

      return result;
    };
  }; // In browsers that have Array.prototype.fill we use it, as it's faster.


  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  exports.fromFoldableImpl = function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }

    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;

      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }

      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  }(); //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.length = function (xs) {
    return xs.length;
  }; //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  }; //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------


  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  }; //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing : just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }

          return nothing;
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  }; //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  }; //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);

        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }

        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Lazy"] = $PS["Control.Lazy"] || {};
  var exports = $PS["Control.Lazy"];

  var Lazy = function Lazy(defer) {
    this.defer = defer;
  };

  var defer = function defer(dict) {
    return dict.defer;
  };

  var fix = function fix(dictLazy) {
    return function (f) {
      var go = defer(dictLazy)(function (v) {
        return f(go);
      });
      return go;
    };
  };

  exports["defer"] = defer;
  exports["Lazy"] = Lazy;
  exports["fix"] = fix;
})(PS);

(function (exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }

        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }

        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});

(function (exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];

  var Semiring = function Semiring(add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
  };

  var zero = function zero(dict) {
    return dict.zero;
  };

  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);

  var one = function one(dict) {
    return dict.one;
  };

  var mul = function mul(dict) {
    return dict.mul;
  };

  var add = function add(dict) {
    return dict.add;
  };

  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
  exports["semiringNumber"] = semiringNumber;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Monoid_Endo = $PS["Data.Monoid.Endo"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Unit = $PS["Data.Unit"];

  var Foldable = function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
  };

  var foldr = function foldr(dict) {
    return dict.foldr;
  };

  var traverse_ = function traverse_(dictApplicative) {
    return function (dictFoldable) {
      return function (f) {
        return foldr(dictFoldable)(function () {
          var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
          return function ($198) {
            return $197(f($198));
          };
        }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
      };
    };
  };

  var sequence_ = function sequence_(dictApplicative) {
    return function (dictFoldable) {
      return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var foldl = function foldl(dict) {
    return dict.foldl;
  };

  var intercalate = function intercalate(dictFoldable) {
    return function (dictMonoid) {
      return function (sep) {
        return function (xs) {
          var go = function go(v) {
            return function (x) {
              if (v.init) {
                return {
                  init: false,
                  acc: x
                };
              }

              ;
              return {
                init: false,
                acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
              };
            };
          };

          return foldl(dictFoldable)(go)({
            init: true,
            acc: Data_Monoid.mempty(dictMonoid)
          })(xs).acc;
        };
      };
    };
  };

  var length = function length(dictFoldable) {
    return function (dictSemiring) {
      return foldl(dictFoldable)(function (c) {
        return function (v) {
          return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
        };
      })(Data_Semiring.zero(dictSemiring));
    };
  };

  var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
    return function (dictMonoid) {
      return function (f) {
        return foldr(dictFoldable)(function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };

  var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);

  var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
    return function (dictMonoid) {
      return function (f) {
        return foldl(dictFoldable)(function (acc) {
          return function (x) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };

  var foldMap = function foldMap(dict) {
    return dict.foldMap;
  };

  var foldrDefault = function foldrDefault(dictFoldable) {
    return function (c) {
      return function (u) {
        return function (xs) {
          return Data_Newtype.unwrap(Data_Newtype.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($203) {
            return Data_Monoid_Endo.Endo(c($203));
          })(xs))(u);
        };
      };
    };
  };

  var foldM = function foldM(dictFoldable) {
    return function (dictMonad) {
      return function (f) {
        return function (a0) {
          return foldl(dictFoldable)(function (ma) {
            return function (b) {
              return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
            };
          })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
        };
      };
    };
  };

  var any = function any(dictFoldable) {
    return function (dictHeytingAlgebra) {
      return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
  };

  var elem = function elem(dictFoldable) {
    return function (dictEq) {
      var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $205 = Data_Eq.eq(dictEq);
      return function ($206) {
        return $204($205($206));
      };
    };
  };

  var notElem = function notElem(dictFoldable) {
    return function (dictEq) {
      return function (x) {
        var $207 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
        var $208 = elem(dictFoldable)(dictEq)(x);
        return function ($209) {
          return $207($208($209));
        };
      };
    };
  };

  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldrDefault"] = foldrDefault;
  exports["foldMapDefaultL"] = foldMapDefaultL;
  exports["foldM"] = foldM;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["notElem"] = notElem;
  exports["length"] = length;
  exports["foldableArray"] = foldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
      return new Data_Maybe.Just({
        head: x,
        tail: xs
      });
    };
  });

  var sortBy = function sortBy(comp) {
    return function (xs) {
      var comp$prime = function comp$prime(x) {
        return function (y) {
          var v = comp(x)(y);

          if (v instanceof Data_Ordering.GT) {
            return 1;
          }

          ;

          if (v instanceof Data_Ordering.EQ) {
            return 0;
          }

          ;

          if (v instanceof Data_Ordering.LT) {
            return -1 | 0;
          }

          ;
          throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 705, column 13): " + [v.constructor.name]);
        };
      };

      return $foreign.sortImpl(comp$prime)(xs);
    };
  };

  var sort = function sort(dictOrd) {
    return function (xs) {
      return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
  };

  var some = function some(dictAlternative) {
    return function (dictLazy) {
      return function (v) {
        return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
          return many(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };

  var many = function many(dictAlternative) {
    return function (dictLazy) {
      return function (v) {
        return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
      };
    };
  };

  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var fromFoldable = function fromFoldable(dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };

  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var elemIndex = function elemIndex(dictEq) {
    return function (x) {
      return findIndex(function (v) {
        return Data_Eq.eq(dictEq)(v)(x);
      });
    };
  };

  exports["fromFoldable"] = fromFoldable;
  exports["some"] = some;
  exports["many"] = many;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["elemIndex"] = elemIndex;
  exports["updateAt"] = updateAt;
  exports["sort"] = sort;
  exports["zip"] = zip;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["take"] = $foreign.take;
  exports["zipWith"] = $foreign.zipWith;
})(PS);

(function (exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];

  var $$null = function $$null(s) {
    return s === "";
  };

  exports["null"] = $$null;
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["joinWith"] = $foreign.joinWith;
})(PS);

(function (exports) {
  "use strict"; // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                  case 0:
                    return pure([]);

                  case 1:
                    return map(array1)(f(array[bot]));

                  case 2:
                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                  case 3:
                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                  default:
                    // This slightly tricky pivot selection aims to produce two
                    // even-length partitions where possible.
                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }

              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];

  var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
  };

  var traverse = function traverse(dict) {
    return dict.traverse;
  };

  var sequenceDefault = function sequenceDefault(dictTraversable) {
    return function (dictApplicative) {
      return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
  }, function () {
    return Data_Functor.functorArray;
  }, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
  });

  var sequence = function sequence(dict) {
    return dict.sequence;
  };

  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS);

(function (exports) {
  /* globals exports */
  "use strict";

  exports.infinity = Infinity;

  var encdecURI = function encdecURI(encdec) {
    return function (fail, succ, s) {
      try {
        return succ(encdec(s));
      } catch (e) {
        return fail(e.message);
      }
    };
  };

  exports._encodeURIComponent = encdecURI(encodeURIComponent);
})(PS["Global"] = PS["Global"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];

  var $$encodeURIComponent = function $$encodeURIComponent(s) {
    return $foreign["_encodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
  };

  exports["encodeURIComponent"] = $$encodeURIComponent;
  exports["infinity"] = $foreign.infinity;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.FormURLEncoded"] = $PS["Data.FormURLEncoded"] || {};
  var exports = $PS["Data.FormURLEncoded"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Global = $PS["Global"];

  var toArray = function toArray(v) {
    return v;
  };

  var encode = function () {
    var encodePart = function encodePart(v) {
      if (v.value1 instanceof Data_Maybe.Nothing) {
        return Global["encodeURIComponent"](v.value0);
      }

      ;

      if (v.value1 instanceof Data_Maybe.Just) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
          return function (val) {
            return key + ("=" + val);
          };
        })(Global["encodeURIComponent"](v.value0)))(Global["encodeURIComponent"](v.value1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 108): " + [v.constructor.name]);
    };

    var $19 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
    var $20 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
    return function ($21) {
      return $19($20(toArray($21)));
    };
  }();

  exports["encode"] = encode;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.HTTP.Method"] = $PS["Data.HTTP.Method"] || {};
  var exports = $PS["Data.HTTP.Method"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];

  var OPTIONS = function () {
    function OPTIONS() {}

    ;
    OPTIONS.value = new OPTIONS();
    return OPTIONS;
  }();

  var GET = function () {
    function GET() {}

    ;
    GET.value = new GET();
    return GET;
  }();

  var HEAD = function () {
    function HEAD() {}

    ;
    HEAD.value = new HEAD();
    return HEAD;
  }();

  var POST = function () {
    function POST() {}

    ;
    POST.value = new POST();
    return POST;
  }();

  var PUT = function () {
    function PUT() {}

    ;
    PUT.value = new PUT();
    return PUT;
  }();

  var DELETE = function () {
    function DELETE() {}

    ;
    DELETE.value = new DELETE();
    return DELETE;
  }();

  var TRACE = function () {
    function TRACE() {}

    ;
    TRACE.value = new TRACE();
    return TRACE;
  }();

  var CONNECT = function () {
    function CONNECT() {}

    ;
    CONNECT.value = new CONNECT();
    return CONNECT;
  }();

  var PROPFIND = function () {
    function PROPFIND() {}

    ;
    PROPFIND.value = new PROPFIND();
    return PROPFIND;
  }();

  var PROPPATCH = function () {
    function PROPPATCH() {}

    ;
    PROPPATCH.value = new PROPPATCH();
    return PROPPATCH;
  }();

  var MKCOL = function () {
    function MKCOL() {}

    ;
    MKCOL.value = new MKCOL();
    return MKCOL;
  }();

  var COPY = function () {
    function COPY() {}

    ;
    COPY.value = new COPY();
    return COPY;
  }();

  var MOVE = function () {
    function MOVE() {}

    ;
    MOVE.value = new MOVE();
    return MOVE;
  }();

  var LOCK = function () {
    function LOCK() {}

    ;
    LOCK.value = new LOCK();
    return LOCK;
  }();

  var UNLOCK = function () {
    function UNLOCK() {}

    ;
    UNLOCK.value = new UNLOCK();
    return UNLOCK;
  }();

  var PATCH = function () {
    function PATCH() {}

    ;
    PATCH.value = new PATCH();
    return PATCH;
  }();

  var unCustomMethod = function unCustomMethod(v) {
    return v;
  };

  var showMethod = new Data_Show.Show(function (v) {
    if (v instanceof OPTIONS) {
      return "OPTIONS";
    }

    ;

    if (v instanceof GET) {
      return "GET";
    }

    ;

    if (v instanceof HEAD) {
      return "HEAD";
    }

    ;

    if (v instanceof POST) {
      return "POST";
    }

    ;

    if (v instanceof PUT) {
      return "PUT";
    }

    ;

    if (v instanceof DELETE) {
      return "DELETE";
    }

    ;

    if (v instanceof TRACE) {
      return "TRACE";
    }

    ;

    if (v instanceof CONNECT) {
      return "CONNECT";
    }

    ;

    if (v instanceof PROPFIND) {
      return "PROPFIND";
    }

    ;

    if (v instanceof PROPPATCH) {
      return "PROPPATCH";
    }

    ;

    if (v instanceof MKCOL) {
      return "MKCOL";
    }

    ;

    if (v instanceof COPY) {
      return "COPY";
    }

    ;

    if (v instanceof MOVE) {
      return "MOVE";
    }

    ;

    if (v instanceof LOCK) {
      return "LOCK";
    }

    ;

    if (v instanceof UNLOCK) {
      return "UNLOCK";
    }

    ;

    if (v instanceof PATCH) {
      return "PATCH";
    }

    ;
    throw new Error("Failed pattern match at Data.HTTP.Method (line 40, column 1 - line 56, column 23): " + [v.constructor.name]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["GET"] = GET;
  exports["print"] = print;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];

  var Plus = function Plus(Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
  };

  var empty = function empty(dict) {
    return dict.empty;
  };

  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];

  var NonEmpty = function () {
    function NonEmpty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    NonEmpty.create = function (value0) {
      return function (value1) {
        return new NonEmpty(value0, value1);
      };
    };

    return NonEmpty;
  }();

  var singleton = function singleton(dictPlus) {
    return function (a) {
      return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
  };

  var functorNonEmpty = function functorNonEmpty(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return function (m) {
        return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
      };
    });
  };

  var foldl1 = function foldl1(dictFoldable) {
    return function (f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
      };
    };
  };

  var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
        };
      };
    }, function (f) {
      return function (b) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
        };
      };
    }, function (f) {
      return function (b) {
        return function (v) {
          return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
        };
      };
    });
  };

  var traversableNonEmpty = function traversableNonEmpty(dictTraversable) {
    return new Data_Traversable.Traversable(function () {
      return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
      return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
      };
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
        };
      };
    });
  };

  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["foldl1"] = foldl1;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
  exports["traversableNonEmpty"] = traversableNonEmpty;
})(PS);

(function (exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});

(function (exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Unfoldable1 = function Unfoldable1(unfoldr1) {
    this.unfoldr1 = unfoldr1;
  };

  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];

  var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
    this.Unfoldable10 = Unfoldable10;
    this.unfoldr = unfoldr;
  };

  var unfoldr = function unfoldr(dict) {
    return dict.unfoldr;
  };

  var unfoldableArray = new Unfoldable(function () {
    return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

  var replicate = function replicate(dictUnfoldable) {
    return function (n) {
      return function (v) {
        var step = function step(i) {
          var $7 = i <= 0;

          if ($7) {
            return Data_Maybe.Nothing.value;
          }

          ;
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
        };

        return unfoldr(dictUnfoldable)(step)(n);
      };
    };
  };

  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["replicate"] = replicate;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];

  var Nil = function () {
    function Nil() {}

    ;
    Nil.value = new Nil();
    return Nil;
  }();

  var Cons = function () {
    function Cons(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Cons.create = function (value0) {
      return function (value1) {
        return new Cons(value0, value1);
      };
    };

    return Cons;
  }();

  var NonEmptyList = function NonEmptyList(x) {
    return x;
  };

  var listMap = function listMap(f) {
    var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
      return function ($copy_v) {
        var $tco_var_chunksAcc = $copy_chunksAcc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(chunksAcc, v) {
          if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
            $tco_var_chunksAcc = new Cons(v, chunksAcc);
            $copy_v = v.value1.value1.value1;
            return;
          }

          ;

          var unrolledMap = function unrolledMap(v1) {
            if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
            }

            ;

            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), Nil.value);
            }

            ;
            return Nil.value;
          };

          var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
            return function ($copy_acc) {
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v1, acc) {
                if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                  $tco_var_v1 = v1.value1;
                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                  return;
                }

                ;
                $tco_done = true;
                return acc;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v1, $copy_acc);
              }

              ;
              return $tco_result;
            };
          };

          $tco_done = true;
          return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return chunkedRevMap(Nil.value);
  };

  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return Data_Foldable.foldl(foldableList)(function (acc) {
        var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
        return function ($203) {
          return $202(f($203));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  }, function (f) {
    var go = function go($copy_b) {
      return function ($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return b;
          }

          ;

          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  }, function (f) {
    return function (b) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
      var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
      return function ($205) {
        return $204(rev($205));
      };
    };
  });
  var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
      return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
  });
  var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
  }, Nil.value);

  var showList = function showList(dictShow) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Nil) {
        return "Nil";
      }

      ;
      return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
  };

  var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
  }, function () {
    return functorList;
  }, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
    return function (f) {
      var $219 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
      var $220 = Data_Foldable.foldl(foldableList)(function (acc) {
        var $222 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
        return function ($223) {
          return $222(f($223));
        };
      })(Control_Applicative.pure(dictApplicative)(Nil.value));
      return function ($221) {
        return $219($220($221));
      };
    };
  });
  var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      var go = function go($copy_source) {
        return function ($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(source, memo) {
            var v = f(source);

            if (v.value1 instanceof Data_Maybe.Just) {
              $tco_var_source = v.value1.value0;
              $copy_memo = new Cons(v.value0, memo);
              return;
            }

            ;

            if (v.value1 instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 133, column 22 - line 135, column 61): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }

          ;
          return $tco_result;
        };
      };

      return go(b)(Nil.value);
    };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1List;
  }, function (f) {
    return function (b) {
      var go = function go($copy_source) {
        return function ($copy_memo) {
          var $tco_var_source = $copy_source;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(source, memo) {
            var v = f(source);

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
            }

            ;

            if (v instanceof Data_Maybe.Just) {
              $tco_var_source = v.value0.value1;
              $copy_memo = new Cons(v.value0.value0, memo);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 140, column 22 - line 142, column 52): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_source, $copy_memo);
          }

          ;
          return $tco_result;
        };
      };

      return go(b)(Nil.value);
    };
  });
  var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
      return function (ys) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            return function ($copy_v2) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, v1, v2) {
                if (!v2) {
                  $tco_done = true;
                  return false;
                }

                ;

                if (v instanceof Nil && v1 instanceof Nil) {
                  $tco_done = true;
                  return v2;
                }

                ;

                if (v instanceof Cons && v1 instanceof Cons) {
                  $tco_var_v = v.value1;
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                  return;
                }

                ;
                $tco_done = true;
                return false;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
              }

              ;
              return $tco_result;
            };
          };
        };

        return go(xs)(ys)(true);
      };
    };
  });

  var eqList = function eqList(dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
  };

  var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
  }, function (dictOrd) {
    return function (xs) {
      return function (ys) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1) {
              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.EQ.value;
              }

              ;

              if (v instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.LT.value;
              }

              ;

              if (v1 instanceof Nil) {
                $tco_done = true;
                return Data_Ordering.GT.value;
              }

              ;

              if (v instanceof Cons && v1 instanceof Cons) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

                if (v2 instanceof Data_Ordering.EQ) {
                  $tco_var_v = v.value1;
                  $copy_v1 = v1.value1;
                  return;
                }

                ;
                $tco_done = true;
                return v2;
              }

              ;
              throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [v.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };

        return go(xs)(ys);
      };
    };
  });

  var ordList = function ordList(dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
  };

  var applyList = new Control_Apply.Apply(function () {
    return functorList;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
  }, function (v) {
    return function (v1) {
      return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
  });
  var bindList = new Control_Bind.Bind(function () {
    return applyList;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 162, column 1 - line 164, column 37): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
  }, function (a) {
    return new Cons(a, Nil.value);
  });
  var altList = new Control_Alt.Alt(function () {
    return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
    return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
  }, function () {
    var $233 = Data_NonEmpty.singleton(plusList);
    return function ($234) {
      return NonEmptyList($233($234));
    };
  }());
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["showList"] = showList;
  exports["eqList"] = eqList;
  exports["ordList"] = ordList;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldableList"] = unfoldableList;
  exports["traversableList"] = traversableList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
  exports["foldableNonEmptyList"] = foldableNonEmptyList;
  exports["traversableNonEmptyList"] = traversableNonEmptyList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
      return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
  })(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));

  var uncons = function uncons(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just({
        head: v.value0,
        tail: v.value1
      });
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };

  var toUnfoldable = function toUnfoldable(dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
        return new Data_Tuple.Tuple(rec.head, rec.tail);
      })(uncons(xs));
    });
  };

  var tail = function tail(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v.value1);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [v.constructor.name]);
  };

  var span = function span(v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
        var v2 = span(v)(v1.value1);
        return {
          init: new Data_List_Types.Cons(v1.value0, v2.init),
          rest: v2.rest
        };
      }

      ;
      return {
        init: Data_List_Types.Nil.value,
        rest: v1
      };
    };
  };

  var snoc = function snoc(xs) {
    return function (x) {
      return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
  };

  var singleton = function singleton(a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };

  var sortBy = function sortBy(cmp) {
    var merge = function merge(v) {
      return function (v1) {
        if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
          if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
            return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
          }

          ;

          if (Data_Boolean.otherwise) {
            return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
          }

          ;
        }

        ;

        if (v instanceof Data_List_Types.Nil) {
          return v1;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          return v;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 473, column 3 - line 473, column 38): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    var mergePairs = function mergePairs(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
      }

      ;
      return v;
    };

    var mergeAll = function mergeAll($copy_v) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return v.value0;
        }

        ;
        $copy_v = mergePairs(v);
        return;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }

      ;
      return $tco_result;
    };

    var sequences = function sequences(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
        if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
          return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
        }

        ;

        if (Data_Boolean.otherwise) {
          return ascending(v.value1.value0)(function (v1) {
            return new Data_List_Types.Cons(v.value0, v1);
          })(v.value1.value1);
        }

        ;
      }

      ;
      return singleton(v);
    };

    var descending = function descending($copy_a) {
      return function ($copy_as) {
        return function ($copy_v) {
          var $tco_var_a = $copy_a;
          var $tco_var_as = $copy_as;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(a, as, v) {
            if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
              $tco_var_a = v.value0;
              $tco_var_as = new Data_List_Types.Cons(a, as);
              $copy_v = v.value1;
              return;
            }

            ;
            $tco_done = true;
            return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
          }

          ;
          return $tco_result;
        };
      };
    };

    var ascending = function ascending($copy_a) {
      return function ($copy_as) {
        return function ($copy_v) {
          var $tco_var_a = $copy_a;
          var $tco_var_as = $copy_as;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(a, as, v) {
            if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
              $tco_var_a = v.value0;

              $tco_var_as = function $tco_var_as(ys) {
                return as(new Data_List_Types.Cons(a, ys));
              };

              $copy_v = v.value1;
              return;
            }

            ;
            $tco_done = true;
            return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
          }

          ;
          return $tco_result;
        };
      };
    };

    return function ($331) {
      return mergeAll(sequences($331));
    };
  };

  var reverse = function () {
    var go = function go($copy_acc) {
      return function ($copy_v) {
        var $tco_var_acc = $copy_acc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return acc;
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [acc.constructor.name, v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go(Data_List_Types.Nil.value);
  }();

  var take = function () {
    var go = function go($copy_acc) {
      return function ($copy_v) {
        return function ($copy_v1) {
          var $tco_var_acc = $copy_acc;
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(acc, v, v1) {
            if (v < 1) {
              $tco_done = true;
              return reverse(acc);
            }

            ;

            if (v1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return reverse(acc);
            }

            ;

            if (v1 instanceof Data_List_Types.Cons) {
              $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
              $tco_var_v = v - 1 | 0;
              $copy_v1 = v1.value1;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List (line 520, column 3 - line 520, column 35): " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };
    };

    return go(Data_List_Types.Nil.value);
  }();

  var unsnoc = function unsnoc(lst) {
    var go = function go($copy_v) {
      return function ($copy_acc) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, acc) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just({
              revInit: acc,
              last: v.value0
            });
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            $tco_var_v = v.value1;
            $copy_acc = new Data_List_Types.Cons(v.value0, acc);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [v.constructor.name, acc.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_acc);
        }

        ;
        return $tco_result;
      };
    };

    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
      return {
        init: reverse(h.revInit),
        last: h.last
      };
    })(go(lst)(Data_List_Types.Nil.value));
  };

  var zipWith = function zipWith(f) {
    return function (xs) {
      return function (ys) {
        var go = function go($copy_v) {
          return function ($copy_v1) {
            return function ($copy_acc) {
              var $tco_var_v = $copy_v;
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, v1, acc) {
                if (v instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return acc;
                }

                ;

                if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return acc;
                }

                ;

                if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                  $tco_var_v = v.value1;
                  $tco_var_v1 = v1.value1;
                  $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.List (line 718, column 3 - line 718, column 21): " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
              }

              ;
              return $tco_result;
            };
          };
        };

        return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
      };
    };
  };

  var zip = zipWith(Data_Tuple.Tuple.create);

  var range = function range(start) {
    return function (end) {
      if (start === end) {
        return singleton(start);
      }

      ;

      if (Data_Boolean.otherwise) {
        var go = function go($copy_s) {
          return function ($copy_e) {
            return function ($copy_step) {
              return function ($copy_rest) {
                var $tco_var_s = $copy_s;
                var $tco_var_e = $copy_e;
                var $tco_var_step = $copy_step;
                var $tco_done = false;
                var $tco_result;

                function $tco_loop(s, e, step, rest) {
                  if (s === e) {
                    $tco_done = true;
                    return new Data_List_Types.Cons(s, rest);
                  }

                  ;

                  if (Data_Boolean.otherwise) {
                    $tco_var_s = s + step | 0;
                    $tco_var_e = e;
                    $tco_var_step = step;
                    $copy_rest = new Data_List_Types.Cons(s, rest);
                    return;
                  }

                  ;
                  throw new Error("Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
                }

                ;

                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                }

                ;
                return $tco_result;
              };
            };
          };
        };

        return go(end)(start)(function () {
          var $220 = start > end;

          if ($220) {
            return 1;
          }

          ;
          return -1 | 0;
        }())(Data_List_Types.Nil.value);
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): " + [start.constructor.name, end.constructor.name]);
    };
  };

  var some = function some(dictAlternative) {
    return function (dictLazy) {
      return function (v) {
        return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
          return many(dictAlternative)(dictLazy)(v);
        }));
      };
    };
  };

  var many = function many(dictAlternative) {
    return function (dictLazy) {
      return function (v) {
        return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
      };
    };
  };

  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
      return acc + 1 | 0;
    };
  })(0);

  var last = function last($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var init = function init(lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return v.init;
    })(unsnoc(lst));
  };

  var head = function head(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [v.constructor.name]);
  };

  var groupBy = function groupBy(v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        var v2 = span(v(v1.value0))(v1.value1);
        return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 605, column 1 - line 605, column 80): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var fromFoldable = function fromFoldable(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };

  var drop = function drop($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v < 1) {
          $tco_done = true;
          return v1;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_List_Types.Nil.value;
        }

        ;

        if (v1 instanceof Data_List_Types.Cons) {
          $tco_var_v = v - 1 | 0;
          $copy_v1 = v1.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 543, column 1 - line 543, column 42): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  var deleteBy = function deleteBy(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Data_List_Types.Nil) {
          return Data_List_Types.Nil.value;
        }

        ;

        if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
          return v2.value1;
        }

        ;

        if (v2 instanceof Data_List_Types.Cons) {
          return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 671, column 1 - line 671, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var $$delete = function $$delete(dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
  };

  var difference = function difference(dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
  };

  var concat = function concat(v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
  };

  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["range"] = range;
  exports["some"] = some;
  exports["many"] = many;
  exports["length"] = length;
  exports["snoc"] = snoc;
  exports["head"] = head;
  exports["unsnoc"] = unsnoc;
  exports["reverse"] = reverse;
  exports["concat"] = concat;
  exports["sortBy"] = sortBy;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["groupBy"] = groupBy;
  exports["difference"] = difference;
  exports["zipWith"] = zipWith;
  exports["zip"] = zip;
  exports["unzip"] = unzip;
})(PS);

(function (exports) {
  "use strict"; // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});

(function (exports) {
  "use strict"; // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];

  var unsafeCrashWith = function unsafeCrashWith(msg) {
    return $foreign.unsafePartial(function (dictPartial) {
      return Partial.crashWith()(msg);
    });
  };

  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];

  var wrappedOperation = function wrappedOperation(name) {
    return function (f) {
      return function (v) {
        var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));

        if (v1 instanceof Data_List_Types.Cons) {
          return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
        }

        ;
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 91, column 3 - line 93, column 81): " + [v1.constructor.name]);
      };
    };
  };

  var toList = function toList(v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
  };

  var singleton = function () {
    var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
    return function ($169) {
      return Data_List_Types.NonEmptyList($168($169));
    };
  }();

  var head = function head(v) {
    return v.value0;
  };

  var groupBy = function () {
    var $181 = wrappedOperation("groupBy");
    return function ($182) {
      return $181(Data_List.groupBy($182));
    };
  }();

  var fromList = function fromList(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 120, column 1 - line 120, column 57): " + [v.constructor.name]);
  };

  exports["fromList"] = fromList;
  exports["toList"] = toList;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["groupBy"] = groupBy;
})(PS);

(function (exports) {
  "use strict";

  exports["null"] = null;

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  exports["toNullable"] = toNullable;
})(PS);

(function (exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};
    /*
    An awkward approximation. We elide evidence we would otherwise need in PS for
    efficiency sake.
    data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
    */

    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    /*
    data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
    */

    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt"; // Various constructors used in interpretation

    var CONS = "Cons"; // Cons-list, for stacks

    var RESUME = "Resume"; // Continue indiscriminately

    var RELEASE = "Release"; // Continue with bracket finalizers

    var FINALIZER = "Finalizer"; // A non-interruptible effect

    var FINALIZED = "Finalized"; // Marker for finalization

    var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

    var FIBER = "Fiber"; // Actual fiber reference

    var THUNK = "Thunk"; // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }

    function AffCtr(tag) {
      var fn = function fn(_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };

      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit = 1024;
      var size = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;

        while (size !== 0) {
          size--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }

        draining = false;
      }

      return {
        isDraining: function isDraining() {
          return draining;
        },
        enqueue: function enqueue(cb) {
          var i, tmp;

          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function register(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function handler(result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function isEmpty() {
          return count === 0;
        },
        killAll: function killAll(killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;

                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }

                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers = {};
            fiberId = 0;
            count = 0;
            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    } // Fiber state machine


    var SUSPENDED = 0; // Suspended, pending a join.

    var CONTINUE = 1; // Interpret the next instruction.

    var STEP_BIND = 2; // Apply the next bind.

    var STEP_RESULT = 3; // Handle potential failure from a result.

    var PENDING = 4; // An async effect is running.

    var RETURN = 5; // The current stack has returned.

    var COMPLETED = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0; // The current branch of the state machine.

      var status = SUSPENDED; // The current point of interest for the state machine branch.

      var step = aff; // Successful step

      var fail = null; // Failure step

      var interrupt = null; // Asynchronous interrupt
      // Stack of continuations for the current fiber.

      var bhead = null;
      var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.

      var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.

      var bracketCount = 0; // Each join gets a new id so they can be revoked.

      var joinId = 0;
      var joins = null;
      var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.

      function _run(localRunTick) {
        var tmp, result, attempt;

        while (true) {
          tmp = null;
          result = null;
          attempt = null;

          switch (status) {
            case STEP_BIND:
              status = CONTINUE;

              try {
                step = bhead(step);

                if (btail === null) {
                  bhead = null;
                } else {
                  bhead = btail._1;
                  btail = btail._2;
                }
              } catch (e) {
                status = RETURN;
                fail = util.left(e);
                step = null;
              }

              break;

            case STEP_RESULT:
              if (util.isLeft(step)) {
                status = RETURN;
                fail = step;
                step = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step = util.fromRight(step);
              }

              break;

            case CONTINUE:
              switch (step.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff(CONS, bhead, btail);
                  }

                  bhead = step._2;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step = util.right(step._1);
                  } else {
                    status = STEP_BIND;
                    step = step._1;
                  }

                  break;

                case SYNC:
                  status = STEP_RESULT;
                  step = runSync(util.left, util.right, step._1);
                  break;

                case ASYNC:
                  status = PENDING;
                  step = runAsync(util.left, step._1, function (result) {
                    return function () {
                      if (runTick !== localRunTick) {
                        return;
                      }

                      runTick++;
                      Scheduler.enqueue(function () {
                        // It's possible to interrupt the fiber between enqueuing and
                        // resuming, so we need to check that the runTick is still
                        // valid.
                        if (runTick !== localRunTick + 1) {
                          return;
                        }

                        status = STEP_RESULT;
                        step = result;

                        _run(runTick);
                      });
                    };
                  });
                  return;

                case THROW:
                  status = RETURN;
                  fail = util.left(step._1);
                  step = null;
                  break;
                // Enqueue the Catch so that we can call the error handler later on
                // in case of an exception.

                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;
                // Enqueue the Bracket so that we can call the appropriate handlers
                // after resource acquisition.

                case BRACKET:
                  bracketCount++;

                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step._2);

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

                  if (step._1) {
                    tmp.run();
                  }

                  step = util.right(tmp);
                  break;

                case SEQ:
                  status = CONTINUE;
                  step = sequential(util, supervisor, step._1);
                  break;
              }

              break;

            case RETURN:
              bhead = null;
              btail = null; // If the current stack has returned, and we have no other stacks to
              // resume or finalizers to run, the fiber has halted and we can
              // invoke all join callbacks. Otherwise we need to resume.

              if (attempts === null) {
                status = COMPLETED;
                step = interrupt || fail || step;
              } else {
                // The interrupt status for the enqueued item.
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;

                switch (attempt.tag) {
                  // We cannot recover from an unmasked interrupt. Otherwise we should
                  // continue stepping, or run the exception handler if an exception
                  // was raised.
                  case CATCH:
                    // We should compare the interrupt status as well because we
                    // only want it to apply if there has been an interrupt since
                    // enqueuing the catch.
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail) {
                      status = CONTINUE;
                      step = attempt._2(util.fromLeft(fail));
                      fail = null;
                    }

                    break;
                  // We cannot resume from an unmasked interrupt or exception.

                  case RESUME:
                    // As with Catch, we only want to ignore in the case of an
                    // interrupt since enqueing the item.
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step = util.fromRight(step);
                    }

                    break;
                  // If we have a bracket, we should enqueue the handlers,
                  // and continue with the success branch only if the fiber has
                  // not been interrupted. If the bracket acquisition failed, we
                  // should not run either.

                  case BRACKET:
                    bracketCount--;

                    if (fail === null) {
                      result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                      // status as the Bracket that is initiating it.

                      attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                      // we are currently within a non-interruptable finalizer.

                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step = attempt._3(result);
                      }
                    }

                    break;
                  // Enqueue the appropriate handler. We increase the bracket count
                  // because it should not be cancelled.

                  case RELEASE:
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE; // It has only been killed if the interrupt status has changed
                    // since we enqueued the item, and the bracket count is 0. If the
                    // bracket count is non-zero then we are in a masked state so it's
                    // impossible to be killed.

                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail) {
                      step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                    } else {
                      step = attempt._1.completed(util.fromRight(step))(attempt._2);
                    }

                    fail = null;
                    bracketCount++;
                    break;

                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE;
                    step = attempt._1;
                    break;

                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step = attempt._1;
                    fail = attempt._2;
                    break;
                }
              }

              break;

            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step));
                }
              }

              joins = null; // If we have an interrupt and a fail, then the thread threw while
              // running finalizers. This should always rethrow in a fresh stack.

              if (interrupt && fail) {
                setTimeout(function () {
                  throw util.fromLeft(fail);
                }, 0); // If we have an unhandled exception, and no other fiber has joined
                // then we need to throw the exception in a fresh stack.
              } else if (util.isLeft(step) && rethrow) {
                setTimeout(function () {
                  // Guard on reathrow because a completely synchronous fiber can
                  // still have an observer which was added after-the-fact.
                  if (rethrow) {
                    throw util.fromLeft(step);
                  }
                }, 0);
              }

              return;

            case SUSPENDED:
              status = CONTINUE;
              break;

            case PENDING:
              return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join;
          return function () {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function handler()
            /* unused */
            {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error);
              status = COMPLETED;
              step = interrupt;

              _run(runTick);

              break;

            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
                }

                status = RETURN;
                step = null;
                fail = null;

                _run(++runTick);
              }

              break;

            default:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                status = RETURN;
                step = null;
                fail = null;
              }

          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();

          if (status === SUSPENDED) {
            _run(runTick);
          }

          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function isSuspended() {
          return status === SUSPENDED;
        },
        run: function run() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                _run(runTick);
              });
            } else {
              _run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId = 0;
      var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

      var killId = 0;
      var kills = {}; // Error used for early cancelation on Alt branches.

      var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

      var interrupt = null; // The root pointer of the tree.

      var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.

      function kill(error, par, cb) {
        var step = par;
        var head = null;
        var tail = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
            case FORKED:
              if (step._3 === EMPTY) {
                tmp = fibers[step._1];
                kills[count++] = tmp.kill(error, function (result) {
                  return function () {
                    count--;

                    if (count === 0) {
                      cb(result)();
                    }
                  };
                });
              } // Terminal case.


              if (head === null) {
                break loop;
              } // Go down the right side of the tree.


              step = head._2;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }

              break;

            case MAP:
              step = step._2;
              break;

            case APPLY:
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }

              head = step;
              step = step._1;
              break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;

          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      } // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.


      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null; // We should never continue if the entire tree has been interrupted.

          if (interrupt !== null) {
            return;
          } // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.


          if (head === null) {
            cb(fail || step)();
            return;
          } // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?


          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
            case MAP:
              if (fail === null) {
                head._3 = util.right(head._1(util.fromRight(step)));
                step = head._3;
              } else {
                head._3 = fail;
              }

              break;

            case APPLY:
              lhs = head._1._3;
              rhs = head._2._3; // If we have a failure we should kill the other side because we
              // can't possible yield a result anymore.

              if (fail) {
                head._3 = fail;
                tmp = true;
                kid = killId++;
                kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function ()
                /* unused */
                {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(fail, null, null);
                    } else {
                      join(fail, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                // We can only proceed if both sides have resolved.
                return;
              } else {
                step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head._3 = step;
              }

              break;

            case ALT:
              lhs = head._1._3;
              rhs = head._2._3; // We can only proceed if both have resolved or we have a success

              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              } // If both sides resolve with an error, we should continue with the
              // first error


              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail = step === lhs ? rhs : lhs;
                step = null;
                head._3 = fail;
              } else {
                head._3 = step;
                tmp = true;
                kid = killId++; // Once a side has resolved, we need to cancel the side that is still
                // pending before we can continue.

                kills[kid] = kill(early, step === lhs ? head._2 : head._1, function ()
                /* unused */
                {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(step, null, null);
                    } else {
                      join(step, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              }

              break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      } // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.


      function run() {
        var status = CONTINUE;
        var step = par;
        var head = null;
        var tail = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
            case CONTINUE:
              switch (step.tag) {
                case MAP:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(MAP, step._1, EMPTY, EMPTY);
                  step = step._2;
                  break;

                case APPLY:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                case ALT:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(ALT, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                default:
                  // When we hit a leaf value, we suspend the stack in the `FORKED`.
                  // When the fiber resolves, it can bubble back up the tree.
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step;
                  step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step)
                  })();
                  fibers[fid] = tmp;

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

              }

              break;

            case RETURN:
              // Terminal case, we are back at the root.
              if (head === null) {
                break loop;
              } // If we are done with the right side, we need to continue down the
              // left. Otherwise we should continue up the stack.


              if (head._1 === EMPTY) {
                head._1 = step;
                status = CONTINUE;
                step = head._2;
                head._2 = EMPTY;
              } else {
                head._2 = step;
                step = head;

                if (tail === null) {
                  head = null;
                } else {
                  head = tail._1;
                  tail = tail._2;
                }
              }

          }
        } // Keep a reference to the tree root so it can be cancelled.


        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      } // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.


      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;

        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];

            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);
        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }

              return nonCanceler;
            };
          });
        };
      }

      run();
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY = EMPTY;
    Aff.Pure = AffCtr(PURE);
    Aff.Throw = AffCtr(THROW);
    Aff.Catch = AffCtr(CATCH);
    Aff.Sync = AffCtr(SYNC);
    Aff.Async = AffCtr(ASYNC);
    Aff.Bind = AffCtr(BIND);
    Aff.Bracket = AffCtr(BRACKET);
    Aff.Fork = AffCtr(FORK);
    Aff.Seq = AffCtr(SEQ);
    Aff.ParMap = AffCtr(MAP);
    Aff.ParApply = AffCtr(APPLY);
    Aff.ParAlt = AffCtr(ALT);
    Aff.Fiber = Fiber;
    Aff.Supervisor = Supervisor;
    Aff.Scheduler = Scheduler;
    Aff.nonCanceler = nonCanceler;
    return Aff;
  }();

  exports._pure = Aff.Pure;
  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;
  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});

(function (exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
  }, function () {
    return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];

  var MonadEffect = function MonadEffect(Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
  };

  var liftEffect = function liftEffect(dict) {
    return dict.liftEffect;
  };

  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var functorAff = new Data_Functor.Functor($foreign["_map"]);

  var ffiUtil = function () {
    var unsafeFromRight = function unsafeFromRight(v) {
      if (v instanceof Data_Either.Right) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Left) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [v.constructor.name]);
    };

    var unsafeFromLeft = function unsafeFromLeft(v) {
      if (v instanceof Data_Either.Left) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [v.constructor.name]);
    };

    var isLeft = function isLeft(v) {
      if (v instanceof Data_Either.Left) {
        return true;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return false;
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [v.constructor.name]);
    };

    return {
      isLeft: isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Data_Either.Left.create,
      right: Data_Either.Right.create
    };
  }();

  var makeFiber = function makeFiber(aff) {
    return $foreign["_makeFiber"](ffiUtil, aff);
  };

  var launchAff = function launchAff(aff) {
    return function __do() {
      var fiber = makeFiber(aff)();
      fiber.run();
      return fiber;
    };
  };

  var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
  }, function () {
    return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
    return monadAff;
  }, $foreign["_liftEffect"]);
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
  }, $foreign["_catchError"]);

  var runAff = function runAff(k) {
    return function (aff) {
      return launchAff(Control_Bind.bindFlipped(bindAff)(function () {
        var $49 = Effect_Class.liftEffect(monadEffectAff);
        return function ($50) {
          return $49(k($50));
        };
      }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
  };

  var runAff_ = function runAff_(k) {
    return function (aff) {
      return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
    };
  };

  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["runAff_"] = runAff_;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Aff.Compat"] = $PS["Effect.Aff.Compat"] || {};
  var exports = $PS["Effect.Aff.Compat"];
  var Data_Either = $PS["Data.Either"];
  var Effect_Aff = $PS["Effect.Aff"];

  var fromEffectFnAff = function fromEffectFnAff(v) {
    return Effect_Aff.makeAff(function (k) {
      return function __do() {
        var v1 = v(function ($4) {
          return k(Data_Either.Left.create($4))();
        }, function ($5) {
          return k(Data_Either.Right.create($5))();
        });
        return function (e) {
          return Effect_Aff.makeAff(function (k2) {
            return function __do() {
              v1(e, function ($6) {
                return k2(Data_Either.Left.create($6))();
              }, function ($7) {
                return k2(Data_Either.Right.create($7))();
              });
              return Effect_Aff.nonCanceler;
            };
          });
        };
      };
    });
  };

  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS);

(function (exports) {
  "use strict";

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Data_Show = $PS["Data.Show"];

  var $$throw = function $$throw($2) {
    return $foreign.throwException($foreign.error($2));
  };

  var showError = new Data_Show.Show($foreign.showErrorImpl);
  exports["throw"] = $$throw;
  exports["showError"] = showError;
  exports["message"] = $foreign.message;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Show = $PS["Data.Show"];

  var ForeignError = function () {
    function ForeignError(value0) {
      this.value0 = value0;
    }

    ;

    ForeignError.create = function (value0) {
      return new ForeignError(value0);
    };

    return ForeignError;
  }();

  var TypeMismatch = function () {
    function TypeMismatch(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    TypeMismatch.create = function (value0) {
      return function (value1) {
        return new TypeMismatch(value0, value1);
      };
    };

    return TypeMismatch;
  }();

  var ErrorAtIndex = function () {
    function ErrorAtIndex(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtIndex.create = function (value0) {
      return function (value1) {
        return new ErrorAtIndex(value0, value1);
      };
    };

    return ErrorAtIndex;
  }();

  var ErrorAtProperty = function () {
    function ErrorAtProperty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtProperty.create = function (value0) {
      return function (value1) {
        return new ErrorAtProperty(value0, value1);
      };
    };

    return ErrorAtProperty;
  }();

  var renderForeignError = function renderForeignError(v) {
    if (v instanceof ForeignError) {
      return v.value0;
    }

    ;

    if (v instanceof ErrorAtIndex) {
      return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
    }

    ;

    if (v instanceof ErrorAtProperty) {
      return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
    }

    ;

    if (v instanceof TypeMismatch) {
      return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [v.constructor.name]);
  };

  var fail = function () {
    var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
    return function ($108) {
      return $107(Data_List_NonEmpty.singleton($108));
    };
  }();

  var unsafeReadTagged = function unsafeReadTagged(tag) {
    return function (value) {
      if ($foreign.tagOf(value) === tag) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
    };
  };

  exports["ForeignError"] = ForeignError;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Affjax"] = $PS["Affjax"] || {};
  var exports = $PS["Affjax"];
  var $foreign = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FormURLEncoded = $PS["Data.FormURLEncoded"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Compat = $PS["Effect.Aff.Compat"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];

  var RequestContentError = function () {
    function RequestContentError(value0) {
      this.value0 = value0;
    }

    ;

    RequestContentError.create = function (value0) {
      return new RequestContentError(value0);
    };

    return RequestContentError;
  }();

  var ResponseBodyError = function () {
    function ResponseBodyError(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ResponseBodyError.create = function (value0) {
      return function (value1) {
        return new ResponseBodyError(value0, value1);
      };
    };

    return ResponseBodyError;
  }();

  var XHRError = function () {
    function XHRError(value0) {
      this.value0 = value0;
    }

    ;

    XHRError.create = function (value0) {
      return new XHRError(value0);
    };

    return XHRError;
  }();

  var request = function request(req) {
    var parseJSON = function parseJSON(v) {
      if (v === "") {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
      }

      ;
      return Data_Either.either(function ($47) {
        return Foreign.fail(Foreign.ForeignError.create($47));
      })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
    };

    var fromResponse = function () {
      if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
        return Foreign.unsafeReadTagged("ArrayBuffer");
      }

      ;

      if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
        return Foreign.unsafeReadTagged("Blob");
      }

      ;

      if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
        return Foreign.unsafeReadTagged("Document");
      }

      ;

      if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
        return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($48) {
          return req.responseFormat.value0(parseJSON($48));
        })(Foreign.unsafeReadTagged("String"));
      }

      ;

      if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
        return Foreign.unsafeReadTagged("String");
      }

      ;

      if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
        return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
      }

      ;
      throw new Error("Failed pattern match at Affjax (line 237, column 18 - line 243, column 57): " + [req.responseFormat.constructor.name]);
    }();

    var extractContent = function extractContent(v) {
      if (v instanceof Affjax_RequestBody.ArrayView) {
        return Data_Either.Right.create(v.value0(Foreign.unsafeToForeign));
      }

      ;

      if (v instanceof Affjax_RequestBody.Blob) {
        return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
      }

      ;

      if (v instanceof Affjax_RequestBody.Document) {
        return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
      }

      ;

      if (v instanceof Affjax_RequestBody["String"]) {
        return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
      }

      ;

      if (v instanceof Affjax_RequestBody.FormData) {
        return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
      }

      ;

      if (v instanceof Affjax_RequestBody.FormURLEncoded) {
        return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
      }

      ;

      if (v instanceof Affjax_RequestBody.Json) {
        return Data_Either.Right.create(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
      }

      ;
      throw new Error("Failed pattern match at Affjax (line 203, column 20 - line 218, column 69): " + [v.constructor.name]);
    };

    var addHeader = function addHeader(mh) {
      return function (hs) {
        if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
          return Data_Array.snoc(hs)(mh.value0);
        }

        ;
        return hs;
      };
    };

    var headers = function headers(reqContent) {
      return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
    };

    var ajaxRequest = function ajaxRequest(v) {
      return {
        method: Data_HTTP_Method.print(req.method),
        url: req.url,
        headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
          return {
            field: Affjax_RequestHeader.name(h),
            value: Affjax_RequestHeader.value(h)
          };
        })(headers(req.content)),
        content: v,
        responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
        username: Data_Nullable.toNullable(req.username),
        password: Data_Nullable.toNullable(req.password),
        withCredentials: req.withCredentials
      };
    };

    var send = function send(content) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
        if (v instanceof Data_Either.Right) {
          var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));

          if (v1 instanceof Data_Either.Left) {
            return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
          }

          ;

          if (v1 instanceof Data_Either.Right) {
            return new Data_Either.Right({
              body: v1.value0,
              headers: v.value0.headers,
              status: v.value0.status,
              statusText: v.value0.statusText
            });
          }

          ;
          throw new Error("Failed pattern match at Affjax (line 184, column 9 - line 186, column 52): " + [v1.constructor.name]);
        }

        ;

        if (v instanceof Data_Either.Left) {
          return new Data_Either.Left(new XHRError(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Affjax (line 182, column 86 - line 188, column 28): " + [v.constructor.name]);
      });
    };

    if (req.content instanceof Data_Maybe.Nothing) {
      return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
    }

    ;

    if (req.content instanceof Data_Maybe.Just) {
      var v = extractContent(req.content.value0);

      if (v instanceof Data_Either.Right) {
        return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
      }

      ;

      if (v instanceof Data_Either.Left) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
      }

      ;
      throw new Error("Failed pattern match at Affjax (line 173, column 7 - line 177, column 48): " + [v.constructor.name]);
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 169, column 3 - line 177, column 48): " + [req.content.constructor.name]);
  };

  var printError = function printError(v) {
    if (v instanceof RequestContentError) {
      return "There was a problem with the request content: " + v.value0;
    }

    ;

    if (v instanceof ResponseBodyError) {
      return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
    }

    ;

    if (v instanceof XHRError) {
      return "There was a problem making the request: " + Effect_Exception.message(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Affjax (line 91, column 14 - line 97, column 66): " + [v.constructor.name]);
  };

  var defaultRequest = {
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "/",
    headers: [],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: false,
    responseFormat: Affjax_ResponseFormat.ignore
  };
  exports["defaultRequest"] = defaultRequest;
  exports["printError"] = printError;
  exports["request"] = request;
})(PS);

(function (exports) {
  "use strict";

  var d3 = require("d3");

  var d3tip = require("d3-tip");

  var cellFillDefault = 'White',
      cellStroke = 'DarkGray',
      cellTextFill = 'Black',
      cellFontSize = '10pt',
      fontFamily = "Roboto, sans-serif",
      strokeWidth = 0.5,
      titleTextFill = 'Black',
      titleFontSize = '9pt';

  function drawMatrix(id, _ref) {
    var title = _ref.title,
        selColour = _ref.selColour,
        _ref$matrix = _ref.matrix,
        _ref$matrix$value = _ref$matrix.value0,
        nss = _ref$matrix$value.value0,
        i_max = _ref$matrix$value.value1,
        j_max = _ref$matrix.value1;
    var w = 30,
        h = 30;
    var div = d3.select('#' + id);
    var width = w * j_max + strokeWidth,
        height = h * i_max + strokeWidth;
    var hMargin = w / 2;
    var vMargin = h / 2;
    var svg = div.append('svg').attr('width', width + hMargin).attr('height', height + vMargin); // group for each row

    var grp = svg.selectAll('g').data(nss).enter().append('g').attr('transform', function (_, i) {
      return "translate(".concat(strokeWidth / 2 + hMargin / 2, ", ").concat(h * i + strokeWidth / 2 + vMargin, ")");
    });
    var rect = grp.selectAll('rect').data(function (d) {
      return d;
    }).enter();
    rect.append('rect').attr('x', function (_, j) {
      return w * j;
    }).attr('width', w).attr('height', h).attr('fill', function (d) {
      return d.value1 ? selColour : cellFillDefault;
    }).attr('stroke', cellStroke).attr('stroke-width', strokeWidth);
    rect.append('text').text(function (d) {
      return d.value0;
    }).attr('x', function (_, j) {
      return w * (j + 0.5);
    }).attr('y', 0.5 * h).attr('fill', cellTextFill).attr('font-family', fontFamily).attr('font-size', cellFontSize).attr('text-anchor', 'middle').attr('dominant-baseline', 'middle');
    svg.append('text').text(title).attr('x', hMargin / 2).attr('y', vMargin / 2).attr('fill', titleTextFill).attr('font-family', fontFamily).attr('font-size', titleFontSize).attr('dominant-baseline', 'middle').attr('text-anchor', 'left');
  }

  function drawBarChart(id, _ref2) {
    var caption = _ref2.caption,
        data_ = _ref2.data_;
    var margin = {
      top: 15,
      right: 0,
      bottom: 40,
      left: 30
    },
        width = 200 - margin.left - margin.right,
        height = 185 - margin.top - margin.bottom;
    var svg = d3.select('#' + id).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', "translate(".concat(margin.left, ", ").concat(margin.top, ")"));
    var tip = d3tip.default().attr('class', 'd3-tip').offset([0, 0]).html(function (ev, d) {
      return d.y.value0;
    });
    svg.call(tip); // x-axis

    var x = d3.scaleBand().range([0, width]).domain(data_.map(function (d) {
      return d.x.value0;
    })).padding(0.2);
    svg.append('g').attr('transform', "translate(0," + height + ")").call(d3.axisBottom(x)).selectAll('text').style('text-anchor', 'middle'); // y-axis

    var nearest = 100,
        y_max = Math.ceil(Math.max.apply(Math, _toConsumableArray(data_.map(function (d) {
      return d.y.value0;
    }))) / nearest) * nearest;
    var y = d3.scaleLinear().domain([0, y_max]).range([height, 0]);
    var tickEvery = nearest / 2,
        ticks = Array.from(Array(y_max / tickEvery + 1).keys()).map(function (n) {
      return n * tickEvery;
    });
    var yAxis = d3.axisLeft(y).tickValues(ticks);
    svg.append('g').call(yAxis); // bars

    var barFill = '#dcdcdc';
    svg.selectAll('rect').data(data_).enter().append('rect').attr('id', 'mouse-cursor').attr('x', function (d) {
      return x(d.x.value0);
    }).attr('y', function (d) {
      return y(d.y.value0 + 1);
    }) // ouch: bars overplot x-axis!
    .attr('width', x.bandwidth()).attr('height', function (d) {
      return height - y(d.y.value0);
    }).attr('fill', function (d) {
      return d.y.value1 ? colorShade(barFill, -40) : barFill;
    }).attr('stroke', function (d) {
      return d.y.value1 ? 'coral' : '';
    }).on('mouseover', tip.show).on('mouseout', tip.hide);
    svg.append('text').text(caption.value0).attr('x', width / 2).attr('y', height + 35).attr('fill', titleTextFill).attr('font-family', fontFamily).attr('font-size', titleFontSize).attr('dominant-baseline', 'bottom').attr('text-anchor', 'middle');
  }

  function max_y(linePlot) {
    return Math.max.apply(Math, _toConsumableArray(linePlot.data_.map(function (point) {
      return point.y.value0;
    })));
  }

  function min_x(linePlot) {
    return Math.min.apply(Math, _toConsumableArray(linePlot.data_.map(function (point) {
      return point.x.value0;
    })));
  }

  function max_x(linePlot) {
    return Math.max.apply(Math, _toConsumableArray(linePlot.data_.map(function (point) {
      return point.x.value0;
    })));
  }

  function drawLineChart(id, _ref3) {
    var caption = _ref3.caption,
        plots = _ref3.plots;
    var margin = {
      top: 15,
      right: 65,
      bottom: 40,
      left: 30
    },
        width = 230 - margin.left - margin.right,
        height = 185 - margin.top - margin.bottom,
        y_max = Math.max.apply(Math, _toConsumableArray(plots.map(max_y))),
        x_min = Math.min.apply(Math, _toConsumableArray(plots.map(min_x))),
        x_max = Math.max.apply(Math, _toConsumableArray(plots.map(max_x))),
        names = plots.map(function (plot) {
      return plot.name.value0;
    });
    var svg = d3.select('#' + id).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', "translate(".concat(margin.left, ", ").concat(margin.top, ")"));
    var x = d3.scaleLinear().domain([x_min, x_max]).range([0, width]),
        y = d3.scaleLinear().domain([0, y_max]).range([height, 0]);
    var line1 = d3.line().x(function (d) {
      return x(d.x.value0);
    }).y(function (d) {
      return y(d.y.value0);
    });
    var color = d3.scaleOrdinal(d3.schemePastel1);
    svg.selectAll('lines').data(plots).enter().append('g').append('path').attr('fill', 'none').attr('stroke', function (d) {
      return color(names.indexOf(d.name.value0));
    }).attr('stroke-width', 1).attr('class', 'line').attr('d', function (d) {
      return line1(d.data_);
    });
    var smallRadius = 2;

    var _iterator = _createForOfIteratorHelper(plots),
        _step;

    try {
      var _loop = function _loop() {
        var plot = _step.value;
        var col = color(names.indexOf(plot.name.value0));
        svg.selectAll('markers').data(plot.data_).enter().append('g').append('circle').attr('class', 'marker').attr('r', function (d) {
          return d.y.value1 ? smallRadius * 2 : smallRadius;
        }).attr('cx', function (d) {
          return x(d.x.value0);
        }).attr('cy', function (d) {
          return y(d.y.value0);
        }).attr('fill', col).attr('stroke', function (d) {
          return d.y.value1 ? colorShade(col, -30) : col;
        });
      };

      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    svg.append('g').attr('transform', "translate(0, ".concat(height, ")")).call(d3.axisBottom(x).ticks(x_max - x_min).tickFormat(d3.format('d')));
    svg.append('g').call(d3.axisLeft(y).tickSizeOuter(0).ticks(3).tickFormat(d3.format('.1f'))); // lots of hard-coded constants

    var legendLineHeight = 15,
        legendStart = width + margin.left / 2;
    svg.append('rect').attr('transform', "translate(".concat(legendStart, ", ").concat(legendLineHeight * (names.length - 1) + 2, ")")).attr('x', 0).attr('y', 0).attr('stroke', 'lightgray').attr('fill', 'none').attr('height', legendLineHeight * names.length).attr('width', margin.right - 16);
    var legend = svg.selectAll('legend').data(names).enter().append('g').attr('class', 'legend').attr('transform', function (d, i) {
      return "translate(".concat(legendStart, ", ").concat(height / 2 - margin.top + i * legendLineHeight, ")");
    });
    legend.append('text').text(function (d) {
      return d;
    }).attr('font-size', 11).attr('transform', 'translate(15, 9)'); // align text with boxes

    legend.append('circle').attr('fill', function (d) {
      return color(names.indexOf(d));
    }).attr('r', smallRadius).attr('cx', legendLineHeight / 2 - smallRadius / 2).attr('cy', legendLineHeight / 2 - smallRadius / 2);
    svg.append('text').text(caption.value0).attr('x', width / 2).attr('y', height + 35).attr('fill', titleTextFill).attr('font-family', fontFamily).attr('font-size', titleFontSize).attr('dominant-baseline', 'bottom').attr('text-anchor', 'middle');
  } // https://stackoverflow.com/questions/5560248


  function colorShade(col, amt) {
    col = col.replace(/^#/, '');
    if (col.length === 3) col = col[0] + col[0] + col[1] + col[1] + col[2] + col[2];

    var _col$match = col.match(/.{2}/g),
        _col$match2 = _slicedToArray(_col$match, 3),
        r = _col$match2[0],
        g = _col$match2[1],
        b = _col$match2[2];

    var _ref4 = [parseInt(r, 16) + amt, parseInt(g, 16) + amt, parseInt(b, 16) + amt];
    r = _ref4[0];
    g = _ref4[1];
    b = _ref4[2];
    r = Math.max(Math.min(255, r), 0).toString(16);
    g = Math.max(Math.min(255, g), 0).toString(16);
    b = Math.max(Math.min(255, b), 0).toString(16);
    var rr = (r.length < 2 ? '0' : '') + r;
    var gg = (g.length < 2 ? '0' : '') + g;
    var bb = (b.length < 2 ? '0' : '') + b;
    return "#".concat(rr).concat(gg).concat(bb);
  } // any record type with only primitive fields -> boolean


  function isUsed(r) {
    return Object.keys(r).some(function (k) {
      return r[k].value1;
    });
  } // Generic to all tables.


  function drawTable(id, _ref5) {
    var title = _ref5.title,
        table = _ref5.table;
    table = table.filter(function (r) {
      return isUsed(r);
    });
    var cellFill = '#ffffff';
    var HTMLtable = d3.select('#' + id).append('table');
    var colNames = Object.keys(table[0]);
    HTMLtable.append('thead').append('tr').selectAll('th').data(colNames).enter().append('th').text(function (d) {
      return d;
    });
    var rows = HTMLtable.append('tbody').selectAll('tr').data(table).enter().append('tr');
    rows.selectAll('td').data(function (d) {
      return colNames.map(function (k) {
        return {
          'value': d[k],
          'name': k
        };
      });
    }).enter().append('td').attr('data-th', function (d) {
      return d.name;
    }).attr('class', function (d) {
      return d.value.value1 ? 'cell-selected' : null;
    }).attr('bgcolor', function (d) {
      return d.value.value1 ? colorShade(cellFill, -40) : cellFill;
    }).text(function (d) {
      return d.value.value0;
    });
  }

  function className(o) {
    return o.constructor.name;
  } // Figs -> Effect Unit


  function drawFig(_ref6) {
    var divId = _ref6.divId,
        subfigs = _ref6.subfigs;
    return function () {
      var _iterator2 = _createForOfIteratorHelper(subfigs),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var fig = _step2.value;

          // Bit horrible but will do for now.
          if (className(fig) == "EnergyTable") {
            drawTable(divId, fig.value0);
          } else if (className(fig) == "BarChartFig") {
            drawBarChart(divId, fig.value0);
          } else if (className(fig) == "LineChartFig") {
            drawLineChart(divId, fig.value0);
          } else if (className(fig) == "MatrixFig") {
            drawMatrix(divId, fig.value0);
          } else {
            throw new Error("Figure type '".concat(className(fig), "' not recognised."));
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    };
  } // Currently unused.


  function saveImage(svg) {
    var svg_xml = new XMLSerializer().serializeToString(svg),
        blob = new Blob([svg_xml], {
      type: 'image/svg+xml;charset=utf-8'
    }),
        url = window.URL.createObjectURL(blob),
        _svg$getBBox = svg.getBBox(),
        width = _svg$getBBox.width,
        height = _svg$getBBox.height;

    var img = new Image();
    img.width = width;
    img.height = height;

    img.onload = function () {
      var canvas = document.createElement('canvas');
      canvas.width = width;
      canvas.height = height;
      var ctx = canvas.getContext('2d');
      ctx.drawImage(img, 0, 0, width, height);
      window.URL.revokeObjectURL(url);
      var dataURL = canvas.toDataURL('image/png');
      download(canvas, dataURL, "image.png");
    };

    img.src = url;
  }

  function download(parent, dataURL, name) {
    var a = document.createElement('a');
    a.download = name;
    a.style.opacity = '0';
    parent.append(a);
    a.href = dataURL;
    a.click();
    a.remove();
  }

  function curry2(f) {
    return function (x1) {
      return function (x2) {
        return f(x1, x2);
      };
    };
  }

  exports.drawFig = drawFig;
})(PS["App.Renderer"] = PS["App.Renderer"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];

  var Leaf = function () {
    function Leaf() {}

    ;
    Leaf.value = new Leaf();
    return Leaf;
  }();

  var Two = function () {
    function Two(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Two.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Two(value0, value1, value2, value3);
          };
        };
      };
    };

    return Two;
  }();

  var Three = function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
      this.value6 = value6;
    }

    ;

    Three.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return function (value6) {
                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                };
              };
            };
          };
        };
      };
    };

    return Three;
  }();

  var TwoLeft = function () {
    function TwoLeft(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    TwoLeft.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new TwoLeft(value0, value1, value2);
        };
      };
    };

    return TwoLeft;
  }();

  var TwoRight = function () {
    function TwoRight(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    TwoRight.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new TwoRight(value0, value1, value2);
        };
      };
    };

    return TwoRight;
  }();

  var ThreeLeft = function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeLeft.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeLeft;
  }();

  var ThreeMiddle = function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeMiddle.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeMiddle;
  }();

  var ThreeRight = function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeRight.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeRight(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeRight;
  }();

  var KickUp = function () {
    function KickUp(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    KickUp.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new KickUp(value0, value1, value2, value3);
          };
        };
      };
    };

    return KickUp;
  }();

  var values = function values(v) {
    if (v instanceof Leaf) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof Two) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [v.constructor.name]);
  };

  var size = function size(v) {
    if (v instanceof Leaf) {
      return 0;
    }

    ;

    if (v instanceof Two) {
      return (1 + size(v.value0) | 0) + size(v.value3) | 0;
    }

    ;

    if (v instanceof Three) {
      return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 662, column 1 - line 662, column 35): " + [v.constructor.name]);
  };

  var singleton = function singleton(k) {
    return function (v) {
      return new Two(Leaf.value, k, v, Leaf.value);
    };
  };

  var toUnfoldable = function toUnfoldable(dictUnfoldable) {
    return function (m) {
      var go = function go($copy_v) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            if (v.value0 instanceof Leaf) {
              $copy_v = v.value1;
              return;
            }

            ;

            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf) {
              $tco_done = true;
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
            }

            ;

            if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
              $tco_done = true;
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
            }

            ;

            if (v.value0 instanceof Two) {
              $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
              return;
            }

            ;

            if (v.value0 instanceof Three) {
              $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [v.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }

        ;
        return $tco_result;
      };

      return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
    };
  };

  var lookup = function lookup(dictOrd) {
    return function (k) {
      var comp = Data_Ord.compare(dictOrd);

      var go = function go($copy_v) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (v instanceof Two) {
            var v2 = comp(k)(v.value1);

            if (v2 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value2);
            }

            ;

            if (v2 instanceof Data_Ordering.LT) {
              $copy_v = v.value0;
              return;
            }

            ;
            $copy_v = v.value3;
            return;
          }

          ;

          if (v instanceof Three) {
            var v3 = comp(k)(v.value1);

            if (v3 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value2);
            }

            ;
            var v4 = comp(k)(v.value4);

            if (v4 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value5);
            }

            ;

            if (v3 instanceof Data_Ordering.LT) {
              $copy_v = v.value0;
              return;
            }

            ;

            if (v4 instanceof Data_Ordering.GT) {
              $copy_v = v.value6;
              return;
            }

            ;
            $copy_v = v.value3;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }

        ;
        return $tco_result;
      };

      return go;
    };
  };

  var keys = function keys(v) {
    if (v instanceof Leaf) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof Two) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [v.constructor.name]);
  };

  var functorMap = new Data_Functor.Functor(function (v) {
    return function (v1) {
      if (v1 instanceof Leaf) {
        return Leaf.value;
      }

      ;

      if (v1 instanceof Two) {
        return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
      }

      ;

      if (v1 instanceof Three) {
        return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [v.constructor.name, v1.constructor.name]);
    };
  });

  var fromZipper = function fromZipper($copy_dictOrd) {
    return function ($copy_v) {
      return function ($copy_tree) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictOrd, v, tree) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return tree;
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }

            ;

            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
              return;
            }

            ;

            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }

            ;

            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }

            ;

            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [v.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [v.constructor.name, tree.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
        }

        ;
        return $tco_result;
      };
    };
  };

  var insert = function insert(dictOrd) {
    return function (k) {
      return function (v) {
        var up = function up($copy_v1) {
          return function ($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v1, v2) {
              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }

              ;

              if (v1 instanceof Data_List_Types.Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }

                ;

                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }

                ;

                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }

                ;

                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }

                ;

                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }

            ;
            return $tco_result;
          };
        };

        var comp = Data_Ord.compare(dictOrd);

        var down = function down($copy_ctx) {
          return function ($copy_v1) {
            var $tco_var_ctx = $copy_ctx;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(ctx, v1) {
              if (v1 instanceof Leaf) {
                $tco_done = true;
                return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
              }

              ;

              if (v1 instanceof Two) {
                var v2 = comp(k)(v1.value1);

                if (v2 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                }

                ;

                if (v2 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                  $copy_v1 = v1.value0;
                  return;
                }

                ;
                $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                $copy_v1 = v1.value3;
                return;
              }

              ;

              if (v1 instanceof Three) {
                var v3 = comp(k)(v1.value1);

                if (v3 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                }

                ;
                var v4 = comp(k)(v1.value4);

                if (v4 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                }

                ;

                if (v3 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                  $copy_v1 = v1.value0;
                  return;
                }

                ;

                if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                  $copy_v1 = v1.value3;
                  return;
                }

                ;
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                $copy_v1 = v1.value6;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ctx.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };

        return down(Data_List_Types.Nil.value);
      };
    };
  };

  var pop = function pop(dictOrd) {
    return function (k) {
      var up = function up($copy_ctxs) {
        return function ($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctxs, tree) {
            if (ctxs instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return tree;
            }

            ;

            if (ctxs instanceof Data_List_Types.Cons) {
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                return;
              }

              ;

              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ctxs.value0.constructor.name, tree.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ctxs.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }

          ;
          return $tco_result;
        };
      };

      var removeMaxNode = function removeMaxNode($copy_ctx) {
        return function ($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, m) {
            if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
              $tco_done = true;
              return up(ctx)(Leaf.value);
            }

            ;

            if (m instanceof Two) {
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }

            ;

            if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
              $tco_done = true;
              return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }

            ;

            if (m instanceof Three) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [m.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }

          ;
          return $tco_result;
        };
      };

      var maxNode = function maxNode($copy_m) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }

          ;

          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }

          ;

          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_m);
        }

        ;
        return $tco_result;
      };

      var comp = Data_Ord.compare(dictOrd);

      var down = function down($copy_ctx) {
        return function ($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;

            if (m instanceof Two) {
              var v = comp(k)(m.value1);

              if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
              }

              ;

              if (v instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value0);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
              }

              ;

              if (v instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }

            ;

            if (m instanceof Three) {
              var leaves = function () {
                if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
                  return true;
                }

                ;
                return false;
              }();

              var v = comp(k)(m.value4);
              var v3 = comp(k)(m.value1);

              if (leaves && v3 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }

              ;

              if (leaves && v instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }

              ;

              if (v3 instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value0);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }

              ;

              if (v instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value3);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
              }

              ;

              if (v3 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }

              ;

              if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [m.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value);
    };
  };

  var empty = Leaf.value;

  var fromFoldable = function fromFoldable(dictOrd) {
    return function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(function (m) {
        return function (v) {
          return insert(dictOrd)(v.value0)(v.value1)(m);
        };
      })(empty);
    };
  };

  var $$delete = function $$delete(dictOrd) {
    return function (k) {
      return function (m) {
        return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
      };
    };
  };

  var alter = function alter(dictOrd) {
    return function (f) {
      return function (k) {
        return function (m) {
          var v = f(lookup(dictOrd)(k)(m));

          if (v instanceof Data_Maybe.Nothing) {
            return $$delete(dictOrd)(k)(m);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return insert(dictOrd)(k)(v.value0)(m);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [v.constructor.name]);
        };
      };
    };
  };

  var update = function update(dictOrd) {
    return function (f) {
      return function (k) {
        return function (m) {
          return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
      };
    };
  };

  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["update"] = update;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["size"] = size;
  exports["functorMap"] = functorMap;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Util"] = $PS["Util"] || {};
  var exports = $PS["Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];

  var $$with = function $$with(msg) {
    return Data_Bifunctor.bimap(Data_Either.bifunctorEither)(function (msg$prime) {
      return msg$prime + function () {
        var $26 = msg === "";

        if ($26) {
          return "";
        }

        ;
        return "\x0a" + msg;
      }();
    })(Control_Category.identity(Control_Category.categoryFn));
  };

  var whenever = function whenever(v) {
    if (!v) {
      return Data_Function["const"](Data_Maybe.Nothing.value);
    }

    ;

    if (v) {
      return Data_Maybe.Just.create;
    }

    ;
    throw new Error("Failed pattern match at Util (line 37, column 1 - line 37, column 47): " + [v.constructor.name]);
  };

  var report = Data_Either.Left.create;

  var replicate = function replicate(n) {
    return function (a) {
      if (n === 0) {
        return Data_List_Types.Nil.value;
      }

      ;
      return new Data_List_Types.Cons(a, replicate(n - 1 | 0)(a));
    };
  };

  var onlyIf = function onlyIf(v) {
    return function (dictMonadPlus) {
      if (v) {
        return Control_Applicative.pure(dictMonadPlus.MonadZero0().Alternative1().Applicative0());
      }

      ;

      if (!v) {
        return Data_Function["const"](Control_Plus.empty(dictMonadPlus.MonadZero0().Alternative1().Plus1()));
      }

      ;
      throw new Error("Failed pattern match at Util (line 48, column 1 - line 48, column 58): " + [v.constructor.name]);
    };
  };

  var mayEq = function mayEq(dictEq) {
    return function (x) {
      return function (x$prime) {
        return whenever(Data_Eq.eq(dictEq)(x)(x$prime))(x);
      };
    };
  };

  var mayFailEq = function mayFailEq(dictShow) {
    return function (dictEq) {
      return function (x) {
        return function (x$prime) {
          return Data_Either.note(Data_Show.show(dictShow)(x) + (" \u2260 " + Data_Show.show(dictShow)(x$prime)))(mayEq(dictEq)(x)(x$prime));
        };
      };
    };
  };

  var intersperse = function intersperse(x) {
    return function (xs) {
      return Data_Foldable.intercalate(Data_List_Types.foldableList)(Data_List_Types.monoidList)(Control_Applicative.pure(Data_List_Types.applicativeList)(x))(Data_Functor.map(Data_List_Types.functorList)(Control_Applicative.pure(Data_List_Types.applicativeList))(xs));
    };
  };

  var error = function error(msg) {
    return Effect_Unsafe.unsafePerformEffect(Effect_Exception["throw"](msg));
  };

  var fromJust = function fromJust(v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Just) {
        return v1.value0;
      }

      ;

      if (v1 instanceof Data_Maybe.Nothing) {
        return error(v);
      }

      ;
      throw new Error("Failed pattern match at Util (line 41, column 1 - line 41, column 46): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mustEq = function mustEq(dictEq) {
    return function (dictShow) {
      return function (x) {
        return function (x$prime) {
          return fromJust(Data_Show.show(dictShow)(x) + (" must be equal to " + Data_Show.show(dictShow)(x$prime)))(mayEq(dictEq)(x)(x$prime));
        };
      };
    };
  };

  var mustGeq = function mustGeq(dictOrd) {
    return function (dictShow) {
      return function (x) {
        return function (x$prime) {
          return fromJust(Data_Show.show(dictShow)(x) + (" must be greater than " + Data_Show.show(dictShow)(x$prime)))(whenever(Data_Ord.greaterThanOrEq(dictOrd)(x)(x$prime))(x));
        };
      };
    };
  };

  var unsafeIndex = function unsafeIndex(xs) {
    return function (i) {
      return fromJust("Array index out of bounds")(Data_Array.index(xs)(i));
    };
  };

  var unsafeUpdateAt = function unsafeUpdateAt(i) {
    return function (x) {
      var $52 = fromJust("Array index out of bounds");
      var $53 = Data_Array.updateAt(i)(x);
      return function ($54) {
        return $52($53($54));
      };
    };
  };

  var successful = function successful(v) {
    if (v instanceof Data_Either.Left) {
      return error(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Util (line 65, column 1 - line 65, column 40): " + [v.constructor.name]);
  };

  var successfulWith = function successfulWith(msg) {
    var $55 = $$with(msg);
    return function ($56) {
      return successful($55($56));
    };
  };

  var check = function check(v) {
    return function (v1) {
      if (v) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
      }

      ;

      if (!v) {
        return report(v1);
      }

      ;
      throw new Error("Failed pattern match at Util (line 76, column 1 - line 76, column 43): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var bind2Flipped = function bind2Flipped(dictMonad) {
    return function (f) {
      return function (x) {
        return function (y) {
          return Control_Bind.join(dictMonad.Bind1())(Control_Apply.lift2(dictMonad.Bind1().Apply0())(f)(x)(y));
        };
      };
    };
  };

  var assert = function assert(v) {
    if (v) {
      return Control_Category.identity(Control_Category.categoryFn);
    }

    ;

    if (!v) {
      return function (v1) {
        return error("Assertion failure");
      };
    }

    ;
    throw new Error("Failed pattern match at Util (line 27, column 1 - line 27, column 34): " + [v.constructor.name]);
  };

  var absurd = "absurd";

  var mustLookup = function mustLookup(dictOrd) {
    return function (k) {
      var $57 = fromJust(absurd);
      var $58 = Data_Map_Internal.lookup(dictOrd)(k);
      return function ($59) {
        return $57($58($59));
      };
    };
  };

  var nonEmpty = function nonEmpty(v) {
    if (v instanceof Data_List_Types.Nil) {
      return error(absurd);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_NonEmpty.NonEmpty(v.value0, v.value1);
    }

    ;
    throw new Error("Failed pattern match at Util (line 123, column 1 - line 123, column 48): " + [v.constructor.name]);
  };

  exports["error"] = error;
  exports["assert"] = assert;
  exports["absurd"] = absurd;
  exports["whenever"] = whenever;
  exports["fromJust"] = fromJust;
  exports["mustLookup"] = mustLookup;
  exports["onlyIf"] = onlyIf;
  exports["report"] = report;
  exports["successful"] = successful;
  exports["successfulWith"] = successfulWith;
  exports["with"] = $$with;
  exports["check"] = check;
  exports["mustEq"] = mustEq;
  exports["mustGeq"] = mustGeq;
  exports["mayFailEq"] = mayFailEq;
  exports["intersperse"] = intersperse;
  exports["bind2Flipped"] = bind2Flipped;
  exports["unsafeIndex"] = unsafeIndex;
  exports["unsafeUpdateAt"] = unsafeUpdateAt;
  exports["nonEmpty"] = nonEmpty;
  exports["replicate"] = replicate;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];

  var Profunctor = function Profunctor(dimap) {
    this.dimap = dimap;
  };

  var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
      return function (b2c) {
        return function ($9) {
          return c2d(b2c(a2b($9)));
        };
      };
    };
  });

  var dimap = function dimap(dict) {
    return dict.dimap;
  };

  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Strong = function Strong(Profunctor0, first, second) {
    this.Profunctor0 = Profunctor0;
    this.first = first;
    this.second = second;
  };

  var strongFn = new Strong(function () {
    return Data_Profunctor.profunctorFn;
  }, function (a2b) {
    return function (v) {
      return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
  }, Data_Functor.map(Data_Tuple.functorTuple));

  var second = function second(dict) {
    return dict.second;
  };

  var first = function first(dict) {
    return dict.first;
  };

  var splitStrong = function splitStrong(dictCategory) {
    return function (dictStrong) {
      return function (l) {
        return function (r) {
          return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
        };
      };
    };
  };

  var fanout = function fanout(dictCategory) {
    return function (dictStrong) {
      return function (l) {
        return function (r) {
          var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.identity(Control_Category.categoryFn))(function (a) {
            return new Data_Tuple.Tuple(a, a);
          })(Control_Category.identity(dictCategory));
          return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
        };
      };
    };
  };

  exports["first"] = first;
  exports["second"] = second;
  exports["splitStrong"] = splitStrong;
  exports["fanout"] = fanout;
  exports["strongFn"] = strongFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Util.SnocList"] = $PS["Util.SnocList"] || {};
  var exports = $PS["Util.SnocList"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Lin = function () {
    function Lin() {}

    ;
    Lin.value = new Lin();
    return Lin;
  }();

  var Snoc = function () {
    function Snoc(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Snoc.create = function (value0) {
      return function (value1) {
        return new Snoc(value0, value1);
      };
    };

    return Snoc;
  }();

  var toList = function toList(v) {
    if (v instanceof Lin) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof Snoc) {
      return new Data_List_Types.Cons(v.value1, toList(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Util.SnocList (line 26, column 1 - line 26, column 27): " + [v.constructor.name]);
  };

  var snocListFunctor = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Lin) {
        return Lin.value;
      }

      ;

      if (m instanceof Snoc) {
        return new Snoc(Data_Functor.map(snocListFunctor)(f)(m.value0), f(m.value1));
      }

      ;
      throw new Error("Failed pattern match at Util.SnocList (line 18, column 1 - line 18, column 52): " + [m.constructor.name]);
    };
  });

  var showSnocList = function showSnocList(dictShow) {
    return new Data_Show.Show(function () {
      var $21 = Data_Show.show(Data_List_Types.showList(dictShow));
      return function ($22) {
        return $21(toList($22));
      };
    }());
  };

  var fromList = function fromList(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Lin.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Snoc(fromList(v.value1), v.value0);
    }

    ;
    throw new Error("Failed pattern match at Util.SnocList (line 30, column 1 - line 30, column 29): " + [v.constructor.name]);
  };

  var reverse = function reverse($23) {
    return fromList(Data_List.reverse(toList($23)));
  };

  var semigroupSnocList = new Data_Semigroup.Semigroup(Data_Tuple.curry(function () {
    var $24 = Data_Tuple.uncurry(Data_Function.flip(Data_Semigroup.append(Data_List_Types.semigroupList)));
    var $25 = Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(toList)(toList);
    return function ($26) {
      return fromList($24($25($26)));
    };
  }()));

  var splitAt = function splitAt(n) {
    return function (xs) {
      return new Data_Tuple.Tuple(fromList(Data_List.drop(n)(toList(xs))), fromList(Data_List.take(n)(toList(xs))));
    };
  };

  var unzip = function () {
    var $27 = Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(fromList)(fromList);
    return function ($28) {
      return $27(Data_List.unzip(toList($28)));
    };
  }();

  var zip = Data_Tuple.curry(function () {
    var $29 = Data_Tuple.uncurry(Data_List.zip);
    var $30 = Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(toList)(toList);
    return function ($31) {
      return fromList($29($30($31)));
    };
  }());

  var zipWith = function zipWith(f) {
    return Data_Tuple.curry(function () {
      var $32 = Data_Tuple.uncurry(Data_List.zipWith(f));
      var $33 = Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(toList)(toList);
      return function ($34) {
        return fromList($32($33($34)));
      };
    }());
  };

  var foldableSnocList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      var $35 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
      return function ($36) {
        return $35(toList($36));
      };
    };
  }, function (f) {
    return function (b) {
      var $37 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(b);
      return function ($38) {
        return $37(toList($38));
      };
    };
  }, function (f) {
    return function (b) {
      var $39 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(b);
      return function ($40) {
        return $39(toList($40));
      };
    };
  });
  var traversableSnocList = new Data_Traversable.Traversable(function () {
    return foldableSnocList;
  }, function () {
    return snocListFunctor;
  }, function (dictApplicative) {
    return Data_Traversable.traverse(traversableSnocList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
    return function (f) {
      return function (xs) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(fromList)(Data_Traversable.traverse(Data_List_Types.traversableList)(dictApplicative)(f)(toList(xs)));
      };
    };
  });

  var eqSnocList = function eqSnocList(dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_List_Types.eqList(dictEq)))(toList));
  };

  var ordSnocList = function ordSnocList(dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqSnocList(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_List_Types.ordList(dictOrd)))(toList));
  };

  exports["Lin"] = Lin;
  exports["Snoc"] = Snoc;
  exports["toList"] = toList;
  exports["fromList"] = fromList;
  exports["reverse"] = reverse;
  exports["zipWith"] = zipWith;
  exports["unzip"] = unzip;
  exports["zip"] = zip;
  exports["splitAt"] = splitAt;
  exports["snocListFunctor"] = snocListFunctor;
  exports["showSnocList"] = showSnocList;
  exports["eqSnocList"] = eqSnocList;
  exports["ordSnocList"] = ordSnocList;
  exports["foldableSnocList"] = foldableSnocList;
  exports["traversableSnocList"] = traversableSnocList;
  exports["semigroupSnocList"] = semigroupSnocList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Lattice"] = $PS["Lattice"] || {};
  var exports = $PS["Lattice"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];

  var Key = function Key(Ord0, checkConsistent) {
    this.Ord0 = Ord0;
    this.checkConsistent = checkConsistent;
  };

  var JoinSemilattice = function JoinSemilattice(join, neg) {
    this.join = join;
    this.neg = neg;
  };

  var Slices = function Slices(JoinSemilattice0, maybeJoin) {
    this.JoinSemilattice0 = JoinSemilattice0;
    this.maybeJoin = maybeJoin;
  };

  var Expandable = function Expandable(expand) {
    this.expand = expand;
  };

  var BoundedSlices = function BoundedSlices(Slices0, botOf) {
    this.Slices0 = Slices0;
    this.botOf = botOf;
  };

  var BoundedJoinSemilattice = function BoundedJoinSemilattice(JoinSemilattice0, bot) {
    this.JoinSemilattice0 = JoinSemilattice0;
    this.bot = bot;
  };

  var neg = function neg(dict) {
    return dict.neg;
  };

  var meet = Data_HeytingAlgebra.conj(Data_HeytingAlgebra.heytingAlgebraBoolean);

  var maybeJoin = function maybeJoin(dict) {
    return dict.maybeJoin;
  };

  var joinSemilatticeBoolean = new JoinSemilattice(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean), Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean));

  var join = function join(dict) {
    return dict.join;
  };

  var expand = function expand(dict) {
    return dict.expand;
  };

  var expandableArray = function expandableArray(dictExpandable) {
    return new Expandable(function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(ys)) {
          return Data_Array.zipWith(expand(dictExpandable))(xs)(ys);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.error("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 127, column 1 - line 130, column 71): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var expandableList = function expandableList(dictExpandable) {
    return new Expandable(function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(ys)) {
          return Data_List.zipWith(expand(dictExpandable))(xs)(ys);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.error("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 132, column 1 - line 135, column 71): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var expandableMap = function expandableMap(dictOrd) {
    return function (dictExpandable) {
      return new Expandable(function (m) {
        return function (m$prime) {
          if (Data_Eq.eq(Data_List_Types.eqList(dictOrd.Eq0()))(Data_Map_Internal.keys(m))(Data_Map_Internal.keys(m$prime))) {
            var expandValue = function expandValue(v) {
              return function (v1) {
                return new Data_Tuple.Tuple(v.value0, expand(dictExpandable)(v.value1)(v1.value1));
              };
            };

            return Data_Map_Internal.fromFoldable(dictOrd)(Data_List_Types.foldableList)(Data_List.zipWith(expandValue)(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(m))(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(m$prime)));
          }

          ;

          if (Data_Boolean.otherwise) {
            return Util.error("Mismatched keys");
          }

          ;
          throw new Error("Failed pattern match at Lattice (line 142, column 1 - line 147, column 53): " + [m.constructor.name, m$prime.constructor.name]);
        };
      });
    };
  };

  var expandableSnocList = function expandableSnocList(dictExpandable) {
    return new Expandable(function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(ys)) {
          return Util_SnocList.zipWith(expand(dictExpandable))(xs)(ys);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.error("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 137, column 1 - line 140, column 71): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var definedJoin = function definedJoin(dictSlices) {
    return function (x) {
      var $65 = Util.successfulWith("Join undefined");
      var $66 = maybeJoin(dictSlices)(x);
      return function ($67) {
        return $65($66($67));
      };
    };
  };

  var slicesArray = function slicesArray(dictSlices) {
    return new Slices(function () {
      return joinSemilatticeArray(dictSlices);
    }, function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(ys)) {
          return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(maybeJoin(dictSlices))(xs)(ys));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.report("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 117, column 1 - line 120, column 72): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var joinSemilatticeArray = function joinSemilatticeArray(dictSlices) {
    return new JoinSemilattice(definedJoin(slicesArray(dictSlices)), Data_Functor.map(Data_Functor.functorArray)(neg(dictSlices.JoinSemilattice0())));
  };

  var slicesList = function slicesList(dictSlices) {
    return new Slices(function () {
      return joinSemilatticeList(dictSlices);
    }, function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(ys)) {
          return Data_Traversable.sequence(Data_List_Types.traversableList)(Data_Either.applicativeEither)(Data_List.zipWith(maybeJoin(dictSlices))(xs)(ys));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.report("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 74, column 1 - line 77, column 72): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var joinSemilatticeList = function joinSemilatticeList(dictSlices) {
    return new JoinSemilattice(definedJoin(slicesList(dictSlices)), Data_Functor.map(Data_List_Types.functorList)(neg(dictSlices.JoinSemilattice0())));
  };

  var slicesSnocList = function slicesSnocList(dictSlices) {
    return new Slices(function () {
      return joinSemilatticeSnocList(dictSlices);
    }, function (xs) {
      return function (ys) {
        if (Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(xs) === Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(ys)) {
          return Data_Traversable.sequence(Util_SnocList.traversableSnocList)(Data_Either.applicativeEither)(Util_SnocList.zipWith(maybeJoin(dictSlices))(xs)(ys));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Util.report("Mismatched lengths");
        }

        ;
        throw new Error("Failed pattern match at Lattice (line 79, column 1 - line 82, column 72): " + [xs.constructor.name, ys.constructor.name]);
      };
    });
  };

  var joinSemilatticeSnocList = function joinSemilatticeSnocList(dictSlices) {
    return new JoinSemilattice(definedJoin(slicesSnocList(dictSlices)), Data_Functor.map(Util_SnocList.snocListFunctor)(neg(dictSlices.JoinSemilattice0())));
  };

  var checkConsistent = function checkConsistent(dict) {
    return dict.checkConsistent;
  };

  var mayFailUpdate = function mayFailUpdate(dictKey) {
    return function (dictSlices) {
      return function (m) {
        return function (v) {
          var v2 = Data_Map_Internal.lookup(dictKey.Ord0())(v.value0)(m);

          if (v2 instanceof Data_Maybe.Nothing) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(checkConsistent(dictKey)("Inconsistent keys: ")(v.value0)(Data_Map_Internal.keys(m)))(function () {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map_Internal.insert(dictKey.Ord0())(v.value0)(v.value1)(m));
            });
          }

          ;

          if (v2 instanceof Data_Maybe.Just) {
            return Data_Functor.flap(Data_Either.functorEither)(Data_Functor.flap(Data_Either.functorEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.update(dictKey.Ord0()))(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Data_Function["const"])(Data_Maybe.Just.create))(maybeJoin(dictSlices)(v2.value0)(v.value1))))(v.value0))(m);
          }

          ;
          throw new Error("Failed pattern match at Lattice (line 106, column 4 - line 111, column 68): " + [v2.constructor.name]);
        };
      };
    };
  };

  var slicesMap = function slicesMap(dictKey) {
    return function (dictSlices) {
      return new Slices(function () {
        return joinSemilatticeMap(dictKey)(dictSlices);
      }, function (m) {
        return function (m$prime) {
          return Data_Foldable.foldM(Data_List_Types.foldableList)(Data_Either.monadEither)(mayFailUpdate(dictKey)(dictSlices))(m)(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(m$prime));
        };
      });
    };
  };

  var joinSemilatticeMap = function joinSemilatticeMap(dictKey) {
    return function (dictSlices) {
      return new JoinSemilattice(definedJoin(slicesMap(dictKey)(dictSlices)), Data_Functor.map(Data_Map_Internal.functorMap)(neg(dictSlices.JoinSemilattice0())));
    };
  };

  var boundedJoinSemilatticeBoolean = new BoundedJoinSemilattice(function () {
    return joinSemilatticeBoolean;
  }, false);

  var botOf = function botOf(dict) {
    return dict.botOf;
  };

  var boundedSlicesSnocList = function boundedSlicesSnocList(dictBoundedSlices) {
    return new BoundedSlices(function () {
      return slicesSnocList(dictBoundedSlices.Slices0());
    }, Data_Functor.map(Util_SnocList.snocListFunctor)(botOf(dictBoundedSlices)));
  };

  var bot = function bot(dict) {
    return dict.bot;
  };

  exports["bot"] = bot;
  exports["botOf"] = botOf;
  exports["checkConsistent"] = checkConsistent;
  exports["expand"] = expand;
  exports["join"] = join;
  exports["maybeJoin"] = maybeJoin;
  exports["neg"] = neg;
  exports["JoinSemilattice"] = JoinSemilattice;
  exports["Slices"] = Slices;
  exports["definedJoin"] = definedJoin;
  exports["BoundedSlices"] = BoundedSlices;
  exports["meet"] = meet;
  exports["Key"] = Key;
  exports["Expandable"] = Expandable;
  exports["joinSemilatticeBoolean"] = joinSemilatticeBoolean;
  exports["boundedJoinSemilatticeBoolean"] = boundedJoinSemilatticeBoolean;
  exports["joinSemilatticeSnocList"] = joinSemilatticeSnocList;
  exports["slicesList"] = slicesList;
  exports["slicesSnocList"] = slicesSnocList;
  exports["boundedSlicesSnocList"] = boundedSlicesSnocList;
  exports["slicesMap"] = slicesMap;
  exports["slicesArray"] = slicesArray;
  exports["expandableArray"] = expandableArray;
  exports["expandableList"] = expandableList;
  exports["expandableSnocList"] = expandableSnocList;
  exports["expandableMap"] = expandableMap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Bindings"] = $PS["Bindings"] || {};
  var exports = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Lattice = $PS["Lattice"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];

  var Bind = function () {
    function Bind(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Bind.create = function (value0) {
      return function (value1) {
        return new Bind(value0, value1);
      };
    };

    return Bind;
  }();

  var varAnon = "_";

  var val = function val(v) {
    return v.value1;
  };

  var update = function update(v) {
    return function (v1) {
      if (v instanceof Util_SnocList.Lin) {
        return Util_SnocList.Lin.value;
      }

      ;

      if (v instanceof Util_SnocList.Snoc) {
        if (v.value1.value0 === v1.value0) {
          return new Util_SnocList.Snoc(v.value0, new Bind(v1.value0, v1.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Util_SnocList.Snoc(update(v.value0)(new Bind(v1.value0, v1.value1)), new Bind(v.value1.value0, v.value1.value1));
        }

        ;
      }

      ;
      throw new Error("Failed pattern match at Bindings (line 69, column 1 - line 69, column 56): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mustGeq = function mustGeq(x) {
    return function (y) {
      return Util.fromJust("Must be greater")(Util.whenever(x === y)(x));
    };
  };

  var key = function key(v) {
    return v.value0;
  };

  var functorBind = new Data_Functor.Functor(function (f) {
    return function (m) {
      return new Bind(m.value0, f(m.value1));
    };
  });

  var slicesBind = function slicesBind(dictSlices) {
    return new Lattice.Slices(function () {
      return joinSemilatticeBind(dictSlices);
    }, function (v) {
      return function (v1) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Bind.create)(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value0)(v1.value0)))(Lattice.maybeJoin(dictSlices)(v.value1)(v1.value1));
      };
    });
  };

  var joinSemilatticeBind = function joinSemilatticeBind(dictSlices) {
    return new Lattice.JoinSemilattice(Lattice.definedJoin(slicesBind(dictSlices)), Data_Functor.map(functorBind)(Lattice.neg(dictSlices.JoinSemilattice0())));
  };

  var foldableBind = new Data_Foldable.Foldable(function (dictMonoid) {
    return Data_Foldable.foldMapDefaultL(foldableBind)(dictMonoid);
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(b)(v.value1);
      };
    };
  }, function (x) {
    return Data_Foldable.foldrDefault(foldableBind)(x);
  });
  var traversableBind = new Data_Traversable.Traversable(function () {
    return foldableBind;
  }, function () {
    return functorBind;
  }, function (dictApplicative) {
    return Data_Traversable.sequenceDefault(traversableBind)(dictApplicative);
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(function (v2) {
          return new Bind(v.value0, v2);
        })(f(v.value1));
      };
    };
  });

  var foldBindings = function foldBindings(v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Util_SnocList.Snoc) {
          return v(v1.value1)(foldBindings(v)(z)(v1.value0));
        }

        ;

        if (v1 instanceof Util_SnocList.Lin) {
          return z;
        }

        ;
        throw new Error("Failed pattern match at Bindings (line 65, column 1 - line 65, column 72): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  };

  var find = function find($copy_x) {
    return function ($copy_v) {
      var $tco_var_x = $copy_x;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(x, v) {
        if (v instanceof Util_SnocList.Lin) {
          $tco_done = true;
          return Util.report("variable " + (x + " not found"));
        }

        ;

        if (v instanceof Util_SnocList.Snoc) {
          if (x === v.value1.value0) {
            $tco_done = true;
            return Control_Applicative.pure(Data_Either.applicativeEither)(v.value1.value1);
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_x = x;
            $copy_v = v.value0;
            return;
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Bindings (line 58, column 1 - line 58, column 50): " + [x.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_x, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  var expandableBind = function expandableBind(dictExpandable) {
    return new Lattice.Expandable(function (v) {
      return function (v1) {
        return new Bind(Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value0)(v1.value0), Lattice.expand(dictExpandable)(v.value1)(v1.value1));
      };
    });
  };

  var boundedSlicesBind = function boundedSlicesBind(dictBoundedSlices) {
    return new Lattice.BoundedSlices(function () {
      return slicesBind(dictBoundedSlices.Slices0());
    }, Data_Functor.map(functorBind)(Lattice.botOf(dictBoundedSlices)));
  };

  exports["varAnon"] = varAnon;
  exports["mustGeq"] = mustGeq;
  exports["Bind"] = Bind;
  exports["key"] = key;
  exports["val"] = val;
  exports["find"] = find;
  exports["foldBindings"] = foldBindings;
  exports["update"] = update;
  exports["functorBind"] = functorBind;
  exports["traversableBind"] = traversableBind;
  exports["expandableBind"] = expandableBind;
  exports["slicesBind"] = slicesBind;
  exports["boundedSlicesBind"] = boundedSlicesBind;
})(PS);

(function (exports) {
  exports.withCharCode = function (f) {
    return function (c) {
      return String.fromCharCode(f(c.charCodeAt()));
    };
  };
})(PS["Data.Char.Unicode"] = PS["Data.Char.Unicode"] || {});

(function (exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});

(function (exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];

  var Bounded = function Bounded(Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
  };

  var top = function top(dict) {
    return dict.top;
  };

  var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);

  var bottom = function bottom(dict) {
    return dict.bottom;
  };

  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];

  var Enum = function Enum(Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
  };

  var BoundedEnum = function BoundedEnum(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
  };

  var toEnum = function toEnum(dict) {
    return dict.toEnum;
  };

  var fromEnum = function fromEnum(dict) {
    return dict.fromEnum;
  };

  var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
    return function (low) {
      return function (high) {
        return function (x) {
          var v = toEnum(dictBoundedEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            return v.value0;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

            if ($54) {
              return low;
            }

            ;
            return high;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };

  var defaultSucc = function defaultSucc(toEnum$prime) {
    return function (fromEnum$prime) {
      return function (a) {
        return toEnum$prime(fromEnum$prime(a) + 1 | 0);
      };
    };
  };

  var defaultPred = function defaultPred(toEnum$prime) {
    return function (fromEnum$prime) {
      return function (a) {
        return toEnum$prime(fromEnum$prime(a) - 1 | 0);
      };
    };
  };

  var charToEnum = function charToEnum(v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
      return new Data_Maybe.Just($foreign.fromCharCode(v));
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
  }, function () {
    return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Char"] = $PS["Data.Char"] || {};
  var exports = $PS["Data.Char"];
  var Data_Enum = $PS["Data.Enum"];
  var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
  var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
  exports["toCharCode"] = toCharCode;
  exports["fromCharCode"] = fromCharCode;
})(PS);

(function (exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.quot = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x / y | 0;
    };
  };

  exports.rem = function (x) {
    return function (y) {
      return x % y;
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});

(function (exports) {
  "use strict";

  exports.ceil = Math.ceil;
  exports.floor = Math.floor;
  exports.log = Math.log;

  exports.pow = function (n) {
    return function (p) {
      return Math.pow(n, p);
    };
  };
})(PS["Math"] = PS["Math"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["ceil"] = $foreign.ceil;
  exports["floor"] = $foreign.floor;
  exports["log"] = $foreign.log;
  exports["pow"] = $foreign.pow;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var unsafeClamp = function unsafeClamp(x) {
    if (x === Global.infinity) {
      return 0;
    }

    ;

    if (x === -Global.infinity) {
      return 0;
    }

    ;

    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
      return Data_Bounded.top(Data_Bounded.boundedInt);
    }

    ;

    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
      return Data_Bounded.bottom(Data_Bounded.boundedInt);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Maybe.fromMaybe(0)(fromNumber(x));
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
  };

  var floor = function floor($24) {
    return unsafeClamp($$Math.floor($24));
  };

  var ceil = function ceil($25) {
    return unsafeClamp($$Math.ceil($25));
  };

  exports["ceil"] = ceil;
  exports["floor"] = floor;
  exports["toNumber"] = $foreign.toNumber;
  exports["quot"] = $foreign.quot;
  exports["rem"] = $foreign.rem;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Char.Unicode.Internal"] = $PS["Data.Char.Unicode.Internal"] || {};
  var exports = $PS["Data.Char.Unicode.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ordering = $PS["Data.Ordering"];

  var NUMCAT_LU = function () {
    function NUMCAT_LU() {}

    ;
    NUMCAT_LU.value = new NUMCAT_LU();
    return NUMCAT_LU;
  }();

  var NUMCAT_LL = function () {
    function NUMCAT_LL() {}

    ;
    NUMCAT_LL.value = new NUMCAT_LL();
    return NUMCAT_LL;
  }();

  var NUMCAT_LT = function () {
    function NUMCAT_LT() {}

    ;
    NUMCAT_LT.value = new NUMCAT_LT();
    return NUMCAT_LT;
  }();

  var NUMCAT_LM = function () {
    function NUMCAT_LM() {}

    ;
    NUMCAT_LM.value = new NUMCAT_LM();
    return NUMCAT_LM;
  }();

  var NUMCAT_LO = function () {
    function NUMCAT_LO() {}

    ;
    NUMCAT_LO.value = new NUMCAT_LO();
    return NUMCAT_LO;
  }();

  var NUMCAT_MN = function () {
    function NUMCAT_MN() {}

    ;
    NUMCAT_MN.value = new NUMCAT_MN();
    return NUMCAT_MN;
  }();

  var NUMCAT_MC = function () {
    function NUMCAT_MC() {}

    ;
    NUMCAT_MC.value = new NUMCAT_MC();
    return NUMCAT_MC;
  }();

  var NUMCAT_ME = function () {
    function NUMCAT_ME() {}

    ;
    NUMCAT_ME.value = new NUMCAT_ME();
    return NUMCAT_ME;
  }();

  var NUMCAT_ND = function () {
    function NUMCAT_ND() {}

    ;
    NUMCAT_ND.value = new NUMCAT_ND();
    return NUMCAT_ND;
  }();

  var NUMCAT_NL = function () {
    function NUMCAT_NL() {}

    ;
    NUMCAT_NL.value = new NUMCAT_NL();
    return NUMCAT_NL;
  }();

  var NUMCAT_NO = function () {
    function NUMCAT_NO() {}

    ;
    NUMCAT_NO.value = new NUMCAT_NO();
    return NUMCAT_NO;
  }();

  var NUMCAT_PC = function () {
    function NUMCAT_PC() {}

    ;
    NUMCAT_PC.value = new NUMCAT_PC();
    return NUMCAT_PC;
  }();

  var NUMCAT_PD = function () {
    function NUMCAT_PD() {}

    ;
    NUMCAT_PD.value = new NUMCAT_PD();
    return NUMCAT_PD;
  }();

  var NUMCAT_PS = function () {
    function NUMCAT_PS() {}

    ;
    NUMCAT_PS.value = new NUMCAT_PS();
    return NUMCAT_PS;
  }();

  var NUMCAT_PE = function () {
    function NUMCAT_PE() {}

    ;
    NUMCAT_PE.value = new NUMCAT_PE();
    return NUMCAT_PE;
  }();

  var NUMCAT_PI = function () {
    function NUMCAT_PI() {}

    ;
    NUMCAT_PI.value = new NUMCAT_PI();
    return NUMCAT_PI;
  }();

  var NUMCAT_PF = function () {
    function NUMCAT_PF() {}

    ;
    NUMCAT_PF.value = new NUMCAT_PF();
    return NUMCAT_PF;
  }();

  var NUMCAT_PO = function () {
    function NUMCAT_PO() {}

    ;
    NUMCAT_PO.value = new NUMCAT_PO();
    return NUMCAT_PO;
  }();

  var NUMCAT_SM = function () {
    function NUMCAT_SM() {}

    ;
    NUMCAT_SM.value = new NUMCAT_SM();
    return NUMCAT_SM;
  }();

  var NUMCAT_SC = function () {
    function NUMCAT_SC() {}

    ;
    NUMCAT_SC.value = new NUMCAT_SC();
    return NUMCAT_SC;
  }();

  var NUMCAT_SK = function () {
    function NUMCAT_SK() {}

    ;
    NUMCAT_SK.value = new NUMCAT_SK();
    return NUMCAT_SK;
  }();

  var NUMCAT_SO = function () {
    function NUMCAT_SO() {}

    ;
    NUMCAT_SO.value = new NUMCAT_SO();
    return NUMCAT_SO;
  }();

  var NUMCAT_ZS = function () {
    function NUMCAT_ZS() {}

    ;
    NUMCAT_ZS.value = new NUMCAT_ZS();
    return NUMCAT_ZS;
  }();

  var NUMCAT_ZL = function () {
    function NUMCAT_ZL() {}

    ;
    NUMCAT_ZL.value = new NUMCAT_ZL();
    return NUMCAT_ZL;
  }();

  var NUMCAT_ZP = function () {
    function NUMCAT_ZP() {}

    ;
    NUMCAT_ZP.value = new NUMCAT_ZP();
    return NUMCAT_ZP;
  }();

  var NUMCAT_CC = function () {
    function NUMCAT_CC() {}

    ;
    NUMCAT_CC.value = new NUMCAT_CC();
    return NUMCAT_CC;
  }();

  var NUMCAT_CF = function () {
    function NUMCAT_CF() {}

    ;
    NUMCAT_CF.value = new NUMCAT_CF();
    return NUMCAT_CF;
  }();

  var NUMCAT_CS = function () {
    function NUMCAT_CS() {}

    ;
    NUMCAT_CS.value = new NUMCAT_CS();
    return NUMCAT_CS;
  }();

  var NUMCAT_CO = function () {
    function NUMCAT_CO() {}

    ;
    NUMCAT_CO.value = new NUMCAT_CO();
    return NUMCAT_CO;
  }();

  var NUMCAT_CN = function () {
    function NUMCAT_CN() {}

    ;
    NUMCAT_CN.value = new NUMCAT_CN();
    return NUMCAT_CN;
  }();

  var numSpaceBlocks = 8;
  var numLat1Blocks = 63;
  var numConvBlocks = 1230;
  var numBlocks = 2783;
  var gencatZS = 2;
  var rule1 = {
    category: gencatZS,
    unicodeCat: NUMCAT_ZS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var spacechars = [{
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 6158,
    length: 1,
    convRule: rule1
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }];
  var gencatZP = 67108864;
  var rule140 = {
    category: gencatZP,
    unicodeCat: NUMCAT_ZP.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatZL = 33554432;
  var rule139 = {
    category: gencatZL,
    unicodeCat: NUMCAT_ZL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatSO = 8192;
  var rule13 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var rule148 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 1,
    updist: 0,
    lowdist: 26,
    titledist: 0
  };
  var rule149 = {
    category: gencatSO,
    unicodeCat: NUMCAT_SO.value,
    possible: 1,
    updist: -26 | 0,
    lowdist: 0,
    titledist: -26 | 0
  };
  var gencatSM = 64;
  var rule6 = {
    category: gencatSM,
    unicodeCat: NUMCAT_SM.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatSK = 1024;
  var rule10 = {
    category: gencatSK,
    unicodeCat: NUMCAT_SK.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatSC = 8;
  var rule3 = {
    category: gencatSC,
    unicodeCat: NUMCAT_SC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPS = 16;
  var rule4 = {
    category: gencatPS,
    unicodeCat: NUMCAT_PS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPO = 4;
  var rule2 = {
    category: gencatPO,
    unicodeCat: NUMCAT_PO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPI = 16384;
  var rule15 = {
    category: gencatPI,
    unicodeCat: NUMCAT_PI.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPF = 131072;
  var rule19 = {
    category: gencatPF,
    unicodeCat: NUMCAT_PF.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPE = 32;
  var rule5 = {
    category: gencatPE,
    unicodeCat: NUMCAT_PE.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPD = 128;
  var rule7 = {
    category: gencatPD,
    unicodeCat: NUMCAT_PD.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatPC = 2048;
  var rule11 = {
    category: gencatPC,
    unicodeCat: NUMCAT_PC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatNO = 65536;
  var rule17 = {
    category: gencatNO,
    unicodeCat: NUMCAT_NO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatNL = 16777216;
  var rule116 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var rule146 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 1,
    updist: 0,
    lowdist: 16,
    titledist: 0
  };
  var rule147 = {
    category: gencatNL,
    unicodeCat: NUMCAT_NL.value,
    possible: 1,
    updist: -16 | 0,
    lowdist: 0,
    titledist: -16 | 0
  };
  var gencatND = 256;
  var rule8 = {
    category: gencatND,
    unicodeCat: NUMCAT_ND.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatMN = 2097152;
  var rule84 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var rule85 = {
    category: gencatMN,
    unicodeCat: NUMCAT_MN.value,
    possible: 1,
    updist: 84,
    lowdist: 0,
    titledist: 84
  };
  var gencatME = 4194304;
  var rule109 = {
    category: gencatME,
    unicodeCat: NUMCAT_ME.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatMC = 8388608;
  var rule114 = {
    category: gencatMC,
    unicodeCat: NUMCAT_MC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatLU = 512;
  var nullrule = {
    category: gencatLU,
    unicodeCat: NUMCAT_CN.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var rule105 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -60 | 0,
    titledist: 0
  };
  var rule107 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7 | 0,
    titledist: 0
  };
  var rule108 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 80,
    titledist: 0
  };
  var rule110 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 15,
    titledist: 0
  };
  var rule112 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 48,
    titledist: 0
  };
  var rule115 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 7264,
    titledist: 0
  };
  var rule120 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7615 | 0,
    titledist: 0
  };
  var rule122 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
  };
  var rule131 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -74 | 0,
    titledist: 0
  };
  var rule134 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -86 | 0,
    titledist: 0
  };
  var rule135 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -100 | 0,
    titledist: 0
  };
  var rule136 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -112 | 0,
    titledist: 0
  };
  var rule137 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -128 | 0,
    titledist: 0
  };
  var rule138 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -126 | 0,
    titledist: 0
  };
  var rule141 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -7517 | 0,
    titledist: 0
  };
  var rule142 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8383 | 0,
    titledist: 0
  };
  var rule143 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -8262 | 0,
    titledist: 0
  };
  var rule144 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 28,
    titledist: 0
  };
  var rule150 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10743 | 0,
    titledist: 0
  };
  var rule151 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -3814 | 0,
    titledist: 0
  };
  var rule152 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10727 | 0,
    titledist: 0
  };
  var rule155 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10780 | 0,
    titledist: 0
  };
  var rule156 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10749 | 0,
    titledist: 0
  };
  var rule157 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10783 | 0,
    titledist: 0
  };
  var rule158 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10782 | 0,
    titledist: 0
  };
  var rule159 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -10815 | 0,
    titledist: 0
  };
  var rule161 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -35332 | 0,
    titledist: 0
  };
  var rule162 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -42280 | 0,
    titledist: 0
  };
  var rule165 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 40,
    titledist: 0
  };
  var rule21 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 1,
    titledist: 0
  };
  var rule23 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -199 | 0,
    titledist: 0
  };
  var rule25 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -121 | 0,
    titledist: 0
  };
  var rule28 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 210,
    titledist: 0
  };
  var rule29 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 206,
    titledist: 0
  };
  var rule30 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 205,
    titledist: 0
  };
  var rule31 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 79,
    titledist: 0
  };
  var rule32 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 202,
    titledist: 0
  };
  var rule33 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 203,
    titledist: 0
  };
  var rule34 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 207,
    titledist: 0
  };
  var rule36 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 211,
    titledist: 0
  };
  var rule37 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 209,
    titledist: 0
  };
  var rule39 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 213,
    titledist: 0
  };
  var rule41 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 214,
    titledist: 0
  };
  var rule42 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 218,
    titledist: 0
  };
  var rule43 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 217,
    titledist: 0
  };
  var rule44 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 219,
    titledist: 0
  };
  var rule47 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 2,
    titledist: 1
  };
  var rule51 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -97 | 0,
    titledist: 0
  };
  var rule52 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -56 | 0,
    titledist: 0
  };
  var rule53 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -130 | 0,
    titledist: 0
  };
  var rule54 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 10795,
    titledist: 0
  };
  var rule55 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -163 | 0,
    titledist: 0
  };
  var rule56 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 10792,
    titledist: 0
  };
  var rule58 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: -195 | 0,
    titledist: 0
  };
  var rule59 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 69,
    titledist: 0
  };
  var rule60 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 71,
    titledist: 0
  };
  var rule86 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 38,
    titledist: 0
  };
  var rule87 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 37,
    titledist: 0
  };
  var rule88 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 64,
    titledist: 0
  };
  var rule89 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 63,
    titledist: 0
  };
  var rule9 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 32,
    titledist: 0
  };
  var rule95 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 1,
    updist: 0,
    lowdist: 8,
    titledist: 0
  };
  var rule98 = {
    category: gencatLU,
    unicodeCat: NUMCAT_LU.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatLT = 524288;
  var rule129 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: 0,
    lowdist: -8 | 0,
    titledist: 0
  };
  var rule132 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: 0,
    lowdist: -9 | 0,
    titledist: 0
  };
  var rule48 = {
    category: gencatLT,
    unicodeCat: NUMCAT_LT.value,
    possible: 1,
    updist: -1 | 0,
    lowdist: 1,
    titledist: 0
  };
  var gencatLO = 262144;
  var rule45 = {
    category: gencatLO,
    unicodeCat: NUMCAT_LO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatLM = 1048576;
  var rule83 = {
    category: gencatLM,
    unicodeCat: NUMCAT_LM.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatLL = 4096;
  var rule100 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -54 | 0,
    lowdist: 0,
    titledist: -54 | 0
  };
  var rule101 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -8 | 0,
    lowdist: 0,
    titledist: -8 | 0
  };
  var rule102 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -86 | 0,
    lowdist: 0,
    titledist: -86 | 0
  };
  var rule103 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -80 | 0,
    lowdist: 0,
    titledist: -80 | 0
  };
  var rule104 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 7,
    lowdist: 0,
    titledist: 7
  };
  var rule106 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -96 | 0,
    lowdist: 0,
    titledist: -96 | 0
  };
  var rule111 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -15 | 0,
    lowdist: 0,
    titledist: -15 | 0
  };
  var rule113 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -48 | 0,
    lowdist: 0,
    titledist: -48 | 0
  };
  var rule117 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 35332,
    lowdist: 0,
    titledist: 35332
  };
  var rule118 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 3814,
    lowdist: 0,
    titledist: 3814
  };
  var rule119 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -59 | 0,
    lowdist: 0,
    titledist: -59 | 0
  };
  var rule12 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -32 | 0,
    lowdist: 0,
    titledist: -32 | 0
  };
  var rule121 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 8,
    lowdist: 0,
    titledist: 8
  };
  var rule123 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 74,
    lowdist: 0,
    titledist: 74
  };
  var rule124 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 86,
    lowdist: 0,
    titledist: 86
  };
  var rule125 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 100,
    lowdist: 0,
    titledist: 100
  };
  var rule126 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 128,
    lowdist: 0,
    titledist: 128
  };
  var rule127 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 112,
    lowdist: 0,
    titledist: 112
  };
  var rule128 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 126,
    lowdist: 0,
    titledist: 126
  };
  var rule130 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 9,
    lowdist: 0,
    titledist: 9
  };
  var rule133 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -7205 | 0,
    lowdist: 0,
    titledist: -7205 | 0
  };
  var rule14 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var rule145 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -28 | 0,
    lowdist: 0,
    titledist: -28 | 0
  };
  var rule153 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -10795 | 0,
    lowdist: 0,
    titledist: -10795 | 0
  };
  var rule154 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -10792 | 0,
    lowdist: 0,
    titledist: -10792 | 0
  };
  var rule160 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -7264 | 0,
    lowdist: 0,
    titledist: -7264 | 0
  };
  var rule166 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -40 | 0,
    lowdist: 0,
    titledist: -40 | 0
  };
  var rule18 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 743,
    lowdist: 0,
    titledist: 743
  };
  var rule20 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 121,
    lowdist: 0,
    titledist: 121
  };
  var rule22 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -1 | 0,
    lowdist: 0,
    titledist: -1 | 0
  };
  var rule24 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -232 | 0,
    lowdist: 0,
    titledist: -232 | 0
  };
  var rule26 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -300 | 0,
    lowdist: 0,
    titledist: -300 | 0
  };
  var rule27 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 195,
    lowdist: 0,
    titledist: 195
  };
  var rule35 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 97,
    lowdist: 0,
    titledist: 97
  };
  var rule38 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 163,
    lowdist: 0,
    titledist: 163
  };
  var rule40 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 130,
    lowdist: 0,
    titledist: 130
  };
  var rule46 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 56,
    lowdist: 0,
    titledist: 56
  };
  var rule49 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -2 | 0,
    lowdist: 0,
    titledist: -1 | 0
  };
  var rule50 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -79 | 0,
    lowdist: 0,
    titledist: -79 | 0
  };
  var rule57 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10815,
    lowdist: 0,
    titledist: 10815
  };
  var rule61 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10783,
    lowdist: 0,
    titledist: 10783
  };
  var rule62 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10780,
    lowdist: 0,
    titledist: 10780
  };
  var rule63 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10782,
    lowdist: 0,
    titledist: 10782
  };
  var rule64 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -210 | 0,
    lowdist: 0,
    titledist: -210 | 0
  };
  var rule65 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -206 | 0,
    lowdist: 0,
    titledist: -206 | 0
  };
  var rule66 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -205 | 0,
    lowdist: 0,
    titledist: -205 | 0
  };
  var rule67 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -202 | 0,
    lowdist: 0,
    titledist: -202 | 0
  };
  var rule68 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -203 | 0,
    lowdist: 0,
    titledist: -203 | 0
  };
  var rule69 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -207 | 0,
    lowdist: 0,
    titledist: -207 | 0
  };
  var rule70 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 42280,
    lowdist: 0,
    titledist: 42280
  };
  var rule71 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -209 | 0,
    lowdist: 0,
    titledist: -209 | 0
  };
  var rule72 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -211 | 0,
    lowdist: 0,
    titledist: -211 | 0
  };
  var rule73 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10743,
    lowdist: 0,
    titledist: 10743
  };
  var rule74 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10749,
    lowdist: 0,
    titledist: 10749
  };
  var rule75 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -213 | 0,
    lowdist: 0,
    titledist: -213 | 0
  };
  var rule76 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -214 | 0,
    lowdist: 0,
    titledist: -214 | 0
  };
  var rule77 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: 10727,
    lowdist: 0,
    titledist: 10727
  };
  var rule78 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -218 | 0,
    lowdist: 0,
    titledist: -218 | 0
  };
  var rule79 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -69 | 0,
    lowdist: 0,
    titledist: -69 | 0
  };
  var rule80 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -217 | 0,
    lowdist: 0,
    titledist: -217 | 0
  };
  var rule81 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -71 | 0,
    lowdist: 0,
    titledist: -71 | 0
  };
  var rule82 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -219 | 0,
    lowdist: 0,
    titledist: -219 | 0
  };
  var rule90 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -38 | 0,
    lowdist: 0,
    titledist: -38 | 0
  };
  var rule91 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -37 | 0,
    lowdist: 0,
    titledist: -37 | 0
  };
  var rule92 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -31 | 0,
    lowdist: 0,
    titledist: -31 | 0
  };
  var rule93 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -64 | 0,
    lowdist: 0,
    titledist: -64 | 0
  };
  var rule94 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -63 | 0,
    lowdist: 0,
    titledist: -63 | 0
  };
  var rule96 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -62 | 0,
    lowdist: 0,
    titledist: -62 | 0
  };
  var rule97 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -57 | 0,
    lowdist: 0,
    titledist: -57 | 0
  };
  var rule99 = {
    category: gencatLL,
    unicodeCat: NUMCAT_LL.value,
    possible: 1,
    updist: -47 | 0,
    lowdist: 0,
    titledist: -47 | 0
  };
  var gencatCS = 134217728;
  var rule163 = {
    category: gencatCS,
    unicodeCat: NUMCAT_CS.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatCO = 268435456;
  var rule164 = {
    category: gencatCO,
    unicodeCat: NUMCAT_CO.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatCF = 32768;
  var rule16 = {
    category: gencatCF,
    unicodeCat: NUMCAT_CF.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var gencatCC = 1;
  var rule0 = {
    category: gencatCC,
    unicodeCat: NUMCAT_CC.value,
    possible: 0,
    updist: 0,
    lowdist: 0,
    titledist: 0
  };
  var convchars = [{
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule20
  }, {
    start: 256,
    length: 1,
    convRule: rule21
  }, {
    start: 257,
    length: 1,
    convRule: rule22
  }, {
    start: 258,
    length: 1,
    convRule: rule21
  }, {
    start: 259,
    length: 1,
    convRule: rule22
  }, {
    start: 260,
    length: 1,
    convRule: rule21
  }, {
    start: 261,
    length: 1,
    convRule: rule22
  }, {
    start: 262,
    length: 1,
    convRule: rule21
  }, {
    start: 263,
    length: 1,
    convRule: rule22
  }, {
    start: 264,
    length: 1,
    convRule: rule21
  }, {
    start: 265,
    length: 1,
    convRule: rule22
  }, {
    start: 266,
    length: 1,
    convRule: rule21
  }, {
    start: 267,
    length: 1,
    convRule: rule22
  }, {
    start: 268,
    length: 1,
    convRule: rule21
  }, {
    start: 269,
    length: 1,
    convRule: rule22
  }, {
    start: 270,
    length: 1,
    convRule: rule21
  }, {
    start: 271,
    length: 1,
    convRule: rule22
  }, {
    start: 272,
    length: 1,
    convRule: rule21
  }, {
    start: 273,
    length: 1,
    convRule: rule22
  }, {
    start: 274,
    length: 1,
    convRule: rule21
  }, {
    start: 275,
    length: 1,
    convRule: rule22
  }, {
    start: 276,
    length: 1,
    convRule: rule21
  }, {
    start: 277,
    length: 1,
    convRule: rule22
  }, {
    start: 278,
    length: 1,
    convRule: rule21
  }, {
    start: 279,
    length: 1,
    convRule: rule22
  }, {
    start: 280,
    length: 1,
    convRule: rule21
  }, {
    start: 281,
    length: 1,
    convRule: rule22
  }, {
    start: 282,
    length: 1,
    convRule: rule21
  }, {
    start: 283,
    length: 1,
    convRule: rule22
  }, {
    start: 284,
    length: 1,
    convRule: rule21
  }, {
    start: 285,
    length: 1,
    convRule: rule22
  }, {
    start: 286,
    length: 1,
    convRule: rule21
  }, {
    start: 287,
    length: 1,
    convRule: rule22
  }, {
    start: 288,
    length: 1,
    convRule: rule21
  }, {
    start: 289,
    length: 1,
    convRule: rule22
  }, {
    start: 290,
    length: 1,
    convRule: rule21
  }, {
    start: 291,
    length: 1,
    convRule: rule22
  }, {
    start: 292,
    length: 1,
    convRule: rule21
  }, {
    start: 293,
    length: 1,
    convRule: rule22
  }, {
    start: 294,
    length: 1,
    convRule: rule21
  }, {
    start: 295,
    length: 1,
    convRule: rule22
  }, {
    start: 296,
    length: 1,
    convRule: rule21
  }, {
    start: 297,
    length: 1,
    convRule: rule22
  }, {
    start: 298,
    length: 1,
    convRule: rule21
  }, {
    start: 299,
    length: 1,
    convRule: rule22
  }, {
    start: 300,
    length: 1,
    convRule: rule21
  }, {
    start: 301,
    length: 1,
    convRule: rule22
  }, {
    start: 302,
    length: 1,
    convRule: rule21
  }, {
    start: 303,
    length: 1,
    convRule: rule22
  }, {
    start: 304,
    length: 1,
    convRule: rule23
  }, {
    start: 305,
    length: 1,
    convRule: rule24
  }, {
    start: 306,
    length: 1,
    convRule: rule21
  }, {
    start: 307,
    length: 1,
    convRule: rule22
  }, {
    start: 308,
    length: 1,
    convRule: rule21
  }, {
    start: 309,
    length: 1,
    convRule: rule22
  }, {
    start: 310,
    length: 1,
    convRule: rule21
  }, {
    start: 311,
    length: 1,
    convRule: rule22
  }, {
    start: 313,
    length: 1,
    convRule: rule21
  }, {
    start: 314,
    length: 1,
    convRule: rule22
  }, {
    start: 315,
    length: 1,
    convRule: rule21
  }, {
    start: 316,
    length: 1,
    convRule: rule22
  }, {
    start: 317,
    length: 1,
    convRule: rule21
  }, {
    start: 318,
    length: 1,
    convRule: rule22
  }, {
    start: 319,
    length: 1,
    convRule: rule21
  }, {
    start: 320,
    length: 1,
    convRule: rule22
  }, {
    start: 321,
    length: 1,
    convRule: rule21
  }, {
    start: 322,
    length: 1,
    convRule: rule22
  }, {
    start: 323,
    length: 1,
    convRule: rule21
  }, {
    start: 324,
    length: 1,
    convRule: rule22
  }, {
    start: 325,
    length: 1,
    convRule: rule21
  }, {
    start: 326,
    length: 1,
    convRule: rule22
  }, {
    start: 327,
    length: 1,
    convRule: rule21
  }, {
    start: 328,
    length: 1,
    convRule: rule22
  }, {
    start: 330,
    length: 1,
    convRule: rule21
  }, {
    start: 331,
    length: 1,
    convRule: rule22
  }, {
    start: 332,
    length: 1,
    convRule: rule21
  }, {
    start: 333,
    length: 1,
    convRule: rule22
  }, {
    start: 334,
    length: 1,
    convRule: rule21
  }, {
    start: 335,
    length: 1,
    convRule: rule22
  }, {
    start: 336,
    length: 1,
    convRule: rule21
  }, {
    start: 337,
    length: 1,
    convRule: rule22
  }, {
    start: 338,
    length: 1,
    convRule: rule21
  }, {
    start: 339,
    length: 1,
    convRule: rule22
  }, {
    start: 340,
    length: 1,
    convRule: rule21
  }, {
    start: 341,
    length: 1,
    convRule: rule22
  }, {
    start: 342,
    length: 1,
    convRule: rule21
  }, {
    start: 343,
    length: 1,
    convRule: rule22
  }, {
    start: 344,
    length: 1,
    convRule: rule21
  }, {
    start: 345,
    length: 1,
    convRule: rule22
  }, {
    start: 346,
    length: 1,
    convRule: rule21
  }, {
    start: 347,
    length: 1,
    convRule: rule22
  }, {
    start: 348,
    length: 1,
    convRule: rule21
  }, {
    start: 349,
    length: 1,
    convRule: rule22
  }, {
    start: 350,
    length: 1,
    convRule: rule21
  }, {
    start: 351,
    length: 1,
    convRule: rule22
  }, {
    start: 352,
    length: 1,
    convRule: rule21
  }, {
    start: 353,
    length: 1,
    convRule: rule22
  }, {
    start: 354,
    length: 1,
    convRule: rule21
  }, {
    start: 355,
    length: 1,
    convRule: rule22
  }, {
    start: 356,
    length: 1,
    convRule: rule21
  }, {
    start: 357,
    length: 1,
    convRule: rule22
  }, {
    start: 358,
    length: 1,
    convRule: rule21
  }, {
    start: 359,
    length: 1,
    convRule: rule22
  }, {
    start: 360,
    length: 1,
    convRule: rule21
  }, {
    start: 361,
    length: 1,
    convRule: rule22
  }, {
    start: 362,
    length: 1,
    convRule: rule21
  }, {
    start: 363,
    length: 1,
    convRule: rule22
  }, {
    start: 364,
    length: 1,
    convRule: rule21
  }, {
    start: 365,
    length: 1,
    convRule: rule22
  }, {
    start: 366,
    length: 1,
    convRule: rule21
  }, {
    start: 367,
    length: 1,
    convRule: rule22
  }, {
    start: 368,
    length: 1,
    convRule: rule21
  }, {
    start: 369,
    length: 1,
    convRule: rule22
  }, {
    start: 370,
    length: 1,
    convRule: rule21
  }, {
    start: 371,
    length: 1,
    convRule: rule22
  }, {
    start: 372,
    length: 1,
    convRule: rule21
  }, {
    start: 373,
    length: 1,
    convRule: rule22
  }, {
    start: 374,
    length: 1,
    convRule: rule21
  }, {
    start: 375,
    length: 1,
    convRule: rule22
  }, {
    start: 376,
    length: 1,
    convRule: rule25
  }, {
    start: 377,
    length: 1,
    convRule: rule21
  }, {
    start: 378,
    length: 1,
    convRule: rule22
  }, {
    start: 379,
    length: 1,
    convRule: rule21
  }, {
    start: 380,
    length: 1,
    convRule: rule22
  }, {
    start: 381,
    length: 1,
    convRule: rule21
  }, {
    start: 382,
    length: 1,
    convRule: rule22
  }, {
    start: 383,
    length: 1,
    convRule: rule26
  }, {
    start: 384,
    length: 1,
    convRule: rule27
  }, {
    start: 385,
    length: 1,
    convRule: rule28
  }, {
    start: 386,
    length: 1,
    convRule: rule21
  }, {
    start: 387,
    length: 1,
    convRule: rule22
  }, {
    start: 388,
    length: 1,
    convRule: rule21
  }, {
    start: 389,
    length: 1,
    convRule: rule22
  }, {
    start: 390,
    length: 1,
    convRule: rule29
  }, {
    start: 391,
    length: 1,
    convRule: rule21
  }, {
    start: 392,
    length: 1,
    convRule: rule22
  }, {
    start: 393,
    length: 2,
    convRule: rule30
  }, {
    start: 395,
    length: 1,
    convRule: rule21
  }, {
    start: 396,
    length: 1,
    convRule: rule22
  }, {
    start: 398,
    length: 1,
    convRule: rule31
  }, {
    start: 399,
    length: 1,
    convRule: rule32
  }, {
    start: 400,
    length: 1,
    convRule: rule33
  }, {
    start: 401,
    length: 1,
    convRule: rule21
  }, {
    start: 402,
    length: 1,
    convRule: rule22
  }, {
    start: 403,
    length: 1,
    convRule: rule30
  }, {
    start: 404,
    length: 1,
    convRule: rule34
  }, {
    start: 405,
    length: 1,
    convRule: rule35
  }, {
    start: 406,
    length: 1,
    convRule: rule36
  }, {
    start: 407,
    length: 1,
    convRule: rule37
  }, {
    start: 408,
    length: 1,
    convRule: rule21
  }, {
    start: 409,
    length: 1,
    convRule: rule22
  }, {
    start: 410,
    length: 1,
    convRule: rule38
  }, {
    start: 412,
    length: 1,
    convRule: rule36
  }, {
    start: 413,
    length: 1,
    convRule: rule39
  }, {
    start: 414,
    length: 1,
    convRule: rule40
  }, {
    start: 415,
    length: 1,
    convRule: rule41
  }, {
    start: 416,
    length: 1,
    convRule: rule21
  }, {
    start: 417,
    length: 1,
    convRule: rule22
  }, {
    start: 418,
    length: 1,
    convRule: rule21
  }, {
    start: 419,
    length: 1,
    convRule: rule22
  }, {
    start: 420,
    length: 1,
    convRule: rule21
  }, {
    start: 421,
    length: 1,
    convRule: rule22
  }, {
    start: 422,
    length: 1,
    convRule: rule42
  }, {
    start: 423,
    length: 1,
    convRule: rule21
  }, {
    start: 424,
    length: 1,
    convRule: rule22
  }, {
    start: 425,
    length: 1,
    convRule: rule42
  }, {
    start: 428,
    length: 1,
    convRule: rule21
  }, {
    start: 429,
    length: 1,
    convRule: rule22
  }, {
    start: 430,
    length: 1,
    convRule: rule42
  }, {
    start: 431,
    length: 1,
    convRule: rule21
  }, {
    start: 432,
    length: 1,
    convRule: rule22
  }, {
    start: 433,
    length: 2,
    convRule: rule43
  }, {
    start: 435,
    length: 1,
    convRule: rule21
  }, {
    start: 436,
    length: 1,
    convRule: rule22
  }, {
    start: 437,
    length: 1,
    convRule: rule21
  }, {
    start: 438,
    length: 1,
    convRule: rule22
  }, {
    start: 439,
    length: 1,
    convRule: rule44
  }, {
    start: 440,
    length: 1,
    convRule: rule21
  }, {
    start: 441,
    length: 1,
    convRule: rule22
  }, {
    start: 444,
    length: 1,
    convRule: rule21
  }, {
    start: 445,
    length: 1,
    convRule: rule22
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule21
  }, {
    start: 462,
    length: 1,
    convRule: rule22
  }, {
    start: 463,
    length: 1,
    convRule: rule21
  }, {
    start: 464,
    length: 1,
    convRule: rule22
  }, {
    start: 465,
    length: 1,
    convRule: rule21
  }, {
    start: 466,
    length: 1,
    convRule: rule22
  }, {
    start: 467,
    length: 1,
    convRule: rule21
  }, {
    start: 468,
    length: 1,
    convRule: rule22
  }, {
    start: 469,
    length: 1,
    convRule: rule21
  }, {
    start: 470,
    length: 1,
    convRule: rule22
  }, {
    start: 471,
    length: 1,
    convRule: rule21
  }, {
    start: 472,
    length: 1,
    convRule: rule22
  }, {
    start: 473,
    length: 1,
    convRule: rule21
  }, {
    start: 474,
    length: 1,
    convRule: rule22
  }, {
    start: 475,
    length: 1,
    convRule: rule21
  }, {
    start: 476,
    length: 1,
    convRule: rule22
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule21
  }, {
    start: 479,
    length: 1,
    convRule: rule22
  }, {
    start: 480,
    length: 1,
    convRule: rule21
  }, {
    start: 481,
    length: 1,
    convRule: rule22
  }, {
    start: 482,
    length: 1,
    convRule: rule21
  }, {
    start: 483,
    length: 1,
    convRule: rule22
  }, {
    start: 484,
    length: 1,
    convRule: rule21
  }, {
    start: 485,
    length: 1,
    convRule: rule22
  }, {
    start: 486,
    length: 1,
    convRule: rule21
  }, {
    start: 487,
    length: 1,
    convRule: rule22
  }, {
    start: 488,
    length: 1,
    convRule: rule21
  }, {
    start: 489,
    length: 1,
    convRule: rule22
  }, {
    start: 490,
    length: 1,
    convRule: rule21
  }, {
    start: 491,
    length: 1,
    convRule: rule22
  }, {
    start: 492,
    length: 1,
    convRule: rule21
  }, {
    start: 493,
    length: 1,
    convRule: rule22
  }, {
    start: 494,
    length: 1,
    convRule: rule21
  }, {
    start: 495,
    length: 1,
    convRule: rule22
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule21
  }, {
    start: 501,
    length: 1,
    convRule: rule22
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule21
  }, {
    start: 505,
    length: 1,
    convRule: rule22
  }, {
    start: 506,
    length: 1,
    convRule: rule21
  }, {
    start: 507,
    length: 1,
    convRule: rule22
  }, {
    start: 508,
    length: 1,
    convRule: rule21
  }, {
    start: 509,
    length: 1,
    convRule: rule22
  }, {
    start: 510,
    length: 1,
    convRule: rule21
  }, {
    start: 511,
    length: 1,
    convRule: rule22
  }, {
    start: 512,
    length: 1,
    convRule: rule21
  }, {
    start: 513,
    length: 1,
    convRule: rule22
  }, {
    start: 514,
    length: 1,
    convRule: rule21
  }, {
    start: 515,
    length: 1,
    convRule: rule22
  }, {
    start: 516,
    length: 1,
    convRule: rule21
  }, {
    start: 517,
    length: 1,
    convRule: rule22
  }, {
    start: 518,
    length: 1,
    convRule: rule21
  }, {
    start: 519,
    length: 1,
    convRule: rule22
  }, {
    start: 520,
    length: 1,
    convRule: rule21
  }, {
    start: 521,
    length: 1,
    convRule: rule22
  }, {
    start: 522,
    length: 1,
    convRule: rule21
  }, {
    start: 523,
    length: 1,
    convRule: rule22
  }, {
    start: 524,
    length: 1,
    convRule: rule21
  }, {
    start: 525,
    length: 1,
    convRule: rule22
  }, {
    start: 526,
    length: 1,
    convRule: rule21
  }, {
    start: 527,
    length: 1,
    convRule: rule22
  }, {
    start: 528,
    length: 1,
    convRule: rule21
  }, {
    start: 529,
    length: 1,
    convRule: rule22
  }, {
    start: 530,
    length: 1,
    convRule: rule21
  }, {
    start: 531,
    length: 1,
    convRule: rule22
  }, {
    start: 532,
    length: 1,
    convRule: rule21
  }, {
    start: 533,
    length: 1,
    convRule: rule22
  }, {
    start: 534,
    length: 1,
    convRule: rule21
  }, {
    start: 535,
    length: 1,
    convRule: rule22
  }, {
    start: 536,
    length: 1,
    convRule: rule21
  }, {
    start: 537,
    length: 1,
    convRule: rule22
  }, {
    start: 538,
    length: 1,
    convRule: rule21
  }, {
    start: 539,
    length: 1,
    convRule: rule22
  }, {
    start: 540,
    length: 1,
    convRule: rule21
  }, {
    start: 541,
    length: 1,
    convRule: rule22
  }, {
    start: 542,
    length: 1,
    convRule: rule21
  }, {
    start: 543,
    length: 1,
    convRule: rule22
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 546,
    length: 1,
    convRule: rule21
  }, {
    start: 547,
    length: 1,
    convRule: rule22
  }, {
    start: 548,
    length: 1,
    convRule: rule21
  }, {
    start: 549,
    length: 1,
    convRule: rule22
  }, {
    start: 550,
    length: 1,
    convRule: rule21
  }, {
    start: 551,
    length: 1,
    convRule: rule22
  }, {
    start: 552,
    length: 1,
    convRule: rule21
  }, {
    start: 553,
    length: 1,
    convRule: rule22
  }, {
    start: 554,
    length: 1,
    convRule: rule21
  }, {
    start: 555,
    length: 1,
    convRule: rule22
  }, {
    start: 556,
    length: 1,
    convRule: rule21
  }, {
    start: 557,
    length: 1,
    convRule: rule22
  }, {
    start: 558,
    length: 1,
    convRule: rule21
  }, {
    start: 559,
    length: 1,
    convRule: rule22
  }, {
    start: 560,
    length: 1,
    convRule: rule21
  }, {
    start: 561,
    length: 1,
    convRule: rule22
  }, {
    start: 562,
    length: 1,
    convRule: rule21
  }, {
    start: 563,
    length: 1,
    convRule: rule22
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule21
  }, {
    start: 572,
    length: 1,
    convRule: rule22
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule21
  }, {
    start: 578,
    length: 1,
    convRule: rule22
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule21
  }, {
    start: 583,
    length: 1,
    convRule: rule22
  }, {
    start: 584,
    length: 1,
    convRule: rule21
  }, {
    start: 585,
    length: 1,
    convRule: rule22
  }, {
    start: 586,
    length: 1,
    convRule: rule21
  }, {
    start: 587,
    length: 1,
    convRule: rule22
  }, {
    start: 588,
    length: 1,
    convRule: rule21
  }, {
    start: 589,
    length: 1,
    convRule: rule22
  }, {
    start: 590,
    length: 1,
    convRule: rule21
  }, {
    start: 591,
    length: 1,
    convRule: rule22
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 611,
    length: 1,
    convRule: rule69
  }, {
    start: 613,
    length: 1,
    convRule: rule70
  }, {
    start: 616,
    length: 1,
    convRule: rule71
  }, {
    start: 617,
    length: 1,
    convRule: rule72
  }, {
    start: 619,
    length: 1,
    convRule: rule73
  }, {
    start: 623,
    length: 1,
    convRule: rule72
  }, {
    start: 625,
    length: 1,
    convRule: rule74
  }, {
    start: 626,
    length: 1,
    convRule: rule75
  }, {
    start: 629,
    length: 1,
    convRule: rule76
  }, {
    start: 637,
    length: 1,
    convRule: rule77
  }, {
    start: 640,
    length: 1,
    convRule: rule78
  }, {
    start: 643,
    length: 1,
    convRule: rule78
  }, {
    start: 648,
    length: 1,
    convRule: rule78
  }, {
    start: 649,
    length: 1,
    convRule: rule79
  }, {
    start: 650,
    length: 2,
    convRule: rule80
  }, {
    start: 652,
    length: 1,
    convRule: rule81
  }, {
    start: 658,
    length: 1,
    convRule: rule82
  }, {
    start: 837,
    length: 1,
    convRule: rule85
  }, {
    start: 880,
    length: 1,
    convRule: rule21
  }, {
    start: 881,
    length: 1,
    convRule: rule22
  }, {
    start: 882,
    length: 1,
    convRule: rule21
  }, {
    start: 883,
    length: 1,
    convRule: rule22
  }, {
    start: 886,
    length: 1,
    convRule: rule21
  }, {
    start: 887,
    length: 1,
    convRule: rule22
  }, {
    start: 891,
    length: 3,
    convRule: rule40
  }, {
    start: 902,
    length: 1,
    convRule: rule86
  }, {
    start: 904,
    length: 3,
    convRule: rule87
  }, {
    start: 908,
    length: 1,
    convRule: rule88
  }, {
    start: 910,
    length: 2,
    convRule: rule89
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule90
  }, {
    start: 941,
    length: 3,
    convRule: rule91
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule92
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule93
  }, {
    start: 973,
    length: 2,
    convRule: rule94
  }, {
    start: 975,
    length: 1,
    convRule: rule95
  }, {
    start: 976,
    length: 1,
    convRule: rule96
  }, {
    start: 977,
    length: 1,
    convRule: rule97
  }, {
    start: 981,
    length: 1,
    convRule: rule99
  }, {
    start: 982,
    length: 1,
    convRule: rule100
  }, {
    start: 983,
    length: 1,
    convRule: rule101
  }, {
    start: 984,
    length: 1,
    convRule: rule21
  }, {
    start: 985,
    length: 1,
    convRule: rule22
  }, {
    start: 986,
    length: 1,
    convRule: rule21
  }, {
    start: 987,
    length: 1,
    convRule: rule22
  }, {
    start: 988,
    length: 1,
    convRule: rule21
  }, {
    start: 989,
    length: 1,
    convRule: rule22
  }, {
    start: 990,
    length: 1,
    convRule: rule21
  }, {
    start: 991,
    length: 1,
    convRule: rule22
  }, {
    start: 992,
    length: 1,
    convRule: rule21
  }, {
    start: 993,
    length: 1,
    convRule: rule22
  }, {
    start: 994,
    length: 1,
    convRule: rule21
  }, {
    start: 995,
    length: 1,
    convRule: rule22
  }, {
    start: 996,
    length: 1,
    convRule: rule21
  }, {
    start: 997,
    length: 1,
    convRule: rule22
  }, {
    start: 998,
    length: 1,
    convRule: rule21
  }, {
    start: 999,
    length: 1,
    convRule: rule22
  }, {
    start: 1000,
    length: 1,
    convRule: rule21
  }, {
    start: 1001,
    length: 1,
    convRule: rule22
  }, {
    start: 1002,
    length: 1,
    convRule: rule21
  }, {
    start: 1003,
    length: 1,
    convRule: rule22
  }, {
    start: 1004,
    length: 1,
    convRule: rule21
  }, {
    start: 1005,
    length: 1,
    convRule: rule22
  }, {
    start: 1006,
    length: 1,
    convRule: rule21
  }, {
    start: 1007,
    length: 1,
    convRule: rule22
  }, {
    start: 1008,
    length: 1,
    convRule: rule102
  }, {
    start: 1009,
    length: 1,
    convRule: rule103
  }, {
    start: 1010,
    length: 1,
    convRule: rule104
  }, {
    start: 1012,
    length: 1,
    convRule: rule105
  }, {
    start: 1013,
    length: 1,
    convRule: rule106
  }, {
    start: 1015,
    length: 1,
    convRule: rule21
  }, {
    start: 1016,
    length: 1,
    convRule: rule22
  }, {
    start: 1017,
    length: 1,
    convRule: rule107
  }, {
    start: 1018,
    length: 1,
    convRule: rule21
  }, {
    start: 1019,
    length: 1,
    convRule: rule22
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule108
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule103
  }, {
    start: 1120,
    length: 1,
    convRule: rule21
  }, {
    start: 1121,
    length: 1,
    convRule: rule22
  }, {
    start: 1122,
    length: 1,
    convRule: rule21
  }, {
    start: 1123,
    length: 1,
    convRule: rule22
  }, {
    start: 1124,
    length: 1,
    convRule: rule21
  }, {
    start: 1125,
    length: 1,
    convRule: rule22
  }, {
    start: 1126,
    length: 1,
    convRule: rule21
  }, {
    start: 1127,
    length: 1,
    convRule: rule22
  }, {
    start: 1128,
    length: 1,
    convRule: rule21
  }, {
    start: 1129,
    length: 1,
    convRule: rule22
  }, {
    start: 1130,
    length: 1,
    convRule: rule21
  }, {
    start: 1131,
    length: 1,
    convRule: rule22
  }, {
    start: 1132,
    length: 1,
    convRule: rule21
  }, {
    start: 1133,
    length: 1,
    convRule: rule22
  }, {
    start: 1134,
    length: 1,
    convRule: rule21
  }, {
    start: 1135,
    length: 1,
    convRule: rule22
  }, {
    start: 1136,
    length: 1,
    convRule: rule21
  }, {
    start: 1137,
    length: 1,
    convRule: rule22
  }, {
    start: 1138,
    length: 1,
    convRule: rule21
  }, {
    start: 1139,
    length: 1,
    convRule: rule22
  }, {
    start: 1140,
    length: 1,
    convRule: rule21
  }, {
    start: 1141,
    length: 1,
    convRule: rule22
  }, {
    start: 1142,
    length: 1,
    convRule: rule21
  }, {
    start: 1143,
    length: 1,
    convRule: rule22
  }, {
    start: 1144,
    length: 1,
    convRule: rule21
  }, {
    start: 1145,
    length: 1,
    convRule: rule22
  }, {
    start: 1146,
    length: 1,
    convRule: rule21
  }, {
    start: 1147,
    length: 1,
    convRule: rule22
  }, {
    start: 1148,
    length: 1,
    convRule: rule21
  }, {
    start: 1149,
    length: 1,
    convRule: rule22
  }, {
    start: 1150,
    length: 1,
    convRule: rule21
  }, {
    start: 1151,
    length: 1,
    convRule: rule22
  }, {
    start: 1152,
    length: 1,
    convRule: rule21
  }, {
    start: 1153,
    length: 1,
    convRule: rule22
  }, {
    start: 1162,
    length: 1,
    convRule: rule21
  }, {
    start: 1163,
    length: 1,
    convRule: rule22
  }, {
    start: 1164,
    length: 1,
    convRule: rule21
  }, {
    start: 1165,
    length: 1,
    convRule: rule22
  }, {
    start: 1166,
    length: 1,
    convRule: rule21
  }, {
    start: 1167,
    length: 1,
    convRule: rule22
  }, {
    start: 1168,
    length: 1,
    convRule: rule21
  }, {
    start: 1169,
    length: 1,
    convRule: rule22
  }, {
    start: 1170,
    length: 1,
    convRule: rule21
  }, {
    start: 1171,
    length: 1,
    convRule: rule22
  }, {
    start: 1172,
    length: 1,
    convRule: rule21
  }, {
    start: 1173,
    length: 1,
    convRule: rule22
  }, {
    start: 1174,
    length: 1,
    convRule: rule21
  }, {
    start: 1175,
    length: 1,
    convRule: rule22
  }, {
    start: 1176,
    length: 1,
    convRule: rule21
  }, {
    start: 1177,
    length: 1,
    convRule: rule22
  }, {
    start: 1178,
    length: 1,
    convRule: rule21
  }, {
    start: 1179,
    length: 1,
    convRule: rule22
  }, {
    start: 1180,
    length: 1,
    convRule: rule21
  }, {
    start: 1181,
    length: 1,
    convRule: rule22
  }, {
    start: 1182,
    length: 1,
    convRule: rule21
  }, {
    start: 1183,
    length: 1,
    convRule: rule22
  }, {
    start: 1184,
    length: 1,
    convRule: rule21
  }, {
    start: 1185,
    length: 1,
    convRule: rule22
  }, {
    start: 1186,
    length: 1,
    convRule: rule21
  }, {
    start: 1187,
    length: 1,
    convRule: rule22
  }, {
    start: 1188,
    length: 1,
    convRule: rule21
  }, {
    start: 1189,
    length: 1,
    convRule: rule22
  }, {
    start: 1190,
    length: 1,
    convRule: rule21
  }, {
    start: 1191,
    length: 1,
    convRule: rule22
  }, {
    start: 1192,
    length: 1,
    convRule: rule21
  }, {
    start: 1193,
    length: 1,
    convRule: rule22
  }, {
    start: 1194,
    length: 1,
    convRule: rule21
  }, {
    start: 1195,
    length: 1,
    convRule: rule22
  }, {
    start: 1196,
    length: 1,
    convRule: rule21
  }, {
    start: 1197,
    length: 1,
    convRule: rule22
  }, {
    start: 1198,
    length: 1,
    convRule: rule21
  }, {
    start: 1199,
    length: 1,
    convRule: rule22
  }, {
    start: 1200,
    length: 1,
    convRule: rule21
  }, {
    start: 1201,
    length: 1,
    convRule: rule22
  }, {
    start: 1202,
    length: 1,
    convRule: rule21
  }, {
    start: 1203,
    length: 1,
    convRule: rule22
  }, {
    start: 1204,
    length: 1,
    convRule: rule21
  }, {
    start: 1205,
    length: 1,
    convRule: rule22
  }, {
    start: 1206,
    length: 1,
    convRule: rule21
  }, {
    start: 1207,
    length: 1,
    convRule: rule22
  }, {
    start: 1208,
    length: 1,
    convRule: rule21
  }, {
    start: 1209,
    length: 1,
    convRule: rule22
  }, {
    start: 1210,
    length: 1,
    convRule: rule21
  }, {
    start: 1211,
    length: 1,
    convRule: rule22
  }, {
    start: 1212,
    length: 1,
    convRule: rule21
  }, {
    start: 1213,
    length: 1,
    convRule: rule22
  }, {
    start: 1214,
    length: 1,
    convRule: rule21
  }, {
    start: 1215,
    length: 1,
    convRule: rule22
  }, {
    start: 1216,
    length: 1,
    convRule: rule110
  }, {
    start: 1217,
    length: 1,
    convRule: rule21
  }, {
    start: 1218,
    length: 1,
    convRule: rule22
  }, {
    start: 1219,
    length: 1,
    convRule: rule21
  }, {
    start: 1220,
    length: 1,
    convRule: rule22
  }, {
    start: 1221,
    length: 1,
    convRule: rule21
  }, {
    start: 1222,
    length: 1,
    convRule: rule22
  }, {
    start: 1223,
    length: 1,
    convRule: rule21
  }, {
    start: 1224,
    length: 1,
    convRule: rule22
  }, {
    start: 1225,
    length: 1,
    convRule: rule21
  }, {
    start: 1226,
    length: 1,
    convRule: rule22
  }, {
    start: 1227,
    length: 1,
    convRule: rule21
  }, {
    start: 1228,
    length: 1,
    convRule: rule22
  }, {
    start: 1229,
    length: 1,
    convRule: rule21
  }, {
    start: 1230,
    length: 1,
    convRule: rule22
  }, {
    start: 1231,
    length: 1,
    convRule: rule111
  }, {
    start: 1232,
    length: 1,
    convRule: rule21
  }, {
    start: 1233,
    length: 1,
    convRule: rule22
  }, {
    start: 1234,
    length: 1,
    convRule: rule21
  }, {
    start: 1235,
    length: 1,
    convRule: rule22
  }, {
    start: 1236,
    length: 1,
    convRule: rule21
  }, {
    start: 1237,
    length: 1,
    convRule: rule22
  }, {
    start: 1238,
    length: 1,
    convRule: rule21
  }, {
    start: 1239,
    length: 1,
    convRule: rule22
  }, {
    start: 1240,
    length: 1,
    convRule: rule21
  }, {
    start: 1241,
    length: 1,
    convRule: rule22
  }, {
    start: 1242,
    length: 1,
    convRule: rule21
  }, {
    start: 1243,
    length: 1,
    convRule: rule22
  }, {
    start: 1244,
    length: 1,
    convRule: rule21
  }, {
    start: 1245,
    length: 1,
    convRule: rule22
  }, {
    start: 1246,
    length: 1,
    convRule: rule21
  }, {
    start: 1247,
    length: 1,
    convRule: rule22
  }, {
    start: 1248,
    length: 1,
    convRule: rule21
  }, {
    start: 1249,
    length: 1,
    convRule: rule22
  }, {
    start: 1250,
    length: 1,
    convRule: rule21
  }, {
    start: 1251,
    length: 1,
    convRule: rule22
  }, {
    start: 1252,
    length: 1,
    convRule: rule21
  }, {
    start: 1253,
    length: 1,
    convRule: rule22
  }, {
    start: 1254,
    length: 1,
    convRule: rule21
  }, {
    start: 1255,
    length: 1,
    convRule: rule22
  }, {
    start: 1256,
    length: 1,
    convRule: rule21
  }, {
    start: 1257,
    length: 1,
    convRule: rule22
  }, {
    start: 1258,
    length: 1,
    convRule: rule21
  }, {
    start: 1259,
    length: 1,
    convRule: rule22
  }, {
    start: 1260,
    length: 1,
    convRule: rule21
  }, {
    start: 1261,
    length: 1,
    convRule: rule22
  }, {
    start: 1262,
    length: 1,
    convRule: rule21
  }, {
    start: 1263,
    length: 1,
    convRule: rule22
  }, {
    start: 1264,
    length: 1,
    convRule: rule21
  }, {
    start: 1265,
    length: 1,
    convRule: rule22
  }, {
    start: 1266,
    length: 1,
    convRule: rule21
  }, {
    start: 1267,
    length: 1,
    convRule: rule22
  }, {
    start: 1268,
    length: 1,
    convRule: rule21
  }, {
    start: 1269,
    length: 1,
    convRule: rule22
  }, {
    start: 1270,
    length: 1,
    convRule: rule21
  }, {
    start: 1271,
    length: 1,
    convRule: rule22
  }, {
    start: 1272,
    length: 1,
    convRule: rule21
  }, {
    start: 1273,
    length: 1,
    convRule: rule22
  }, {
    start: 1274,
    length: 1,
    convRule: rule21
  }, {
    start: 1275,
    length: 1,
    convRule: rule22
  }, {
    start: 1276,
    length: 1,
    convRule: rule21
  }, {
    start: 1277,
    length: 1,
    convRule: rule22
  }, {
    start: 1278,
    length: 1,
    convRule: rule21
  }, {
    start: 1279,
    length: 1,
    convRule: rule22
  }, {
    start: 1280,
    length: 1,
    convRule: rule21
  }, {
    start: 1281,
    length: 1,
    convRule: rule22
  }, {
    start: 1282,
    length: 1,
    convRule: rule21
  }, {
    start: 1283,
    length: 1,
    convRule: rule22
  }, {
    start: 1284,
    length: 1,
    convRule: rule21
  }, {
    start: 1285,
    length: 1,
    convRule: rule22
  }, {
    start: 1286,
    length: 1,
    convRule: rule21
  }, {
    start: 1287,
    length: 1,
    convRule: rule22
  }, {
    start: 1288,
    length: 1,
    convRule: rule21
  }, {
    start: 1289,
    length: 1,
    convRule: rule22
  }, {
    start: 1290,
    length: 1,
    convRule: rule21
  }, {
    start: 1291,
    length: 1,
    convRule: rule22
  }, {
    start: 1292,
    length: 1,
    convRule: rule21
  }, {
    start: 1293,
    length: 1,
    convRule: rule22
  }, {
    start: 1294,
    length: 1,
    convRule: rule21
  }, {
    start: 1295,
    length: 1,
    convRule: rule22
  }, {
    start: 1296,
    length: 1,
    convRule: rule21
  }, {
    start: 1297,
    length: 1,
    convRule: rule22
  }, {
    start: 1298,
    length: 1,
    convRule: rule21
  }, {
    start: 1299,
    length: 1,
    convRule: rule22
  }, {
    start: 1300,
    length: 1,
    convRule: rule21
  }, {
    start: 1301,
    length: 1,
    convRule: rule22
  }, {
    start: 1302,
    length: 1,
    convRule: rule21
  }, {
    start: 1303,
    length: 1,
    convRule: rule22
  }, {
    start: 1304,
    length: 1,
    convRule: rule21
  }, {
    start: 1305,
    length: 1,
    convRule: rule22
  }, {
    start: 1306,
    length: 1,
    convRule: rule21
  }, {
    start: 1307,
    length: 1,
    convRule: rule22
  }, {
    start: 1308,
    length: 1,
    convRule: rule21
  }, {
    start: 1309,
    length: 1,
    convRule: rule22
  }, {
    start: 1310,
    length: 1,
    convRule: rule21
  }, {
    start: 1311,
    length: 1,
    convRule: rule22
  }, {
    start: 1312,
    length: 1,
    convRule: rule21
  }, {
    start: 1313,
    length: 1,
    convRule: rule22
  }, {
    start: 1314,
    length: 1,
    convRule: rule21
  }, {
    start: 1315,
    length: 1,
    convRule: rule22
  }, {
    start: 1316,
    length: 1,
    convRule: rule21
  }, {
    start: 1317,
    length: 1,
    convRule: rule22
  }, {
    start: 1318,
    length: 1,
    convRule: rule21
  }, {
    start: 1319,
    length: 1,
    convRule: rule22
  }, {
    start: 1329,
    length: 38,
    convRule: rule112
  }, {
    start: 1377,
    length: 38,
    convRule: rule113
  }, {
    start: 4256,
    length: 38,
    convRule: rule115
  }, {
    start: 7545,
    length: 1,
    convRule: rule117
  }, {
    start: 7549,
    length: 1,
    convRule: rule118
  }, {
    start: 7680,
    length: 1,
    convRule: rule21
  }, {
    start: 7681,
    length: 1,
    convRule: rule22
  }, {
    start: 7682,
    length: 1,
    convRule: rule21
  }, {
    start: 7683,
    length: 1,
    convRule: rule22
  }, {
    start: 7684,
    length: 1,
    convRule: rule21
  }, {
    start: 7685,
    length: 1,
    convRule: rule22
  }, {
    start: 7686,
    length: 1,
    convRule: rule21
  }, {
    start: 7687,
    length: 1,
    convRule: rule22
  }, {
    start: 7688,
    length: 1,
    convRule: rule21
  }, {
    start: 7689,
    length: 1,
    convRule: rule22
  }, {
    start: 7690,
    length: 1,
    convRule: rule21
  }, {
    start: 7691,
    length: 1,
    convRule: rule22
  }, {
    start: 7692,
    length: 1,
    convRule: rule21
  }, {
    start: 7693,
    length: 1,
    convRule: rule22
  }, {
    start: 7694,
    length: 1,
    convRule: rule21
  }, {
    start: 7695,
    length: 1,
    convRule: rule22
  }, {
    start: 7696,
    length: 1,
    convRule: rule21
  }, {
    start: 7697,
    length: 1,
    convRule: rule22
  }, {
    start: 7698,
    length: 1,
    convRule: rule21
  }, {
    start: 7699,
    length: 1,
    convRule: rule22
  }, {
    start: 7700,
    length: 1,
    convRule: rule21
  }, {
    start: 7701,
    length: 1,
    convRule: rule22
  }, {
    start: 7702,
    length: 1,
    convRule: rule21
  }, {
    start: 7703,
    length: 1,
    convRule: rule22
  }, {
    start: 7704,
    length: 1,
    convRule: rule21
  }, {
    start: 7705,
    length: 1,
    convRule: rule22
  }, {
    start: 7706,
    length: 1,
    convRule: rule21
  }, {
    start: 7707,
    length: 1,
    convRule: rule22
  }, {
    start: 7708,
    length: 1,
    convRule: rule21
  }, {
    start: 7709,
    length: 1,
    convRule: rule22
  }, {
    start: 7710,
    length: 1,
    convRule: rule21
  }, {
    start: 7711,
    length: 1,
    convRule: rule22
  }, {
    start: 7712,
    length: 1,
    convRule: rule21
  }, {
    start: 7713,
    length: 1,
    convRule: rule22
  }, {
    start: 7714,
    length: 1,
    convRule: rule21
  }, {
    start: 7715,
    length: 1,
    convRule: rule22
  }, {
    start: 7716,
    length: 1,
    convRule: rule21
  }, {
    start: 7717,
    length: 1,
    convRule: rule22
  }, {
    start: 7718,
    length: 1,
    convRule: rule21
  }, {
    start: 7719,
    length: 1,
    convRule: rule22
  }, {
    start: 7720,
    length: 1,
    convRule: rule21
  }, {
    start: 7721,
    length: 1,
    convRule: rule22
  }, {
    start: 7722,
    length: 1,
    convRule: rule21
  }, {
    start: 7723,
    length: 1,
    convRule: rule22
  }, {
    start: 7724,
    length: 1,
    convRule: rule21
  }, {
    start: 7725,
    length: 1,
    convRule: rule22
  }, {
    start: 7726,
    length: 1,
    convRule: rule21
  }, {
    start: 7727,
    length: 1,
    convRule: rule22
  }, {
    start: 7728,
    length: 1,
    convRule: rule21
  }, {
    start: 7729,
    length: 1,
    convRule: rule22
  }, {
    start: 7730,
    length: 1,
    convRule: rule21
  }, {
    start: 7731,
    length: 1,
    convRule: rule22
  }, {
    start: 7732,
    length: 1,
    convRule: rule21
  }, {
    start: 7733,
    length: 1,
    convRule: rule22
  }, {
    start: 7734,
    length: 1,
    convRule: rule21
  }, {
    start: 7735,
    length: 1,
    convRule: rule22
  }, {
    start: 7736,
    length: 1,
    convRule: rule21
  }, {
    start: 7737,
    length: 1,
    convRule: rule22
  }, {
    start: 7738,
    length: 1,
    convRule: rule21
  }, {
    start: 7739,
    length: 1,
    convRule: rule22
  }, {
    start: 7740,
    length: 1,
    convRule: rule21
  }, {
    start: 7741,
    length: 1,
    convRule: rule22
  }, {
    start: 7742,
    length: 1,
    convRule: rule21
  }, {
    start: 7743,
    length: 1,
    convRule: rule22
  }, {
    start: 7744,
    length: 1,
    convRule: rule21
  }, {
    start: 7745,
    length: 1,
    convRule: rule22
  }, {
    start: 7746,
    length: 1,
    convRule: rule21
  }, {
    start: 7747,
    length: 1,
    convRule: rule22
  }, {
    start: 7748,
    length: 1,
    convRule: rule21
  }, {
    start: 7749,
    length: 1,
    convRule: rule22
  }, {
    start: 7750,
    length: 1,
    convRule: rule21
  }, {
    start: 7751,
    length: 1,
    convRule: rule22
  }, {
    start: 7752,
    length: 1,
    convRule: rule21
  }, {
    start: 7753,
    length: 1,
    convRule: rule22
  }, {
    start: 7754,
    length: 1,
    convRule: rule21
  }, {
    start: 7755,
    length: 1,
    convRule: rule22
  }, {
    start: 7756,
    length: 1,
    convRule: rule21
  }, {
    start: 7757,
    length: 1,
    convRule: rule22
  }, {
    start: 7758,
    length: 1,
    convRule: rule21
  }, {
    start: 7759,
    length: 1,
    convRule: rule22
  }, {
    start: 7760,
    length: 1,
    convRule: rule21
  }, {
    start: 7761,
    length: 1,
    convRule: rule22
  }, {
    start: 7762,
    length: 1,
    convRule: rule21
  }, {
    start: 7763,
    length: 1,
    convRule: rule22
  }, {
    start: 7764,
    length: 1,
    convRule: rule21
  }, {
    start: 7765,
    length: 1,
    convRule: rule22
  }, {
    start: 7766,
    length: 1,
    convRule: rule21
  }, {
    start: 7767,
    length: 1,
    convRule: rule22
  }, {
    start: 7768,
    length: 1,
    convRule: rule21
  }, {
    start: 7769,
    length: 1,
    convRule: rule22
  }, {
    start: 7770,
    length: 1,
    convRule: rule21
  }, {
    start: 7771,
    length: 1,
    convRule: rule22
  }, {
    start: 7772,
    length: 1,
    convRule: rule21
  }, {
    start: 7773,
    length: 1,
    convRule: rule22
  }, {
    start: 7774,
    length: 1,
    convRule: rule21
  }, {
    start: 7775,
    length: 1,
    convRule: rule22
  }, {
    start: 7776,
    length: 1,
    convRule: rule21
  }, {
    start: 7777,
    length: 1,
    convRule: rule22
  }, {
    start: 7778,
    length: 1,
    convRule: rule21
  }, {
    start: 7779,
    length: 1,
    convRule: rule22
  }, {
    start: 7780,
    length: 1,
    convRule: rule21
  }, {
    start: 7781,
    length: 1,
    convRule: rule22
  }, {
    start: 7782,
    length: 1,
    convRule: rule21
  }, {
    start: 7783,
    length: 1,
    convRule: rule22
  }, {
    start: 7784,
    length: 1,
    convRule: rule21
  }, {
    start: 7785,
    length: 1,
    convRule: rule22
  }, {
    start: 7786,
    length: 1,
    convRule: rule21
  }, {
    start: 7787,
    length: 1,
    convRule: rule22
  }, {
    start: 7788,
    length: 1,
    convRule: rule21
  }, {
    start: 7789,
    length: 1,
    convRule: rule22
  }, {
    start: 7790,
    length: 1,
    convRule: rule21
  }, {
    start: 7791,
    length: 1,
    convRule: rule22
  }, {
    start: 7792,
    length: 1,
    convRule: rule21
  }, {
    start: 7793,
    length: 1,
    convRule: rule22
  }, {
    start: 7794,
    length: 1,
    convRule: rule21
  }, {
    start: 7795,
    length: 1,
    convRule: rule22
  }, {
    start: 7796,
    length: 1,
    convRule: rule21
  }, {
    start: 7797,
    length: 1,
    convRule: rule22
  }, {
    start: 7798,
    length: 1,
    convRule: rule21
  }, {
    start: 7799,
    length: 1,
    convRule: rule22
  }, {
    start: 7800,
    length: 1,
    convRule: rule21
  }, {
    start: 7801,
    length: 1,
    convRule: rule22
  }, {
    start: 7802,
    length: 1,
    convRule: rule21
  }, {
    start: 7803,
    length: 1,
    convRule: rule22
  }, {
    start: 7804,
    length: 1,
    convRule: rule21
  }, {
    start: 7805,
    length: 1,
    convRule: rule22
  }, {
    start: 7806,
    length: 1,
    convRule: rule21
  }, {
    start: 7807,
    length: 1,
    convRule: rule22
  }, {
    start: 7808,
    length: 1,
    convRule: rule21
  }, {
    start: 7809,
    length: 1,
    convRule: rule22
  }, {
    start: 7810,
    length: 1,
    convRule: rule21
  }, {
    start: 7811,
    length: 1,
    convRule: rule22
  }, {
    start: 7812,
    length: 1,
    convRule: rule21
  }, {
    start: 7813,
    length: 1,
    convRule: rule22
  }, {
    start: 7814,
    length: 1,
    convRule: rule21
  }, {
    start: 7815,
    length: 1,
    convRule: rule22
  }, {
    start: 7816,
    length: 1,
    convRule: rule21
  }, {
    start: 7817,
    length: 1,
    convRule: rule22
  }, {
    start: 7818,
    length: 1,
    convRule: rule21
  }, {
    start: 7819,
    length: 1,
    convRule: rule22
  }, {
    start: 7820,
    length: 1,
    convRule: rule21
  }, {
    start: 7821,
    length: 1,
    convRule: rule22
  }, {
    start: 7822,
    length: 1,
    convRule: rule21
  }, {
    start: 7823,
    length: 1,
    convRule: rule22
  }, {
    start: 7824,
    length: 1,
    convRule: rule21
  }, {
    start: 7825,
    length: 1,
    convRule: rule22
  }, {
    start: 7826,
    length: 1,
    convRule: rule21
  }, {
    start: 7827,
    length: 1,
    convRule: rule22
  }, {
    start: 7828,
    length: 1,
    convRule: rule21
  }, {
    start: 7829,
    length: 1,
    convRule: rule22
  }, {
    start: 7835,
    length: 1,
    convRule: rule119
  }, {
    start: 7838,
    length: 1,
    convRule: rule120
  }, {
    start: 7840,
    length: 1,
    convRule: rule21
  }, {
    start: 7841,
    length: 1,
    convRule: rule22
  }, {
    start: 7842,
    length: 1,
    convRule: rule21
  }, {
    start: 7843,
    length: 1,
    convRule: rule22
  }, {
    start: 7844,
    length: 1,
    convRule: rule21
  }, {
    start: 7845,
    length: 1,
    convRule: rule22
  }, {
    start: 7846,
    length: 1,
    convRule: rule21
  }, {
    start: 7847,
    length: 1,
    convRule: rule22
  }, {
    start: 7848,
    length: 1,
    convRule: rule21
  }, {
    start: 7849,
    length: 1,
    convRule: rule22
  }, {
    start: 7850,
    length: 1,
    convRule: rule21
  }, {
    start: 7851,
    length: 1,
    convRule: rule22
  }, {
    start: 7852,
    length: 1,
    convRule: rule21
  }, {
    start: 7853,
    length: 1,
    convRule: rule22
  }, {
    start: 7854,
    length: 1,
    convRule: rule21
  }, {
    start: 7855,
    length: 1,
    convRule: rule22
  }, {
    start: 7856,
    length: 1,
    convRule: rule21
  }, {
    start: 7857,
    length: 1,
    convRule: rule22
  }, {
    start: 7858,
    length: 1,
    convRule: rule21
  }, {
    start: 7859,
    length: 1,
    convRule: rule22
  }, {
    start: 7860,
    length: 1,
    convRule: rule21
  }, {
    start: 7861,
    length: 1,
    convRule: rule22
  }, {
    start: 7862,
    length: 1,
    convRule: rule21
  }, {
    start: 7863,
    length: 1,
    convRule: rule22
  }, {
    start: 7864,
    length: 1,
    convRule: rule21
  }, {
    start: 7865,
    length: 1,
    convRule: rule22
  }, {
    start: 7866,
    length: 1,
    convRule: rule21
  }, {
    start: 7867,
    length: 1,
    convRule: rule22
  }, {
    start: 7868,
    length: 1,
    convRule: rule21
  }, {
    start: 7869,
    length: 1,
    convRule: rule22
  }, {
    start: 7870,
    length: 1,
    convRule: rule21
  }, {
    start: 7871,
    length: 1,
    convRule: rule22
  }, {
    start: 7872,
    length: 1,
    convRule: rule21
  }, {
    start: 7873,
    length: 1,
    convRule: rule22
  }, {
    start: 7874,
    length: 1,
    convRule: rule21
  }, {
    start: 7875,
    length: 1,
    convRule: rule22
  }, {
    start: 7876,
    length: 1,
    convRule: rule21
  }, {
    start: 7877,
    length: 1,
    convRule: rule22
  }, {
    start: 7878,
    length: 1,
    convRule: rule21
  }, {
    start: 7879,
    length: 1,
    convRule: rule22
  }, {
    start: 7880,
    length: 1,
    convRule: rule21
  }, {
    start: 7881,
    length: 1,
    convRule: rule22
  }, {
    start: 7882,
    length: 1,
    convRule: rule21
  }, {
    start: 7883,
    length: 1,
    convRule: rule22
  }, {
    start: 7884,
    length: 1,
    convRule: rule21
  }, {
    start: 7885,
    length: 1,
    convRule: rule22
  }, {
    start: 7886,
    length: 1,
    convRule: rule21
  }, {
    start: 7887,
    length: 1,
    convRule: rule22
  }, {
    start: 7888,
    length: 1,
    convRule: rule21
  }, {
    start: 7889,
    length: 1,
    convRule: rule22
  }, {
    start: 7890,
    length: 1,
    convRule: rule21
  }, {
    start: 7891,
    length: 1,
    convRule: rule22
  }, {
    start: 7892,
    length: 1,
    convRule: rule21
  }, {
    start: 7893,
    length: 1,
    convRule: rule22
  }, {
    start: 7894,
    length: 1,
    convRule: rule21
  }, {
    start: 7895,
    length: 1,
    convRule: rule22
  }, {
    start: 7896,
    length: 1,
    convRule: rule21
  }, {
    start: 7897,
    length: 1,
    convRule: rule22
  }, {
    start: 7898,
    length: 1,
    convRule: rule21
  }, {
    start: 7899,
    length: 1,
    convRule: rule22
  }, {
    start: 7900,
    length: 1,
    convRule: rule21
  }, {
    start: 7901,
    length: 1,
    convRule: rule22
  }, {
    start: 7902,
    length: 1,
    convRule: rule21
  }, {
    start: 7903,
    length: 1,
    convRule: rule22
  }, {
    start: 7904,
    length: 1,
    convRule: rule21
  }, {
    start: 7905,
    length: 1,
    convRule: rule22
  }, {
    start: 7906,
    length: 1,
    convRule: rule21
  }, {
    start: 7907,
    length: 1,
    convRule: rule22
  }, {
    start: 7908,
    length: 1,
    convRule: rule21
  }, {
    start: 7909,
    length: 1,
    convRule: rule22
  }, {
    start: 7910,
    length: 1,
    convRule: rule21
  }, {
    start: 7911,
    length: 1,
    convRule: rule22
  }, {
    start: 7912,
    length: 1,
    convRule: rule21
  }, {
    start: 7913,
    length: 1,
    convRule: rule22
  }, {
    start: 7914,
    length: 1,
    convRule: rule21
  }, {
    start: 7915,
    length: 1,
    convRule: rule22
  }, {
    start: 7916,
    length: 1,
    convRule: rule21
  }, {
    start: 7917,
    length: 1,
    convRule: rule22
  }, {
    start: 7918,
    length: 1,
    convRule: rule21
  }, {
    start: 7919,
    length: 1,
    convRule: rule22
  }, {
    start: 7920,
    length: 1,
    convRule: rule21
  }, {
    start: 7921,
    length: 1,
    convRule: rule22
  }, {
    start: 7922,
    length: 1,
    convRule: rule21
  }, {
    start: 7923,
    length: 1,
    convRule: rule22
  }, {
    start: 7924,
    length: 1,
    convRule: rule21
  }, {
    start: 7925,
    length: 1,
    convRule: rule22
  }, {
    start: 7926,
    length: 1,
    convRule: rule21
  }, {
    start: 7927,
    length: 1,
    convRule: rule22
  }, {
    start: 7928,
    length: 1,
    convRule: rule21
  }, {
    start: 7929,
    length: 1,
    convRule: rule22
  }, {
    start: 7930,
    length: 1,
    convRule: rule21
  }, {
    start: 7931,
    length: 1,
    convRule: rule22
  }, {
    start: 7932,
    length: 1,
    convRule: rule21
  }, {
    start: 7933,
    length: 1,
    convRule: rule22
  }, {
    start: 7934,
    length: 1,
    convRule: rule21
  }, {
    start: 7935,
    length: 1,
    convRule: rule22
  }, {
    start: 7936,
    length: 8,
    convRule: rule121
  }, {
    start: 7944,
    length: 8,
    convRule: rule122
  }, {
    start: 7952,
    length: 6,
    convRule: rule121
  }, {
    start: 7960,
    length: 6,
    convRule: rule122
  }, {
    start: 7968,
    length: 8,
    convRule: rule121
  }, {
    start: 7976,
    length: 8,
    convRule: rule122
  }, {
    start: 7984,
    length: 8,
    convRule: rule121
  }, {
    start: 7992,
    length: 8,
    convRule: rule122
  }, {
    start: 8000,
    length: 6,
    convRule: rule121
  }, {
    start: 8008,
    length: 6,
    convRule: rule122
  }, {
    start: 8017,
    length: 1,
    convRule: rule121
  }, {
    start: 8019,
    length: 1,
    convRule: rule121
  }, {
    start: 8021,
    length: 1,
    convRule: rule121
  }, {
    start: 8023,
    length: 1,
    convRule: rule121
  }, {
    start: 8025,
    length: 1,
    convRule: rule122
  }, {
    start: 8027,
    length: 1,
    convRule: rule122
  }, {
    start: 8029,
    length: 1,
    convRule: rule122
  }, {
    start: 8031,
    length: 1,
    convRule: rule122
  }, {
    start: 8032,
    length: 8,
    convRule: rule121
  }, {
    start: 8040,
    length: 8,
    convRule: rule122
  }, {
    start: 8048,
    length: 2,
    convRule: rule123
  }, {
    start: 8050,
    length: 4,
    convRule: rule124
  }, {
    start: 8054,
    length: 2,
    convRule: rule125
  }, {
    start: 8056,
    length: 2,
    convRule: rule126
  }, {
    start: 8058,
    length: 2,
    convRule: rule127
  }, {
    start: 8060,
    length: 2,
    convRule: rule128
  }, {
    start: 8064,
    length: 8,
    convRule: rule121
  }, {
    start: 8072,
    length: 8,
    convRule: rule129
  }, {
    start: 8080,
    length: 8,
    convRule: rule121
  }, {
    start: 8088,
    length: 8,
    convRule: rule129
  }, {
    start: 8096,
    length: 8,
    convRule: rule121
  }, {
    start: 8104,
    length: 8,
    convRule: rule129
  }, {
    start: 8112,
    length: 2,
    convRule: rule121
  }, {
    start: 8115,
    length: 1,
    convRule: rule130
  }, {
    start: 8120,
    length: 2,
    convRule: rule122
  }, {
    start: 8122,
    length: 2,
    convRule: rule131
  }, {
    start: 8124,
    length: 1,
    convRule: rule132
  }, {
    start: 8126,
    length: 1,
    convRule: rule133
  }, {
    start: 8131,
    length: 1,
    convRule: rule130
  }, {
    start: 8136,
    length: 4,
    convRule: rule134
  }, {
    start: 8140,
    length: 1,
    convRule: rule132
  }, {
    start: 8144,
    length: 2,
    convRule: rule121
  }, {
    start: 8152,
    length: 2,
    convRule: rule122
  }, {
    start: 8154,
    length: 2,
    convRule: rule135
  }, {
    start: 8160,
    length: 2,
    convRule: rule121
  }, {
    start: 8165,
    length: 1,
    convRule: rule104
  }, {
    start: 8168,
    length: 2,
    convRule: rule122
  }, {
    start: 8170,
    length: 2,
    convRule: rule136
  }, {
    start: 8172,
    length: 1,
    convRule: rule107
  }, {
    start: 8179,
    length: 1,
    convRule: rule130
  }, {
    start: 8184,
    length: 2,
    convRule: rule137
  }, {
    start: 8186,
    length: 2,
    convRule: rule138
  }, {
    start: 8188,
    length: 1,
    convRule: rule132
  }, {
    start: 8486,
    length: 1,
    convRule: rule141
  }, {
    start: 8490,
    length: 1,
    convRule: rule142
  }, {
    start: 8491,
    length: 1,
    convRule: rule143
  }, {
    start: 8498,
    length: 1,
    convRule: rule144
  }, {
    start: 8526,
    length: 1,
    convRule: rule145
  }, {
    start: 8544,
    length: 16,
    convRule: rule146
  }, {
    start: 8560,
    length: 16,
    convRule: rule147
  }, {
    start: 8579,
    length: 1,
    convRule: rule21
  }, {
    start: 8580,
    length: 1,
    convRule: rule22
  }, {
    start: 9398,
    length: 26,
    convRule: rule148
  }, {
    start: 9424,
    length: 26,
    convRule: rule149
  }, {
    start: 11264,
    length: 47,
    convRule: rule112
  }, {
    start: 11312,
    length: 47,
    convRule: rule113
  }, {
    start: 11360,
    length: 1,
    convRule: rule21
  }, {
    start: 11361,
    length: 1,
    convRule: rule22
  }, {
    start: 11362,
    length: 1,
    convRule: rule150
  }, {
    start: 11363,
    length: 1,
    convRule: rule151
  }, {
    start: 11364,
    length: 1,
    convRule: rule152
  }, {
    start: 11365,
    length: 1,
    convRule: rule153
  }, {
    start: 11366,
    length: 1,
    convRule: rule154
  }, {
    start: 11367,
    length: 1,
    convRule: rule21
  }, {
    start: 11368,
    length: 1,
    convRule: rule22
  }, {
    start: 11369,
    length: 1,
    convRule: rule21
  }, {
    start: 11370,
    length: 1,
    convRule: rule22
  }, {
    start: 11371,
    length: 1,
    convRule: rule21
  }, {
    start: 11372,
    length: 1,
    convRule: rule22
  }, {
    start: 11373,
    length: 1,
    convRule: rule155
  }, {
    start: 11374,
    length: 1,
    convRule: rule156
  }, {
    start: 11375,
    length: 1,
    convRule: rule157
  }, {
    start: 11376,
    length: 1,
    convRule: rule158
  }, {
    start: 11378,
    length: 1,
    convRule: rule21
  }, {
    start: 11379,
    length: 1,
    convRule: rule22
  }, {
    start: 11381,
    length: 1,
    convRule: rule21
  }, {
    start: 11382,
    length: 1,
    convRule: rule22
  }, {
    start: 11390,
    length: 2,
    convRule: rule159
  }, {
    start: 11392,
    length: 1,
    convRule: rule21
  }, {
    start: 11393,
    length: 1,
    convRule: rule22
  }, {
    start: 11394,
    length: 1,
    convRule: rule21
  }, {
    start: 11395,
    length: 1,
    convRule: rule22
  }, {
    start: 11396,
    length: 1,
    convRule: rule21
  }, {
    start: 11397,
    length: 1,
    convRule: rule22
  }, {
    start: 11398,
    length: 1,
    convRule: rule21
  }, {
    start: 11399,
    length: 1,
    convRule: rule22
  }, {
    start: 11400,
    length: 1,
    convRule: rule21
  }, {
    start: 11401,
    length: 1,
    convRule: rule22
  }, {
    start: 11402,
    length: 1,
    convRule: rule21
  }, {
    start: 11403,
    length: 1,
    convRule: rule22
  }, {
    start: 11404,
    length: 1,
    convRule: rule21
  }, {
    start: 11405,
    length: 1,
    convRule: rule22
  }, {
    start: 11406,
    length: 1,
    convRule: rule21
  }, {
    start: 11407,
    length: 1,
    convRule: rule22
  }, {
    start: 11408,
    length: 1,
    convRule: rule21
  }, {
    start: 11409,
    length: 1,
    convRule: rule22
  }, {
    start: 11410,
    length: 1,
    convRule: rule21
  }, {
    start: 11411,
    length: 1,
    convRule: rule22
  }, {
    start: 11412,
    length: 1,
    convRule: rule21
  }, {
    start: 11413,
    length: 1,
    convRule: rule22
  }, {
    start: 11414,
    length: 1,
    convRule: rule21
  }, {
    start: 11415,
    length: 1,
    convRule: rule22
  }, {
    start: 11416,
    length: 1,
    convRule: rule21
  }, {
    start: 11417,
    length: 1,
    convRule: rule22
  }, {
    start: 11418,
    length: 1,
    convRule: rule21
  }, {
    start: 11419,
    length: 1,
    convRule: rule22
  }, {
    start: 11420,
    length: 1,
    convRule: rule21
  }, {
    start: 11421,
    length: 1,
    convRule: rule22
  }, {
    start: 11422,
    length: 1,
    convRule: rule21
  }, {
    start: 11423,
    length: 1,
    convRule: rule22
  }, {
    start: 11424,
    length: 1,
    convRule: rule21
  }, {
    start: 11425,
    length: 1,
    convRule: rule22
  }, {
    start: 11426,
    length: 1,
    convRule: rule21
  }, {
    start: 11427,
    length: 1,
    convRule: rule22
  }, {
    start: 11428,
    length: 1,
    convRule: rule21
  }, {
    start: 11429,
    length: 1,
    convRule: rule22
  }, {
    start: 11430,
    length: 1,
    convRule: rule21
  }, {
    start: 11431,
    length: 1,
    convRule: rule22
  }, {
    start: 11432,
    length: 1,
    convRule: rule21
  }, {
    start: 11433,
    length: 1,
    convRule: rule22
  }, {
    start: 11434,
    length: 1,
    convRule: rule21
  }, {
    start: 11435,
    length: 1,
    convRule: rule22
  }, {
    start: 11436,
    length: 1,
    convRule: rule21
  }, {
    start: 11437,
    length: 1,
    convRule: rule22
  }, {
    start: 11438,
    length: 1,
    convRule: rule21
  }, {
    start: 11439,
    length: 1,
    convRule: rule22
  }, {
    start: 11440,
    length: 1,
    convRule: rule21
  }, {
    start: 11441,
    length: 1,
    convRule: rule22
  }, {
    start: 11442,
    length: 1,
    convRule: rule21
  }, {
    start: 11443,
    length: 1,
    convRule: rule22
  }, {
    start: 11444,
    length: 1,
    convRule: rule21
  }, {
    start: 11445,
    length: 1,
    convRule: rule22
  }, {
    start: 11446,
    length: 1,
    convRule: rule21
  }, {
    start: 11447,
    length: 1,
    convRule: rule22
  }, {
    start: 11448,
    length: 1,
    convRule: rule21
  }, {
    start: 11449,
    length: 1,
    convRule: rule22
  }, {
    start: 11450,
    length: 1,
    convRule: rule21
  }, {
    start: 11451,
    length: 1,
    convRule: rule22
  }, {
    start: 11452,
    length: 1,
    convRule: rule21
  }, {
    start: 11453,
    length: 1,
    convRule: rule22
  }, {
    start: 11454,
    length: 1,
    convRule: rule21
  }, {
    start: 11455,
    length: 1,
    convRule: rule22
  }, {
    start: 11456,
    length: 1,
    convRule: rule21
  }, {
    start: 11457,
    length: 1,
    convRule: rule22
  }, {
    start: 11458,
    length: 1,
    convRule: rule21
  }, {
    start: 11459,
    length: 1,
    convRule: rule22
  }, {
    start: 11460,
    length: 1,
    convRule: rule21
  }, {
    start: 11461,
    length: 1,
    convRule: rule22
  }, {
    start: 11462,
    length: 1,
    convRule: rule21
  }, {
    start: 11463,
    length: 1,
    convRule: rule22
  }, {
    start: 11464,
    length: 1,
    convRule: rule21
  }, {
    start: 11465,
    length: 1,
    convRule: rule22
  }, {
    start: 11466,
    length: 1,
    convRule: rule21
  }, {
    start: 11467,
    length: 1,
    convRule: rule22
  }, {
    start: 11468,
    length: 1,
    convRule: rule21
  }, {
    start: 11469,
    length: 1,
    convRule: rule22
  }, {
    start: 11470,
    length: 1,
    convRule: rule21
  }, {
    start: 11471,
    length: 1,
    convRule: rule22
  }, {
    start: 11472,
    length: 1,
    convRule: rule21
  }, {
    start: 11473,
    length: 1,
    convRule: rule22
  }, {
    start: 11474,
    length: 1,
    convRule: rule21
  }, {
    start: 11475,
    length: 1,
    convRule: rule22
  }, {
    start: 11476,
    length: 1,
    convRule: rule21
  }, {
    start: 11477,
    length: 1,
    convRule: rule22
  }, {
    start: 11478,
    length: 1,
    convRule: rule21
  }, {
    start: 11479,
    length: 1,
    convRule: rule22
  }, {
    start: 11480,
    length: 1,
    convRule: rule21
  }, {
    start: 11481,
    length: 1,
    convRule: rule22
  }, {
    start: 11482,
    length: 1,
    convRule: rule21
  }, {
    start: 11483,
    length: 1,
    convRule: rule22
  }, {
    start: 11484,
    length: 1,
    convRule: rule21
  }, {
    start: 11485,
    length: 1,
    convRule: rule22
  }, {
    start: 11486,
    length: 1,
    convRule: rule21
  }, {
    start: 11487,
    length: 1,
    convRule: rule22
  }, {
    start: 11488,
    length: 1,
    convRule: rule21
  }, {
    start: 11489,
    length: 1,
    convRule: rule22
  }, {
    start: 11490,
    length: 1,
    convRule: rule21
  }, {
    start: 11491,
    length: 1,
    convRule: rule22
  }, {
    start: 11499,
    length: 1,
    convRule: rule21
  }, {
    start: 11500,
    length: 1,
    convRule: rule22
  }, {
    start: 11501,
    length: 1,
    convRule: rule21
  }, {
    start: 11502,
    length: 1,
    convRule: rule22
  }, {
    start: 11520,
    length: 38,
    convRule: rule160
  }, {
    start: 42560,
    length: 1,
    convRule: rule21
  }, {
    start: 42561,
    length: 1,
    convRule: rule22
  }, {
    start: 42562,
    length: 1,
    convRule: rule21
  }, {
    start: 42563,
    length: 1,
    convRule: rule22
  }, {
    start: 42564,
    length: 1,
    convRule: rule21
  }, {
    start: 42565,
    length: 1,
    convRule: rule22
  }, {
    start: 42566,
    length: 1,
    convRule: rule21
  }, {
    start: 42567,
    length: 1,
    convRule: rule22
  }, {
    start: 42568,
    length: 1,
    convRule: rule21
  }, {
    start: 42569,
    length: 1,
    convRule: rule22
  }, {
    start: 42570,
    length: 1,
    convRule: rule21
  }, {
    start: 42571,
    length: 1,
    convRule: rule22
  }, {
    start: 42572,
    length: 1,
    convRule: rule21
  }, {
    start: 42573,
    length: 1,
    convRule: rule22
  }, {
    start: 42574,
    length: 1,
    convRule: rule21
  }, {
    start: 42575,
    length: 1,
    convRule: rule22
  }, {
    start: 42576,
    length: 1,
    convRule: rule21
  }, {
    start: 42577,
    length: 1,
    convRule: rule22
  }, {
    start: 42578,
    length: 1,
    convRule: rule21
  }, {
    start: 42579,
    length: 1,
    convRule: rule22
  }, {
    start: 42580,
    length: 1,
    convRule: rule21
  }, {
    start: 42581,
    length: 1,
    convRule: rule22
  }, {
    start: 42582,
    length: 1,
    convRule: rule21
  }, {
    start: 42583,
    length: 1,
    convRule: rule22
  }, {
    start: 42584,
    length: 1,
    convRule: rule21
  }, {
    start: 42585,
    length: 1,
    convRule: rule22
  }, {
    start: 42586,
    length: 1,
    convRule: rule21
  }, {
    start: 42587,
    length: 1,
    convRule: rule22
  }, {
    start: 42588,
    length: 1,
    convRule: rule21
  }, {
    start: 42589,
    length: 1,
    convRule: rule22
  }, {
    start: 42590,
    length: 1,
    convRule: rule21
  }, {
    start: 42591,
    length: 1,
    convRule: rule22
  }, {
    start: 42592,
    length: 1,
    convRule: rule21
  }, {
    start: 42593,
    length: 1,
    convRule: rule22
  }, {
    start: 42594,
    length: 1,
    convRule: rule21
  }, {
    start: 42595,
    length: 1,
    convRule: rule22
  }, {
    start: 42596,
    length: 1,
    convRule: rule21
  }, {
    start: 42597,
    length: 1,
    convRule: rule22
  }, {
    start: 42598,
    length: 1,
    convRule: rule21
  }, {
    start: 42599,
    length: 1,
    convRule: rule22
  }, {
    start: 42600,
    length: 1,
    convRule: rule21
  }, {
    start: 42601,
    length: 1,
    convRule: rule22
  }, {
    start: 42602,
    length: 1,
    convRule: rule21
  }, {
    start: 42603,
    length: 1,
    convRule: rule22
  }, {
    start: 42604,
    length: 1,
    convRule: rule21
  }, {
    start: 42605,
    length: 1,
    convRule: rule22
  }, {
    start: 42624,
    length: 1,
    convRule: rule21
  }, {
    start: 42625,
    length: 1,
    convRule: rule22
  }, {
    start: 42626,
    length: 1,
    convRule: rule21
  }, {
    start: 42627,
    length: 1,
    convRule: rule22
  }, {
    start: 42628,
    length: 1,
    convRule: rule21
  }, {
    start: 42629,
    length: 1,
    convRule: rule22
  }, {
    start: 42630,
    length: 1,
    convRule: rule21
  }, {
    start: 42631,
    length: 1,
    convRule: rule22
  }, {
    start: 42632,
    length: 1,
    convRule: rule21
  }, {
    start: 42633,
    length: 1,
    convRule: rule22
  }, {
    start: 42634,
    length: 1,
    convRule: rule21
  }, {
    start: 42635,
    length: 1,
    convRule: rule22
  }, {
    start: 42636,
    length: 1,
    convRule: rule21
  }, {
    start: 42637,
    length: 1,
    convRule: rule22
  }, {
    start: 42638,
    length: 1,
    convRule: rule21
  }, {
    start: 42639,
    length: 1,
    convRule: rule22
  }, {
    start: 42640,
    length: 1,
    convRule: rule21
  }, {
    start: 42641,
    length: 1,
    convRule: rule22
  }, {
    start: 42642,
    length: 1,
    convRule: rule21
  }, {
    start: 42643,
    length: 1,
    convRule: rule22
  }, {
    start: 42644,
    length: 1,
    convRule: rule21
  }, {
    start: 42645,
    length: 1,
    convRule: rule22
  }, {
    start: 42646,
    length: 1,
    convRule: rule21
  }, {
    start: 42647,
    length: 1,
    convRule: rule22
  }, {
    start: 42786,
    length: 1,
    convRule: rule21
  }, {
    start: 42787,
    length: 1,
    convRule: rule22
  }, {
    start: 42788,
    length: 1,
    convRule: rule21
  }, {
    start: 42789,
    length: 1,
    convRule: rule22
  }, {
    start: 42790,
    length: 1,
    convRule: rule21
  }, {
    start: 42791,
    length: 1,
    convRule: rule22
  }, {
    start: 42792,
    length: 1,
    convRule: rule21
  }, {
    start: 42793,
    length: 1,
    convRule: rule22
  }, {
    start: 42794,
    length: 1,
    convRule: rule21
  }, {
    start: 42795,
    length: 1,
    convRule: rule22
  }, {
    start: 42796,
    length: 1,
    convRule: rule21
  }, {
    start: 42797,
    length: 1,
    convRule: rule22
  }, {
    start: 42798,
    length: 1,
    convRule: rule21
  }, {
    start: 42799,
    length: 1,
    convRule: rule22
  }, {
    start: 42802,
    length: 1,
    convRule: rule21
  }, {
    start: 42803,
    length: 1,
    convRule: rule22
  }, {
    start: 42804,
    length: 1,
    convRule: rule21
  }, {
    start: 42805,
    length: 1,
    convRule: rule22
  }, {
    start: 42806,
    length: 1,
    convRule: rule21
  }, {
    start: 42807,
    length: 1,
    convRule: rule22
  }, {
    start: 42808,
    length: 1,
    convRule: rule21
  }, {
    start: 42809,
    length: 1,
    convRule: rule22
  }, {
    start: 42810,
    length: 1,
    convRule: rule21
  }, {
    start: 42811,
    length: 1,
    convRule: rule22
  }, {
    start: 42812,
    length: 1,
    convRule: rule21
  }, {
    start: 42813,
    length: 1,
    convRule: rule22
  }, {
    start: 42814,
    length: 1,
    convRule: rule21
  }, {
    start: 42815,
    length: 1,
    convRule: rule22
  }, {
    start: 42816,
    length: 1,
    convRule: rule21
  }, {
    start: 42817,
    length: 1,
    convRule: rule22
  }, {
    start: 42818,
    length: 1,
    convRule: rule21
  }, {
    start: 42819,
    length: 1,
    convRule: rule22
  }, {
    start: 42820,
    length: 1,
    convRule: rule21
  }, {
    start: 42821,
    length: 1,
    convRule: rule22
  }, {
    start: 42822,
    length: 1,
    convRule: rule21
  }, {
    start: 42823,
    length: 1,
    convRule: rule22
  }, {
    start: 42824,
    length: 1,
    convRule: rule21
  }, {
    start: 42825,
    length: 1,
    convRule: rule22
  }, {
    start: 42826,
    length: 1,
    convRule: rule21
  }, {
    start: 42827,
    length: 1,
    convRule: rule22
  }, {
    start: 42828,
    length: 1,
    convRule: rule21
  }, {
    start: 42829,
    length: 1,
    convRule: rule22
  }, {
    start: 42830,
    length: 1,
    convRule: rule21
  }, {
    start: 42831,
    length: 1,
    convRule: rule22
  }, {
    start: 42832,
    length: 1,
    convRule: rule21
  }, {
    start: 42833,
    length: 1,
    convRule: rule22
  }, {
    start: 42834,
    length: 1,
    convRule: rule21
  }, {
    start: 42835,
    length: 1,
    convRule: rule22
  }, {
    start: 42836,
    length: 1,
    convRule: rule21
  }, {
    start: 42837,
    length: 1,
    convRule: rule22
  }, {
    start: 42838,
    length: 1,
    convRule: rule21
  }, {
    start: 42839,
    length: 1,
    convRule: rule22
  }, {
    start: 42840,
    length: 1,
    convRule: rule21
  }, {
    start: 42841,
    length: 1,
    convRule: rule22
  }, {
    start: 42842,
    length: 1,
    convRule: rule21
  }, {
    start: 42843,
    length: 1,
    convRule: rule22
  }, {
    start: 42844,
    length: 1,
    convRule: rule21
  }, {
    start: 42845,
    length: 1,
    convRule: rule22
  }, {
    start: 42846,
    length: 1,
    convRule: rule21
  }, {
    start: 42847,
    length: 1,
    convRule: rule22
  }, {
    start: 42848,
    length: 1,
    convRule: rule21
  }, {
    start: 42849,
    length: 1,
    convRule: rule22
  }, {
    start: 42850,
    length: 1,
    convRule: rule21
  }, {
    start: 42851,
    length: 1,
    convRule: rule22
  }, {
    start: 42852,
    length: 1,
    convRule: rule21
  }, {
    start: 42853,
    length: 1,
    convRule: rule22
  }, {
    start: 42854,
    length: 1,
    convRule: rule21
  }, {
    start: 42855,
    length: 1,
    convRule: rule22
  }, {
    start: 42856,
    length: 1,
    convRule: rule21
  }, {
    start: 42857,
    length: 1,
    convRule: rule22
  }, {
    start: 42858,
    length: 1,
    convRule: rule21
  }, {
    start: 42859,
    length: 1,
    convRule: rule22
  }, {
    start: 42860,
    length: 1,
    convRule: rule21
  }, {
    start: 42861,
    length: 1,
    convRule: rule22
  }, {
    start: 42862,
    length: 1,
    convRule: rule21
  }, {
    start: 42863,
    length: 1,
    convRule: rule22
  }, {
    start: 42873,
    length: 1,
    convRule: rule21
  }, {
    start: 42874,
    length: 1,
    convRule: rule22
  }, {
    start: 42875,
    length: 1,
    convRule: rule21
  }, {
    start: 42876,
    length: 1,
    convRule: rule22
  }, {
    start: 42877,
    length: 1,
    convRule: rule161
  }, {
    start: 42878,
    length: 1,
    convRule: rule21
  }, {
    start: 42879,
    length: 1,
    convRule: rule22
  }, {
    start: 42880,
    length: 1,
    convRule: rule21
  }, {
    start: 42881,
    length: 1,
    convRule: rule22
  }, {
    start: 42882,
    length: 1,
    convRule: rule21
  }, {
    start: 42883,
    length: 1,
    convRule: rule22
  }, {
    start: 42884,
    length: 1,
    convRule: rule21
  }, {
    start: 42885,
    length: 1,
    convRule: rule22
  }, {
    start: 42886,
    length: 1,
    convRule: rule21
  }, {
    start: 42887,
    length: 1,
    convRule: rule22
  }, {
    start: 42891,
    length: 1,
    convRule: rule21
  }, {
    start: 42892,
    length: 1,
    convRule: rule22
  }, {
    start: 42893,
    length: 1,
    convRule: rule162
  }, {
    start: 42896,
    length: 1,
    convRule: rule21
  }, {
    start: 42897,
    length: 1,
    convRule: rule22
  }, {
    start: 42912,
    length: 1,
    convRule: rule21
  }, {
    start: 42913,
    length: 1,
    convRule: rule22
  }, {
    start: 42914,
    length: 1,
    convRule: rule21
  }, {
    start: 42915,
    length: 1,
    convRule: rule22
  }, {
    start: 42916,
    length: 1,
    convRule: rule21
  }, {
    start: 42917,
    length: 1,
    convRule: rule22
  }, {
    start: 42918,
    length: 1,
    convRule: rule21
  }, {
    start: 42919,
    length: 1,
    convRule: rule22
  }, {
    start: 42920,
    length: 1,
    convRule: rule21
  }, {
    start: 42921,
    length: 1,
    convRule: rule22
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 66560,
    length: 40,
    convRule: rule165
  }, {
    start: 66600,
    length: 40,
    convRule: rule166
  }];

  var bsearch = function bsearch(a) {
    return function (array) {
      return function (size) {
        return function (compare) {
          var go = function go($copy_i) {
            return function ($copy_k) {
              var $tco_var_i = $copy_i;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(i, k) {
                if (i > k) {
                  $tco_done = true;
                  return Data_Maybe.Nothing.value;
                }

                ;

                if (Data_Boolean.otherwise) {
                  var j = Data_Int.floor(Data_Int.toNumber(i + k | 0) / 2.0);
                  var v = compare(a)(array[j]);

                  if (v instanceof Data_Ordering.EQ) {
                    $tco_done = true;
                    return new Data_Maybe.Just(array[j]);
                  }

                  ;

                  if (v instanceof Data_Ordering.GT) {
                    $tco_var_i = j + 1 | 0;
                    $copy_k = k;
                    return;
                  }

                  ;
                  $tco_var_i = i;
                  $copy_k = j - 1 | 0;
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4783, column 5 - line 4789, column 49): " + [i.constructor.name, k.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_i, $copy_k);
              }

              ;
              return $tco_result;
            };
          };

          return go(0)(size);
        };
      };
    };
  };

  var blkCmp = function blkCmp(v) {
    return function (v1) {
      if (v.start >= v1.start && v.start < (v1.start + v1.length | 0)) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (v.start > v1.start) {
        return Data_Ordering.GT.value;
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Ordering.LT.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4760, column 1 - line 4760, column 45): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var getRule = function getRule(blocks) {
    return function (unichar) {
      return function (size) {
        var key = {
          start: unichar,
          length: 1,
          convRule: nullrule
        };
        var maybeCharBlock = bsearch(key)(blocks)(size)(blkCmp);

        if (maybeCharBlock instanceof Data_Maybe.Nothing) {
          return Data_Maybe.Nothing.value;
        }

        ;

        if (maybeCharBlock instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(maybeCharBlock.value0.convRule);
        }

        ;
        throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4773, column 8 - line 4775, column 62): " + [maybeCharBlock.constructor.name]);
      };
    };
  };

  var caseConv = function caseConv(f) {
    return function ($$char) {
      var maybeConversionRule = getRule(convchars)($$char)(numConvBlocks);

      if (maybeConversionRule instanceof Data_Maybe.Nothing) {
        return $$char;
      }

      ;

      if (maybeConversionRule instanceof Data_Maybe.Just) {
        return $$char + f(maybeConversionRule.value0) | 0;
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4850, column 8 - line 4852, column 55): " + [maybeConversionRule.constructor.name]);
    };
  };

  var uTowlower = caseConv(function (v) {
    return v.lowdist;
  });
  var uTowupper = caseConv(function (v) {
    return v.updist;
  });

  var checkAttrS = function checkAttrS(categories) {
    return function ($$char) {
      var maybeConversionRule = getRule(spacechars)($$char)(numSpaceBlocks);

      if (maybeConversionRule instanceof Data_Maybe.Nothing) {
        return false;
      }

      ;

      if (maybeConversionRule instanceof Data_Maybe.Just) {
        return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4807, column 8 - line 4809, column 92): " + [maybeConversionRule.constructor.name]);
    };
  };

  var uIswspace = checkAttrS([gencatZS]);
  var allchars = [{
    start: 0,
    length: 32,
    convRule: rule0
  }, {
    start: 32,
    length: 1,
    convRule: rule1
  }, {
    start: 33,
    length: 3,
    convRule: rule2
  }, {
    start: 36,
    length: 1,
    convRule: rule3
  }, {
    start: 37,
    length: 3,
    convRule: rule2
  }, {
    start: 40,
    length: 1,
    convRule: rule4
  }, {
    start: 41,
    length: 1,
    convRule: rule5
  }, {
    start: 42,
    length: 1,
    convRule: rule2
  }, {
    start: 43,
    length: 1,
    convRule: rule6
  }, {
    start: 44,
    length: 1,
    convRule: rule2
  }, {
    start: 45,
    length: 1,
    convRule: rule7
  }, {
    start: 46,
    length: 2,
    convRule: rule2
  }, {
    start: 48,
    length: 10,
    convRule: rule8
  }, {
    start: 58,
    length: 2,
    convRule: rule2
  }, {
    start: 60,
    length: 3,
    convRule: rule6
  }, {
    start: 63,
    length: 2,
    convRule: rule2
  }, {
    start: 65,
    length: 26,
    convRule: rule9
  }, {
    start: 91,
    length: 1,
    convRule: rule4
  }, {
    start: 92,
    length: 1,
    convRule: rule2
  }, {
    start: 93,
    length: 1,
    convRule: rule5
  }, {
    start: 94,
    length: 1,
    convRule: rule10
  }, {
    start: 95,
    length: 1,
    convRule: rule11
  }, {
    start: 96,
    length: 1,
    convRule: rule10
  }, {
    start: 97,
    length: 26,
    convRule: rule12
  }, {
    start: 123,
    length: 1,
    convRule: rule4
  }, {
    start: 124,
    length: 1,
    convRule: rule6
  }, {
    start: 125,
    length: 1,
    convRule: rule5
  }, {
    start: 126,
    length: 1,
    convRule: rule6
  }, {
    start: 127,
    length: 33,
    convRule: rule0
  }, {
    start: 160,
    length: 1,
    convRule: rule1
  }, {
    start: 161,
    length: 1,
    convRule: rule2
  }, {
    start: 162,
    length: 4,
    convRule: rule3
  }, {
    start: 166,
    length: 2,
    convRule: rule13
  }, {
    start: 168,
    length: 1,
    convRule: rule10
  }, {
    start: 169,
    length: 1,
    convRule: rule13
  }, {
    start: 170,
    length: 1,
    convRule: rule14
  }, {
    start: 171,
    length: 1,
    convRule: rule15
  }, {
    start: 172,
    length: 1,
    convRule: rule6
  }, {
    start: 173,
    length: 1,
    convRule: rule16
  }, {
    start: 174,
    length: 1,
    convRule: rule13
  }, {
    start: 175,
    length: 1,
    convRule: rule10
  }, {
    start: 176,
    length: 1,
    convRule: rule13
  }, {
    start: 177,
    length: 1,
    convRule: rule6
  }, {
    start: 178,
    length: 2,
    convRule: rule17
  }, {
    start: 180,
    length: 1,
    convRule: rule10
  }, {
    start: 181,
    length: 1,
    convRule: rule18
  }, {
    start: 182,
    length: 1,
    convRule: rule13
  }, {
    start: 183,
    length: 1,
    convRule: rule2
  }, {
    start: 184,
    length: 1,
    convRule: rule10
  }, {
    start: 185,
    length: 1,
    convRule: rule17
  }, {
    start: 186,
    length: 1,
    convRule: rule14
  }, {
    start: 187,
    length: 1,
    convRule: rule19
  }, {
    start: 188,
    length: 3,
    convRule: rule17
  }, {
    start: 191,
    length: 1,
    convRule: rule2
  }, {
    start: 192,
    length: 23,
    convRule: rule9
  }, {
    start: 215,
    length: 1,
    convRule: rule6
  }, {
    start: 216,
    length: 7,
    convRule: rule9
  }, {
    start: 223,
    length: 1,
    convRule: rule14
  }, {
    start: 224,
    length: 23,
    convRule: rule12
  }, {
    start: 247,
    length: 1,
    convRule: rule6
  }, {
    start: 248,
    length: 7,
    convRule: rule12
  }, {
    start: 255,
    length: 1,
    convRule: rule20
  }, {
    start: 256,
    length: 1,
    convRule: rule21
  }, {
    start: 257,
    length: 1,
    convRule: rule22
  }, {
    start: 258,
    length: 1,
    convRule: rule21
  }, {
    start: 259,
    length: 1,
    convRule: rule22
  }, {
    start: 260,
    length: 1,
    convRule: rule21
  }, {
    start: 261,
    length: 1,
    convRule: rule22
  }, {
    start: 262,
    length: 1,
    convRule: rule21
  }, {
    start: 263,
    length: 1,
    convRule: rule22
  }, {
    start: 264,
    length: 1,
    convRule: rule21
  }, {
    start: 265,
    length: 1,
    convRule: rule22
  }, {
    start: 266,
    length: 1,
    convRule: rule21
  }, {
    start: 267,
    length: 1,
    convRule: rule22
  }, {
    start: 268,
    length: 1,
    convRule: rule21
  }, {
    start: 269,
    length: 1,
    convRule: rule22
  }, {
    start: 270,
    length: 1,
    convRule: rule21
  }, {
    start: 271,
    length: 1,
    convRule: rule22
  }, {
    start: 272,
    length: 1,
    convRule: rule21
  }, {
    start: 273,
    length: 1,
    convRule: rule22
  }, {
    start: 274,
    length: 1,
    convRule: rule21
  }, {
    start: 275,
    length: 1,
    convRule: rule22
  }, {
    start: 276,
    length: 1,
    convRule: rule21
  }, {
    start: 277,
    length: 1,
    convRule: rule22
  }, {
    start: 278,
    length: 1,
    convRule: rule21
  }, {
    start: 279,
    length: 1,
    convRule: rule22
  }, {
    start: 280,
    length: 1,
    convRule: rule21
  }, {
    start: 281,
    length: 1,
    convRule: rule22
  }, {
    start: 282,
    length: 1,
    convRule: rule21
  }, {
    start: 283,
    length: 1,
    convRule: rule22
  }, {
    start: 284,
    length: 1,
    convRule: rule21
  }, {
    start: 285,
    length: 1,
    convRule: rule22
  }, {
    start: 286,
    length: 1,
    convRule: rule21
  }, {
    start: 287,
    length: 1,
    convRule: rule22
  }, {
    start: 288,
    length: 1,
    convRule: rule21
  }, {
    start: 289,
    length: 1,
    convRule: rule22
  }, {
    start: 290,
    length: 1,
    convRule: rule21
  }, {
    start: 291,
    length: 1,
    convRule: rule22
  }, {
    start: 292,
    length: 1,
    convRule: rule21
  }, {
    start: 293,
    length: 1,
    convRule: rule22
  }, {
    start: 294,
    length: 1,
    convRule: rule21
  }, {
    start: 295,
    length: 1,
    convRule: rule22
  }, {
    start: 296,
    length: 1,
    convRule: rule21
  }, {
    start: 297,
    length: 1,
    convRule: rule22
  }, {
    start: 298,
    length: 1,
    convRule: rule21
  }, {
    start: 299,
    length: 1,
    convRule: rule22
  }, {
    start: 300,
    length: 1,
    convRule: rule21
  }, {
    start: 301,
    length: 1,
    convRule: rule22
  }, {
    start: 302,
    length: 1,
    convRule: rule21
  }, {
    start: 303,
    length: 1,
    convRule: rule22
  }, {
    start: 304,
    length: 1,
    convRule: rule23
  }, {
    start: 305,
    length: 1,
    convRule: rule24
  }, {
    start: 306,
    length: 1,
    convRule: rule21
  }, {
    start: 307,
    length: 1,
    convRule: rule22
  }, {
    start: 308,
    length: 1,
    convRule: rule21
  }, {
    start: 309,
    length: 1,
    convRule: rule22
  }, {
    start: 310,
    length: 1,
    convRule: rule21
  }, {
    start: 311,
    length: 1,
    convRule: rule22
  }, {
    start: 312,
    length: 1,
    convRule: rule14
  }, {
    start: 313,
    length: 1,
    convRule: rule21
  }, {
    start: 314,
    length: 1,
    convRule: rule22
  }, {
    start: 315,
    length: 1,
    convRule: rule21
  }, {
    start: 316,
    length: 1,
    convRule: rule22
  }, {
    start: 317,
    length: 1,
    convRule: rule21
  }, {
    start: 318,
    length: 1,
    convRule: rule22
  }, {
    start: 319,
    length: 1,
    convRule: rule21
  }, {
    start: 320,
    length: 1,
    convRule: rule22
  }, {
    start: 321,
    length: 1,
    convRule: rule21
  }, {
    start: 322,
    length: 1,
    convRule: rule22
  }, {
    start: 323,
    length: 1,
    convRule: rule21
  }, {
    start: 324,
    length: 1,
    convRule: rule22
  }, {
    start: 325,
    length: 1,
    convRule: rule21
  }, {
    start: 326,
    length: 1,
    convRule: rule22
  }, {
    start: 327,
    length: 1,
    convRule: rule21
  }, {
    start: 328,
    length: 1,
    convRule: rule22
  }, {
    start: 329,
    length: 1,
    convRule: rule14
  }, {
    start: 330,
    length: 1,
    convRule: rule21
  }, {
    start: 331,
    length: 1,
    convRule: rule22
  }, {
    start: 332,
    length: 1,
    convRule: rule21
  }, {
    start: 333,
    length: 1,
    convRule: rule22
  }, {
    start: 334,
    length: 1,
    convRule: rule21
  }, {
    start: 335,
    length: 1,
    convRule: rule22
  }, {
    start: 336,
    length: 1,
    convRule: rule21
  }, {
    start: 337,
    length: 1,
    convRule: rule22
  }, {
    start: 338,
    length: 1,
    convRule: rule21
  }, {
    start: 339,
    length: 1,
    convRule: rule22
  }, {
    start: 340,
    length: 1,
    convRule: rule21
  }, {
    start: 341,
    length: 1,
    convRule: rule22
  }, {
    start: 342,
    length: 1,
    convRule: rule21
  }, {
    start: 343,
    length: 1,
    convRule: rule22
  }, {
    start: 344,
    length: 1,
    convRule: rule21
  }, {
    start: 345,
    length: 1,
    convRule: rule22
  }, {
    start: 346,
    length: 1,
    convRule: rule21
  }, {
    start: 347,
    length: 1,
    convRule: rule22
  }, {
    start: 348,
    length: 1,
    convRule: rule21
  }, {
    start: 349,
    length: 1,
    convRule: rule22
  }, {
    start: 350,
    length: 1,
    convRule: rule21
  }, {
    start: 351,
    length: 1,
    convRule: rule22
  }, {
    start: 352,
    length: 1,
    convRule: rule21
  }, {
    start: 353,
    length: 1,
    convRule: rule22
  }, {
    start: 354,
    length: 1,
    convRule: rule21
  }, {
    start: 355,
    length: 1,
    convRule: rule22
  }, {
    start: 356,
    length: 1,
    convRule: rule21
  }, {
    start: 357,
    length: 1,
    convRule: rule22
  }, {
    start: 358,
    length: 1,
    convRule: rule21
  }, {
    start: 359,
    length: 1,
    convRule: rule22
  }, {
    start: 360,
    length: 1,
    convRule: rule21
  }, {
    start: 361,
    length: 1,
    convRule: rule22
  }, {
    start: 362,
    length: 1,
    convRule: rule21
  }, {
    start: 363,
    length: 1,
    convRule: rule22
  }, {
    start: 364,
    length: 1,
    convRule: rule21
  }, {
    start: 365,
    length: 1,
    convRule: rule22
  }, {
    start: 366,
    length: 1,
    convRule: rule21
  }, {
    start: 367,
    length: 1,
    convRule: rule22
  }, {
    start: 368,
    length: 1,
    convRule: rule21
  }, {
    start: 369,
    length: 1,
    convRule: rule22
  }, {
    start: 370,
    length: 1,
    convRule: rule21
  }, {
    start: 371,
    length: 1,
    convRule: rule22
  }, {
    start: 372,
    length: 1,
    convRule: rule21
  }, {
    start: 373,
    length: 1,
    convRule: rule22
  }, {
    start: 374,
    length: 1,
    convRule: rule21
  }, {
    start: 375,
    length: 1,
    convRule: rule22
  }, {
    start: 376,
    length: 1,
    convRule: rule25
  }, {
    start: 377,
    length: 1,
    convRule: rule21
  }, {
    start: 378,
    length: 1,
    convRule: rule22
  }, {
    start: 379,
    length: 1,
    convRule: rule21
  }, {
    start: 380,
    length: 1,
    convRule: rule22
  }, {
    start: 381,
    length: 1,
    convRule: rule21
  }, {
    start: 382,
    length: 1,
    convRule: rule22
  }, {
    start: 383,
    length: 1,
    convRule: rule26
  }, {
    start: 384,
    length: 1,
    convRule: rule27
  }, {
    start: 385,
    length: 1,
    convRule: rule28
  }, {
    start: 386,
    length: 1,
    convRule: rule21
  }, {
    start: 387,
    length: 1,
    convRule: rule22
  }, {
    start: 388,
    length: 1,
    convRule: rule21
  }, {
    start: 389,
    length: 1,
    convRule: rule22
  }, {
    start: 390,
    length: 1,
    convRule: rule29
  }, {
    start: 391,
    length: 1,
    convRule: rule21
  }, {
    start: 392,
    length: 1,
    convRule: rule22
  }, {
    start: 393,
    length: 2,
    convRule: rule30
  }, {
    start: 395,
    length: 1,
    convRule: rule21
  }, {
    start: 396,
    length: 1,
    convRule: rule22
  }, {
    start: 397,
    length: 1,
    convRule: rule14
  }, {
    start: 398,
    length: 1,
    convRule: rule31
  }, {
    start: 399,
    length: 1,
    convRule: rule32
  }, {
    start: 400,
    length: 1,
    convRule: rule33
  }, {
    start: 401,
    length: 1,
    convRule: rule21
  }, {
    start: 402,
    length: 1,
    convRule: rule22
  }, {
    start: 403,
    length: 1,
    convRule: rule30
  }, {
    start: 404,
    length: 1,
    convRule: rule34
  }, {
    start: 405,
    length: 1,
    convRule: rule35
  }, {
    start: 406,
    length: 1,
    convRule: rule36
  }, {
    start: 407,
    length: 1,
    convRule: rule37
  }, {
    start: 408,
    length: 1,
    convRule: rule21
  }, {
    start: 409,
    length: 1,
    convRule: rule22
  }, {
    start: 410,
    length: 1,
    convRule: rule38
  }, {
    start: 411,
    length: 1,
    convRule: rule14
  }, {
    start: 412,
    length: 1,
    convRule: rule36
  }, {
    start: 413,
    length: 1,
    convRule: rule39
  }, {
    start: 414,
    length: 1,
    convRule: rule40
  }, {
    start: 415,
    length: 1,
    convRule: rule41
  }, {
    start: 416,
    length: 1,
    convRule: rule21
  }, {
    start: 417,
    length: 1,
    convRule: rule22
  }, {
    start: 418,
    length: 1,
    convRule: rule21
  }, {
    start: 419,
    length: 1,
    convRule: rule22
  }, {
    start: 420,
    length: 1,
    convRule: rule21
  }, {
    start: 421,
    length: 1,
    convRule: rule22
  }, {
    start: 422,
    length: 1,
    convRule: rule42
  }, {
    start: 423,
    length: 1,
    convRule: rule21
  }, {
    start: 424,
    length: 1,
    convRule: rule22
  }, {
    start: 425,
    length: 1,
    convRule: rule42
  }, {
    start: 426,
    length: 2,
    convRule: rule14
  }, {
    start: 428,
    length: 1,
    convRule: rule21
  }, {
    start: 429,
    length: 1,
    convRule: rule22
  }, {
    start: 430,
    length: 1,
    convRule: rule42
  }, {
    start: 431,
    length: 1,
    convRule: rule21
  }, {
    start: 432,
    length: 1,
    convRule: rule22
  }, {
    start: 433,
    length: 2,
    convRule: rule43
  }, {
    start: 435,
    length: 1,
    convRule: rule21
  }, {
    start: 436,
    length: 1,
    convRule: rule22
  }, {
    start: 437,
    length: 1,
    convRule: rule21
  }, {
    start: 438,
    length: 1,
    convRule: rule22
  }, {
    start: 439,
    length: 1,
    convRule: rule44
  }, {
    start: 440,
    length: 1,
    convRule: rule21
  }, {
    start: 441,
    length: 1,
    convRule: rule22
  }, {
    start: 442,
    length: 1,
    convRule: rule14
  }, {
    start: 443,
    length: 1,
    convRule: rule45
  }, {
    start: 444,
    length: 1,
    convRule: rule21
  }, {
    start: 445,
    length: 1,
    convRule: rule22
  }, {
    start: 446,
    length: 1,
    convRule: rule14
  }, {
    start: 447,
    length: 1,
    convRule: rule46
  }, {
    start: 448,
    length: 4,
    convRule: rule45
  }, {
    start: 452,
    length: 1,
    convRule: rule47
  }, {
    start: 453,
    length: 1,
    convRule: rule48
  }, {
    start: 454,
    length: 1,
    convRule: rule49
  }, {
    start: 455,
    length: 1,
    convRule: rule47
  }, {
    start: 456,
    length: 1,
    convRule: rule48
  }, {
    start: 457,
    length: 1,
    convRule: rule49
  }, {
    start: 458,
    length: 1,
    convRule: rule47
  }, {
    start: 459,
    length: 1,
    convRule: rule48
  }, {
    start: 460,
    length: 1,
    convRule: rule49
  }, {
    start: 461,
    length: 1,
    convRule: rule21
  }, {
    start: 462,
    length: 1,
    convRule: rule22
  }, {
    start: 463,
    length: 1,
    convRule: rule21
  }, {
    start: 464,
    length: 1,
    convRule: rule22
  }, {
    start: 465,
    length: 1,
    convRule: rule21
  }, {
    start: 466,
    length: 1,
    convRule: rule22
  }, {
    start: 467,
    length: 1,
    convRule: rule21
  }, {
    start: 468,
    length: 1,
    convRule: rule22
  }, {
    start: 469,
    length: 1,
    convRule: rule21
  }, {
    start: 470,
    length: 1,
    convRule: rule22
  }, {
    start: 471,
    length: 1,
    convRule: rule21
  }, {
    start: 472,
    length: 1,
    convRule: rule22
  }, {
    start: 473,
    length: 1,
    convRule: rule21
  }, {
    start: 474,
    length: 1,
    convRule: rule22
  }, {
    start: 475,
    length: 1,
    convRule: rule21
  }, {
    start: 476,
    length: 1,
    convRule: rule22
  }, {
    start: 477,
    length: 1,
    convRule: rule50
  }, {
    start: 478,
    length: 1,
    convRule: rule21
  }, {
    start: 479,
    length: 1,
    convRule: rule22
  }, {
    start: 480,
    length: 1,
    convRule: rule21
  }, {
    start: 481,
    length: 1,
    convRule: rule22
  }, {
    start: 482,
    length: 1,
    convRule: rule21
  }, {
    start: 483,
    length: 1,
    convRule: rule22
  }, {
    start: 484,
    length: 1,
    convRule: rule21
  }, {
    start: 485,
    length: 1,
    convRule: rule22
  }, {
    start: 486,
    length: 1,
    convRule: rule21
  }, {
    start: 487,
    length: 1,
    convRule: rule22
  }, {
    start: 488,
    length: 1,
    convRule: rule21
  }, {
    start: 489,
    length: 1,
    convRule: rule22
  }, {
    start: 490,
    length: 1,
    convRule: rule21
  }, {
    start: 491,
    length: 1,
    convRule: rule22
  }, {
    start: 492,
    length: 1,
    convRule: rule21
  }, {
    start: 493,
    length: 1,
    convRule: rule22
  }, {
    start: 494,
    length: 1,
    convRule: rule21
  }, {
    start: 495,
    length: 1,
    convRule: rule22
  }, {
    start: 496,
    length: 1,
    convRule: rule14
  }, {
    start: 497,
    length: 1,
    convRule: rule47
  }, {
    start: 498,
    length: 1,
    convRule: rule48
  }, {
    start: 499,
    length: 1,
    convRule: rule49
  }, {
    start: 500,
    length: 1,
    convRule: rule21
  }, {
    start: 501,
    length: 1,
    convRule: rule22
  }, {
    start: 502,
    length: 1,
    convRule: rule51
  }, {
    start: 503,
    length: 1,
    convRule: rule52
  }, {
    start: 504,
    length: 1,
    convRule: rule21
  }, {
    start: 505,
    length: 1,
    convRule: rule22
  }, {
    start: 506,
    length: 1,
    convRule: rule21
  }, {
    start: 507,
    length: 1,
    convRule: rule22
  }, {
    start: 508,
    length: 1,
    convRule: rule21
  }, {
    start: 509,
    length: 1,
    convRule: rule22
  }, {
    start: 510,
    length: 1,
    convRule: rule21
  }, {
    start: 511,
    length: 1,
    convRule: rule22
  }, {
    start: 512,
    length: 1,
    convRule: rule21
  }, {
    start: 513,
    length: 1,
    convRule: rule22
  }, {
    start: 514,
    length: 1,
    convRule: rule21
  }, {
    start: 515,
    length: 1,
    convRule: rule22
  }, {
    start: 516,
    length: 1,
    convRule: rule21
  }, {
    start: 517,
    length: 1,
    convRule: rule22
  }, {
    start: 518,
    length: 1,
    convRule: rule21
  }, {
    start: 519,
    length: 1,
    convRule: rule22
  }, {
    start: 520,
    length: 1,
    convRule: rule21
  }, {
    start: 521,
    length: 1,
    convRule: rule22
  }, {
    start: 522,
    length: 1,
    convRule: rule21
  }, {
    start: 523,
    length: 1,
    convRule: rule22
  }, {
    start: 524,
    length: 1,
    convRule: rule21
  }, {
    start: 525,
    length: 1,
    convRule: rule22
  }, {
    start: 526,
    length: 1,
    convRule: rule21
  }, {
    start: 527,
    length: 1,
    convRule: rule22
  }, {
    start: 528,
    length: 1,
    convRule: rule21
  }, {
    start: 529,
    length: 1,
    convRule: rule22
  }, {
    start: 530,
    length: 1,
    convRule: rule21
  }, {
    start: 531,
    length: 1,
    convRule: rule22
  }, {
    start: 532,
    length: 1,
    convRule: rule21
  }, {
    start: 533,
    length: 1,
    convRule: rule22
  }, {
    start: 534,
    length: 1,
    convRule: rule21
  }, {
    start: 535,
    length: 1,
    convRule: rule22
  }, {
    start: 536,
    length: 1,
    convRule: rule21
  }, {
    start: 537,
    length: 1,
    convRule: rule22
  }, {
    start: 538,
    length: 1,
    convRule: rule21
  }, {
    start: 539,
    length: 1,
    convRule: rule22
  }, {
    start: 540,
    length: 1,
    convRule: rule21
  }, {
    start: 541,
    length: 1,
    convRule: rule22
  }, {
    start: 542,
    length: 1,
    convRule: rule21
  }, {
    start: 543,
    length: 1,
    convRule: rule22
  }, {
    start: 544,
    length: 1,
    convRule: rule53
  }, {
    start: 545,
    length: 1,
    convRule: rule14
  }, {
    start: 546,
    length: 1,
    convRule: rule21
  }, {
    start: 547,
    length: 1,
    convRule: rule22
  }, {
    start: 548,
    length: 1,
    convRule: rule21
  }, {
    start: 549,
    length: 1,
    convRule: rule22
  }, {
    start: 550,
    length: 1,
    convRule: rule21
  }, {
    start: 551,
    length: 1,
    convRule: rule22
  }, {
    start: 552,
    length: 1,
    convRule: rule21
  }, {
    start: 553,
    length: 1,
    convRule: rule22
  }, {
    start: 554,
    length: 1,
    convRule: rule21
  }, {
    start: 555,
    length: 1,
    convRule: rule22
  }, {
    start: 556,
    length: 1,
    convRule: rule21
  }, {
    start: 557,
    length: 1,
    convRule: rule22
  }, {
    start: 558,
    length: 1,
    convRule: rule21
  }, {
    start: 559,
    length: 1,
    convRule: rule22
  }, {
    start: 560,
    length: 1,
    convRule: rule21
  }, {
    start: 561,
    length: 1,
    convRule: rule22
  }, {
    start: 562,
    length: 1,
    convRule: rule21
  }, {
    start: 563,
    length: 1,
    convRule: rule22
  }, {
    start: 564,
    length: 6,
    convRule: rule14
  }, {
    start: 570,
    length: 1,
    convRule: rule54
  }, {
    start: 571,
    length: 1,
    convRule: rule21
  }, {
    start: 572,
    length: 1,
    convRule: rule22
  }, {
    start: 573,
    length: 1,
    convRule: rule55
  }, {
    start: 574,
    length: 1,
    convRule: rule56
  }, {
    start: 575,
    length: 2,
    convRule: rule57
  }, {
    start: 577,
    length: 1,
    convRule: rule21
  }, {
    start: 578,
    length: 1,
    convRule: rule22
  }, {
    start: 579,
    length: 1,
    convRule: rule58
  }, {
    start: 580,
    length: 1,
    convRule: rule59
  }, {
    start: 581,
    length: 1,
    convRule: rule60
  }, {
    start: 582,
    length: 1,
    convRule: rule21
  }, {
    start: 583,
    length: 1,
    convRule: rule22
  }, {
    start: 584,
    length: 1,
    convRule: rule21
  }, {
    start: 585,
    length: 1,
    convRule: rule22
  }, {
    start: 586,
    length: 1,
    convRule: rule21
  }, {
    start: 587,
    length: 1,
    convRule: rule22
  }, {
    start: 588,
    length: 1,
    convRule: rule21
  }, {
    start: 589,
    length: 1,
    convRule: rule22
  }, {
    start: 590,
    length: 1,
    convRule: rule21
  }, {
    start: 591,
    length: 1,
    convRule: rule22
  }, {
    start: 592,
    length: 1,
    convRule: rule61
  }, {
    start: 593,
    length: 1,
    convRule: rule62
  }, {
    start: 594,
    length: 1,
    convRule: rule63
  }, {
    start: 595,
    length: 1,
    convRule: rule64
  }, {
    start: 596,
    length: 1,
    convRule: rule65
  }, {
    start: 597,
    length: 1,
    convRule: rule14
  }, {
    start: 598,
    length: 2,
    convRule: rule66
  }, {
    start: 600,
    length: 1,
    convRule: rule14
  }, {
    start: 601,
    length: 1,
    convRule: rule67
  }, {
    start: 602,
    length: 1,
    convRule: rule14
  }, {
    start: 603,
    length: 1,
    convRule: rule68
  }, {
    start: 604,
    length: 4,
    convRule: rule14
  }, {
    start: 608,
    length: 1,
    convRule: rule66
  }, {
    start: 609,
    length: 2,
    convRule: rule14
  }, {
    start: 611,
    length: 1,
    convRule: rule69
  }, {
    start: 612,
    length: 1,
    convRule: rule14
  }, {
    start: 613,
    length: 1,
    convRule: rule70
  }, {
    start: 614,
    length: 2,
    convRule: rule14
  }, {
    start: 616,
    length: 1,
    convRule: rule71
  }, {
    start: 617,
    length: 1,
    convRule: rule72
  }, {
    start: 618,
    length: 1,
    convRule: rule14
  }, {
    start: 619,
    length: 1,
    convRule: rule73
  }, {
    start: 620,
    length: 3,
    convRule: rule14
  }, {
    start: 623,
    length: 1,
    convRule: rule72
  }, {
    start: 624,
    length: 1,
    convRule: rule14
  }, {
    start: 625,
    length: 1,
    convRule: rule74
  }, {
    start: 626,
    length: 1,
    convRule: rule75
  }, {
    start: 627,
    length: 2,
    convRule: rule14
  }, {
    start: 629,
    length: 1,
    convRule: rule76
  }, {
    start: 630,
    length: 7,
    convRule: rule14
  }, {
    start: 637,
    length: 1,
    convRule: rule77
  }, {
    start: 638,
    length: 2,
    convRule: rule14
  }, {
    start: 640,
    length: 1,
    convRule: rule78
  }, {
    start: 641,
    length: 2,
    convRule: rule14
  }, {
    start: 643,
    length: 1,
    convRule: rule78
  }, {
    start: 644,
    length: 4,
    convRule: rule14
  }, {
    start: 648,
    length: 1,
    convRule: rule78
  }, {
    start: 649,
    length: 1,
    convRule: rule79
  }, {
    start: 650,
    length: 2,
    convRule: rule80
  }, {
    start: 652,
    length: 1,
    convRule: rule81
  }, {
    start: 653,
    length: 5,
    convRule: rule14
  }, {
    start: 658,
    length: 1,
    convRule: rule82
  }, {
    start: 659,
    length: 1,
    convRule: rule14
  }, {
    start: 660,
    length: 1,
    convRule: rule45
  }, {
    start: 661,
    length: 27,
    convRule: rule14
  }, {
    start: 688,
    length: 18,
    convRule: rule83
  }, {
    start: 706,
    length: 4,
    convRule: rule10
  }, {
    start: 710,
    length: 12,
    convRule: rule83
  }, {
    start: 722,
    length: 14,
    convRule: rule10
  }, {
    start: 736,
    length: 5,
    convRule: rule83
  }, {
    start: 741,
    length: 7,
    convRule: rule10
  }, {
    start: 748,
    length: 1,
    convRule: rule83
  }, {
    start: 749,
    length: 1,
    convRule: rule10
  }, {
    start: 750,
    length: 1,
    convRule: rule83
  }, {
    start: 751,
    length: 17,
    convRule: rule10
  }, {
    start: 768,
    length: 69,
    convRule: rule84
  }, {
    start: 837,
    length: 1,
    convRule: rule85
  }, {
    start: 838,
    length: 42,
    convRule: rule84
  }, {
    start: 880,
    length: 1,
    convRule: rule21
  }, {
    start: 881,
    length: 1,
    convRule: rule22
  }, {
    start: 882,
    length: 1,
    convRule: rule21
  }, {
    start: 883,
    length: 1,
    convRule: rule22
  }, {
    start: 884,
    length: 1,
    convRule: rule83
  }, {
    start: 885,
    length: 1,
    convRule: rule10
  }, {
    start: 886,
    length: 1,
    convRule: rule21
  }, {
    start: 887,
    length: 1,
    convRule: rule22
  }, {
    start: 890,
    length: 1,
    convRule: rule83
  }, {
    start: 891,
    length: 3,
    convRule: rule40
  }, {
    start: 894,
    length: 1,
    convRule: rule2
  }, {
    start: 900,
    length: 2,
    convRule: rule10
  }, {
    start: 902,
    length: 1,
    convRule: rule86
  }, {
    start: 903,
    length: 1,
    convRule: rule2
  }, {
    start: 904,
    length: 3,
    convRule: rule87
  }, {
    start: 908,
    length: 1,
    convRule: rule88
  }, {
    start: 910,
    length: 2,
    convRule: rule89
  }, {
    start: 912,
    length: 1,
    convRule: rule14
  }, {
    start: 913,
    length: 17,
    convRule: rule9
  }, {
    start: 931,
    length: 9,
    convRule: rule9
  }, {
    start: 940,
    length: 1,
    convRule: rule90
  }, {
    start: 941,
    length: 3,
    convRule: rule91
  }, {
    start: 944,
    length: 1,
    convRule: rule14
  }, {
    start: 945,
    length: 17,
    convRule: rule12
  }, {
    start: 962,
    length: 1,
    convRule: rule92
  }, {
    start: 963,
    length: 9,
    convRule: rule12
  }, {
    start: 972,
    length: 1,
    convRule: rule93
  }, {
    start: 973,
    length: 2,
    convRule: rule94
  }, {
    start: 975,
    length: 1,
    convRule: rule95
  }, {
    start: 976,
    length: 1,
    convRule: rule96
  }, {
    start: 977,
    length: 1,
    convRule: rule97
  }, {
    start: 978,
    length: 3,
    convRule: rule98
  }, {
    start: 981,
    length: 1,
    convRule: rule99
  }, {
    start: 982,
    length: 1,
    convRule: rule100
  }, {
    start: 983,
    length: 1,
    convRule: rule101
  }, {
    start: 984,
    length: 1,
    convRule: rule21
  }, {
    start: 985,
    length: 1,
    convRule: rule22
  }, {
    start: 986,
    length: 1,
    convRule: rule21
  }, {
    start: 987,
    length: 1,
    convRule: rule22
  }, {
    start: 988,
    length: 1,
    convRule: rule21
  }, {
    start: 989,
    length: 1,
    convRule: rule22
  }, {
    start: 990,
    length: 1,
    convRule: rule21
  }, {
    start: 991,
    length: 1,
    convRule: rule22
  }, {
    start: 992,
    length: 1,
    convRule: rule21
  }, {
    start: 993,
    length: 1,
    convRule: rule22
  }, {
    start: 994,
    length: 1,
    convRule: rule21
  }, {
    start: 995,
    length: 1,
    convRule: rule22
  }, {
    start: 996,
    length: 1,
    convRule: rule21
  }, {
    start: 997,
    length: 1,
    convRule: rule22
  }, {
    start: 998,
    length: 1,
    convRule: rule21
  }, {
    start: 999,
    length: 1,
    convRule: rule22
  }, {
    start: 1000,
    length: 1,
    convRule: rule21
  }, {
    start: 1001,
    length: 1,
    convRule: rule22
  }, {
    start: 1002,
    length: 1,
    convRule: rule21
  }, {
    start: 1003,
    length: 1,
    convRule: rule22
  }, {
    start: 1004,
    length: 1,
    convRule: rule21
  }, {
    start: 1005,
    length: 1,
    convRule: rule22
  }, {
    start: 1006,
    length: 1,
    convRule: rule21
  }, {
    start: 1007,
    length: 1,
    convRule: rule22
  }, {
    start: 1008,
    length: 1,
    convRule: rule102
  }, {
    start: 1009,
    length: 1,
    convRule: rule103
  }, {
    start: 1010,
    length: 1,
    convRule: rule104
  }, {
    start: 1011,
    length: 1,
    convRule: rule14
  }, {
    start: 1012,
    length: 1,
    convRule: rule105
  }, {
    start: 1013,
    length: 1,
    convRule: rule106
  }, {
    start: 1014,
    length: 1,
    convRule: rule6
  }, {
    start: 1015,
    length: 1,
    convRule: rule21
  }, {
    start: 1016,
    length: 1,
    convRule: rule22
  }, {
    start: 1017,
    length: 1,
    convRule: rule107
  }, {
    start: 1018,
    length: 1,
    convRule: rule21
  }, {
    start: 1019,
    length: 1,
    convRule: rule22
  }, {
    start: 1020,
    length: 1,
    convRule: rule14
  }, {
    start: 1021,
    length: 3,
    convRule: rule53
  }, {
    start: 1024,
    length: 16,
    convRule: rule108
  }, {
    start: 1040,
    length: 32,
    convRule: rule9
  }, {
    start: 1072,
    length: 32,
    convRule: rule12
  }, {
    start: 1104,
    length: 16,
    convRule: rule103
  }, {
    start: 1120,
    length: 1,
    convRule: rule21
  }, {
    start: 1121,
    length: 1,
    convRule: rule22
  }, {
    start: 1122,
    length: 1,
    convRule: rule21
  }, {
    start: 1123,
    length: 1,
    convRule: rule22
  }, {
    start: 1124,
    length: 1,
    convRule: rule21
  }, {
    start: 1125,
    length: 1,
    convRule: rule22
  }, {
    start: 1126,
    length: 1,
    convRule: rule21
  }, {
    start: 1127,
    length: 1,
    convRule: rule22
  }, {
    start: 1128,
    length: 1,
    convRule: rule21
  }, {
    start: 1129,
    length: 1,
    convRule: rule22
  }, {
    start: 1130,
    length: 1,
    convRule: rule21
  }, {
    start: 1131,
    length: 1,
    convRule: rule22
  }, {
    start: 1132,
    length: 1,
    convRule: rule21
  }, {
    start: 1133,
    length: 1,
    convRule: rule22
  }, {
    start: 1134,
    length: 1,
    convRule: rule21
  }, {
    start: 1135,
    length: 1,
    convRule: rule22
  }, {
    start: 1136,
    length: 1,
    convRule: rule21
  }, {
    start: 1137,
    length: 1,
    convRule: rule22
  }, {
    start: 1138,
    length: 1,
    convRule: rule21
  }, {
    start: 1139,
    length: 1,
    convRule: rule22
  }, {
    start: 1140,
    length: 1,
    convRule: rule21
  }, {
    start: 1141,
    length: 1,
    convRule: rule22
  }, {
    start: 1142,
    length: 1,
    convRule: rule21
  }, {
    start: 1143,
    length: 1,
    convRule: rule22
  }, {
    start: 1144,
    length: 1,
    convRule: rule21
  }, {
    start: 1145,
    length: 1,
    convRule: rule22
  }, {
    start: 1146,
    length: 1,
    convRule: rule21
  }, {
    start: 1147,
    length: 1,
    convRule: rule22
  }, {
    start: 1148,
    length: 1,
    convRule: rule21
  }, {
    start: 1149,
    length: 1,
    convRule: rule22
  }, {
    start: 1150,
    length: 1,
    convRule: rule21
  }, {
    start: 1151,
    length: 1,
    convRule: rule22
  }, {
    start: 1152,
    length: 1,
    convRule: rule21
  }, {
    start: 1153,
    length: 1,
    convRule: rule22
  }, {
    start: 1154,
    length: 1,
    convRule: rule13
  }, {
    start: 1155,
    length: 5,
    convRule: rule84
  }, {
    start: 1160,
    length: 2,
    convRule: rule109
  }, {
    start: 1162,
    length: 1,
    convRule: rule21
  }, {
    start: 1163,
    length: 1,
    convRule: rule22
  }, {
    start: 1164,
    length: 1,
    convRule: rule21
  }, {
    start: 1165,
    length: 1,
    convRule: rule22
  }, {
    start: 1166,
    length: 1,
    convRule: rule21
  }, {
    start: 1167,
    length: 1,
    convRule: rule22
  }, {
    start: 1168,
    length: 1,
    convRule: rule21
  }, {
    start: 1169,
    length: 1,
    convRule: rule22
  }, {
    start: 1170,
    length: 1,
    convRule: rule21
  }, {
    start: 1171,
    length: 1,
    convRule: rule22
  }, {
    start: 1172,
    length: 1,
    convRule: rule21
  }, {
    start: 1173,
    length: 1,
    convRule: rule22
  }, {
    start: 1174,
    length: 1,
    convRule: rule21
  }, {
    start: 1175,
    length: 1,
    convRule: rule22
  }, {
    start: 1176,
    length: 1,
    convRule: rule21
  }, {
    start: 1177,
    length: 1,
    convRule: rule22
  }, {
    start: 1178,
    length: 1,
    convRule: rule21
  }, {
    start: 1179,
    length: 1,
    convRule: rule22
  }, {
    start: 1180,
    length: 1,
    convRule: rule21
  }, {
    start: 1181,
    length: 1,
    convRule: rule22
  }, {
    start: 1182,
    length: 1,
    convRule: rule21
  }, {
    start: 1183,
    length: 1,
    convRule: rule22
  }, {
    start: 1184,
    length: 1,
    convRule: rule21
  }, {
    start: 1185,
    length: 1,
    convRule: rule22
  }, {
    start: 1186,
    length: 1,
    convRule: rule21
  }, {
    start: 1187,
    length: 1,
    convRule: rule22
  }, {
    start: 1188,
    length: 1,
    convRule: rule21
  }, {
    start: 1189,
    length: 1,
    convRule: rule22
  }, {
    start: 1190,
    length: 1,
    convRule: rule21
  }, {
    start: 1191,
    length: 1,
    convRule: rule22
  }, {
    start: 1192,
    length: 1,
    convRule: rule21
  }, {
    start: 1193,
    length: 1,
    convRule: rule22
  }, {
    start: 1194,
    length: 1,
    convRule: rule21
  }, {
    start: 1195,
    length: 1,
    convRule: rule22
  }, {
    start: 1196,
    length: 1,
    convRule: rule21
  }, {
    start: 1197,
    length: 1,
    convRule: rule22
  }, {
    start: 1198,
    length: 1,
    convRule: rule21
  }, {
    start: 1199,
    length: 1,
    convRule: rule22
  }, {
    start: 1200,
    length: 1,
    convRule: rule21
  }, {
    start: 1201,
    length: 1,
    convRule: rule22
  }, {
    start: 1202,
    length: 1,
    convRule: rule21
  }, {
    start: 1203,
    length: 1,
    convRule: rule22
  }, {
    start: 1204,
    length: 1,
    convRule: rule21
  }, {
    start: 1205,
    length: 1,
    convRule: rule22
  }, {
    start: 1206,
    length: 1,
    convRule: rule21
  }, {
    start: 1207,
    length: 1,
    convRule: rule22
  }, {
    start: 1208,
    length: 1,
    convRule: rule21
  }, {
    start: 1209,
    length: 1,
    convRule: rule22
  }, {
    start: 1210,
    length: 1,
    convRule: rule21
  }, {
    start: 1211,
    length: 1,
    convRule: rule22
  }, {
    start: 1212,
    length: 1,
    convRule: rule21
  }, {
    start: 1213,
    length: 1,
    convRule: rule22
  }, {
    start: 1214,
    length: 1,
    convRule: rule21
  }, {
    start: 1215,
    length: 1,
    convRule: rule22
  }, {
    start: 1216,
    length: 1,
    convRule: rule110
  }, {
    start: 1217,
    length: 1,
    convRule: rule21
  }, {
    start: 1218,
    length: 1,
    convRule: rule22
  }, {
    start: 1219,
    length: 1,
    convRule: rule21
  }, {
    start: 1220,
    length: 1,
    convRule: rule22
  }, {
    start: 1221,
    length: 1,
    convRule: rule21
  }, {
    start: 1222,
    length: 1,
    convRule: rule22
  }, {
    start: 1223,
    length: 1,
    convRule: rule21
  }, {
    start: 1224,
    length: 1,
    convRule: rule22
  }, {
    start: 1225,
    length: 1,
    convRule: rule21
  }, {
    start: 1226,
    length: 1,
    convRule: rule22
  }, {
    start: 1227,
    length: 1,
    convRule: rule21
  }, {
    start: 1228,
    length: 1,
    convRule: rule22
  }, {
    start: 1229,
    length: 1,
    convRule: rule21
  }, {
    start: 1230,
    length: 1,
    convRule: rule22
  }, {
    start: 1231,
    length: 1,
    convRule: rule111
  }, {
    start: 1232,
    length: 1,
    convRule: rule21
  }, {
    start: 1233,
    length: 1,
    convRule: rule22
  }, {
    start: 1234,
    length: 1,
    convRule: rule21
  }, {
    start: 1235,
    length: 1,
    convRule: rule22
  }, {
    start: 1236,
    length: 1,
    convRule: rule21
  }, {
    start: 1237,
    length: 1,
    convRule: rule22
  }, {
    start: 1238,
    length: 1,
    convRule: rule21
  }, {
    start: 1239,
    length: 1,
    convRule: rule22
  }, {
    start: 1240,
    length: 1,
    convRule: rule21
  }, {
    start: 1241,
    length: 1,
    convRule: rule22
  }, {
    start: 1242,
    length: 1,
    convRule: rule21
  }, {
    start: 1243,
    length: 1,
    convRule: rule22
  }, {
    start: 1244,
    length: 1,
    convRule: rule21
  }, {
    start: 1245,
    length: 1,
    convRule: rule22
  }, {
    start: 1246,
    length: 1,
    convRule: rule21
  }, {
    start: 1247,
    length: 1,
    convRule: rule22
  }, {
    start: 1248,
    length: 1,
    convRule: rule21
  }, {
    start: 1249,
    length: 1,
    convRule: rule22
  }, {
    start: 1250,
    length: 1,
    convRule: rule21
  }, {
    start: 1251,
    length: 1,
    convRule: rule22
  }, {
    start: 1252,
    length: 1,
    convRule: rule21
  }, {
    start: 1253,
    length: 1,
    convRule: rule22
  }, {
    start: 1254,
    length: 1,
    convRule: rule21
  }, {
    start: 1255,
    length: 1,
    convRule: rule22
  }, {
    start: 1256,
    length: 1,
    convRule: rule21
  }, {
    start: 1257,
    length: 1,
    convRule: rule22
  }, {
    start: 1258,
    length: 1,
    convRule: rule21
  }, {
    start: 1259,
    length: 1,
    convRule: rule22
  }, {
    start: 1260,
    length: 1,
    convRule: rule21
  }, {
    start: 1261,
    length: 1,
    convRule: rule22
  }, {
    start: 1262,
    length: 1,
    convRule: rule21
  }, {
    start: 1263,
    length: 1,
    convRule: rule22
  }, {
    start: 1264,
    length: 1,
    convRule: rule21
  }, {
    start: 1265,
    length: 1,
    convRule: rule22
  }, {
    start: 1266,
    length: 1,
    convRule: rule21
  }, {
    start: 1267,
    length: 1,
    convRule: rule22
  }, {
    start: 1268,
    length: 1,
    convRule: rule21
  }, {
    start: 1269,
    length: 1,
    convRule: rule22
  }, {
    start: 1270,
    length: 1,
    convRule: rule21
  }, {
    start: 1271,
    length: 1,
    convRule: rule22
  }, {
    start: 1272,
    length: 1,
    convRule: rule21
  }, {
    start: 1273,
    length: 1,
    convRule: rule22
  }, {
    start: 1274,
    length: 1,
    convRule: rule21
  }, {
    start: 1275,
    length: 1,
    convRule: rule22
  }, {
    start: 1276,
    length: 1,
    convRule: rule21
  }, {
    start: 1277,
    length: 1,
    convRule: rule22
  }, {
    start: 1278,
    length: 1,
    convRule: rule21
  }, {
    start: 1279,
    length: 1,
    convRule: rule22
  }, {
    start: 1280,
    length: 1,
    convRule: rule21
  }, {
    start: 1281,
    length: 1,
    convRule: rule22
  }, {
    start: 1282,
    length: 1,
    convRule: rule21
  }, {
    start: 1283,
    length: 1,
    convRule: rule22
  }, {
    start: 1284,
    length: 1,
    convRule: rule21
  }, {
    start: 1285,
    length: 1,
    convRule: rule22
  }, {
    start: 1286,
    length: 1,
    convRule: rule21
  }, {
    start: 1287,
    length: 1,
    convRule: rule22
  }, {
    start: 1288,
    length: 1,
    convRule: rule21
  }, {
    start: 1289,
    length: 1,
    convRule: rule22
  }, {
    start: 1290,
    length: 1,
    convRule: rule21
  }, {
    start: 1291,
    length: 1,
    convRule: rule22
  }, {
    start: 1292,
    length: 1,
    convRule: rule21
  }, {
    start: 1293,
    length: 1,
    convRule: rule22
  }, {
    start: 1294,
    length: 1,
    convRule: rule21
  }, {
    start: 1295,
    length: 1,
    convRule: rule22
  }, {
    start: 1296,
    length: 1,
    convRule: rule21
  }, {
    start: 1297,
    length: 1,
    convRule: rule22
  }, {
    start: 1298,
    length: 1,
    convRule: rule21
  }, {
    start: 1299,
    length: 1,
    convRule: rule22
  }, {
    start: 1300,
    length: 1,
    convRule: rule21
  }, {
    start: 1301,
    length: 1,
    convRule: rule22
  }, {
    start: 1302,
    length: 1,
    convRule: rule21
  }, {
    start: 1303,
    length: 1,
    convRule: rule22
  }, {
    start: 1304,
    length: 1,
    convRule: rule21
  }, {
    start: 1305,
    length: 1,
    convRule: rule22
  }, {
    start: 1306,
    length: 1,
    convRule: rule21
  }, {
    start: 1307,
    length: 1,
    convRule: rule22
  }, {
    start: 1308,
    length: 1,
    convRule: rule21
  }, {
    start: 1309,
    length: 1,
    convRule: rule22
  }, {
    start: 1310,
    length: 1,
    convRule: rule21
  }, {
    start: 1311,
    length: 1,
    convRule: rule22
  }, {
    start: 1312,
    length: 1,
    convRule: rule21
  }, {
    start: 1313,
    length: 1,
    convRule: rule22
  }, {
    start: 1314,
    length: 1,
    convRule: rule21
  }, {
    start: 1315,
    length: 1,
    convRule: rule22
  }, {
    start: 1316,
    length: 1,
    convRule: rule21
  }, {
    start: 1317,
    length: 1,
    convRule: rule22
  }, {
    start: 1318,
    length: 1,
    convRule: rule21
  }, {
    start: 1319,
    length: 1,
    convRule: rule22
  }, {
    start: 1329,
    length: 38,
    convRule: rule112
  }, {
    start: 1369,
    length: 1,
    convRule: rule83
  }, {
    start: 1370,
    length: 6,
    convRule: rule2
  }, {
    start: 1377,
    length: 38,
    convRule: rule113
  }, {
    start: 1415,
    length: 1,
    convRule: rule14
  }, {
    start: 1417,
    length: 1,
    convRule: rule2
  }, {
    start: 1418,
    length: 1,
    convRule: rule7
  }, {
    start: 1425,
    length: 45,
    convRule: rule84
  }, {
    start: 1470,
    length: 1,
    convRule: rule7
  }, {
    start: 1471,
    length: 1,
    convRule: rule84
  }, {
    start: 1472,
    length: 1,
    convRule: rule2
  }, {
    start: 1473,
    length: 2,
    convRule: rule84
  }, {
    start: 1475,
    length: 1,
    convRule: rule2
  }, {
    start: 1476,
    length: 2,
    convRule: rule84
  }, {
    start: 1478,
    length: 1,
    convRule: rule2
  }, {
    start: 1479,
    length: 1,
    convRule: rule84
  }, {
    start: 1488,
    length: 27,
    convRule: rule45
  }, {
    start: 1520,
    length: 3,
    convRule: rule45
  }, {
    start: 1523,
    length: 2,
    convRule: rule2
  }, {
    start: 1536,
    length: 4,
    convRule: rule16
  }, {
    start: 1542,
    length: 3,
    convRule: rule6
  }, {
    start: 1545,
    length: 2,
    convRule: rule2
  }, {
    start: 1547,
    length: 1,
    convRule: rule3
  }, {
    start: 1548,
    length: 2,
    convRule: rule2
  }, {
    start: 1550,
    length: 2,
    convRule: rule13
  }, {
    start: 1552,
    length: 11,
    convRule: rule84
  }, {
    start: 1563,
    length: 1,
    convRule: rule2
  }, {
    start: 1566,
    length: 2,
    convRule: rule2
  }, {
    start: 1568,
    length: 32,
    convRule: rule45
  }, {
    start: 1600,
    length: 1,
    convRule: rule83
  }, {
    start: 1601,
    length: 10,
    convRule: rule45
  }, {
    start: 1611,
    length: 21,
    convRule: rule84
  }, {
    start: 1632,
    length: 10,
    convRule: rule8
  }, {
    start: 1642,
    length: 4,
    convRule: rule2
  }, {
    start: 1646,
    length: 2,
    convRule: rule45
  }, {
    start: 1648,
    length: 1,
    convRule: rule84
  }, {
    start: 1649,
    length: 99,
    convRule: rule45
  }, {
    start: 1748,
    length: 1,
    convRule: rule2
  }, {
    start: 1749,
    length: 1,
    convRule: rule45
  }, {
    start: 1750,
    length: 7,
    convRule: rule84
  }, {
    start: 1757,
    length: 1,
    convRule: rule16
  }, {
    start: 1758,
    length: 1,
    convRule: rule13
  }, {
    start: 1759,
    length: 6,
    convRule: rule84
  }, {
    start: 1765,
    length: 2,
    convRule: rule83
  }, {
    start: 1767,
    length: 2,
    convRule: rule84
  }, {
    start: 1769,
    length: 1,
    convRule: rule13
  }, {
    start: 1770,
    length: 4,
    convRule: rule84
  }, {
    start: 1774,
    length: 2,
    convRule: rule45
  }, {
    start: 1776,
    length: 10,
    convRule: rule8
  }, {
    start: 1786,
    length: 3,
    convRule: rule45
  }, {
    start: 1789,
    length: 2,
    convRule: rule13
  }, {
    start: 1791,
    length: 1,
    convRule: rule45
  }, {
    start: 1792,
    length: 14,
    convRule: rule2
  }, {
    start: 1807,
    length: 1,
    convRule: rule16
  }, {
    start: 1808,
    length: 1,
    convRule: rule45
  }, {
    start: 1809,
    length: 1,
    convRule: rule84
  }, {
    start: 1810,
    length: 30,
    convRule: rule45
  }, {
    start: 1840,
    length: 27,
    convRule: rule84
  }, {
    start: 1869,
    length: 89,
    convRule: rule45
  }, {
    start: 1958,
    length: 11,
    convRule: rule84
  }, {
    start: 1969,
    length: 1,
    convRule: rule45
  }, {
    start: 1984,
    length: 10,
    convRule: rule8
  }, {
    start: 1994,
    length: 33,
    convRule: rule45
  }, {
    start: 2027,
    length: 9,
    convRule: rule84
  }, {
    start: 2036,
    length: 2,
    convRule: rule83
  }, {
    start: 2038,
    length: 1,
    convRule: rule13
  }, {
    start: 2039,
    length: 3,
    convRule: rule2
  }, {
    start: 2042,
    length: 1,
    convRule: rule83
  }, {
    start: 2048,
    length: 22,
    convRule: rule45
  }, {
    start: 2070,
    length: 4,
    convRule: rule84
  }, {
    start: 2074,
    length: 1,
    convRule: rule83
  }, {
    start: 2075,
    length: 9,
    convRule: rule84
  }, {
    start: 2084,
    length: 1,
    convRule: rule83
  }, {
    start: 2085,
    length: 3,
    convRule: rule84
  }, {
    start: 2088,
    length: 1,
    convRule: rule83
  }, {
    start: 2089,
    length: 5,
    convRule: rule84
  }, {
    start: 2096,
    length: 15,
    convRule: rule2
  }, {
    start: 2112,
    length: 25,
    convRule: rule45
  }, {
    start: 2137,
    length: 3,
    convRule: rule84
  }, {
    start: 2142,
    length: 1,
    convRule: rule2
  }, {
    start: 2304,
    length: 3,
    convRule: rule84
  }, {
    start: 2307,
    length: 1,
    convRule: rule114
  }, {
    start: 2308,
    length: 54,
    convRule: rule45
  }, {
    start: 2362,
    length: 1,
    convRule: rule84
  }, {
    start: 2363,
    length: 1,
    convRule: rule114
  }, {
    start: 2364,
    length: 1,
    convRule: rule84
  }, {
    start: 2365,
    length: 1,
    convRule: rule45
  }, {
    start: 2366,
    length: 3,
    convRule: rule114
  }, {
    start: 2369,
    length: 8,
    convRule: rule84
  }, {
    start: 2377,
    length: 4,
    convRule: rule114
  }, {
    start: 2381,
    length: 1,
    convRule: rule84
  }, {
    start: 2382,
    length: 2,
    convRule: rule114
  }, {
    start: 2384,
    length: 1,
    convRule: rule45
  }, {
    start: 2385,
    length: 7,
    convRule: rule84
  }, {
    start: 2392,
    length: 10,
    convRule: rule45
  }, {
    start: 2402,
    length: 2,
    convRule: rule84
  }, {
    start: 2404,
    length: 2,
    convRule: rule2
  }, {
    start: 2406,
    length: 10,
    convRule: rule8
  }, {
    start: 2416,
    length: 1,
    convRule: rule2
  }, {
    start: 2417,
    length: 1,
    convRule: rule83
  }, {
    start: 2418,
    length: 6,
    convRule: rule45
  }, {
    start: 2425,
    length: 7,
    convRule: rule45
  }, {
    start: 2433,
    length: 1,
    convRule: rule84
  }, {
    start: 2434,
    length: 2,
    convRule: rule114
  }, {
    start: 2437,
    length: 8,
    convRule: rule45
  }, {
    start: 2447,
    length: 2,
    convRule: rule45
  }, {
    start: 2451,
    length: 22,
    convRule: rule45
  }, {
    start: 2474,
    length: 7,
    convRule: rule45
  }, {
    start: 2482,
    length: 1,
    convRule: rule45
  }, {
    start: 2486,
    length: 4,
    convRule: rule45
  }, {
    start: 2492,
    length: 1,
    convRule: rule84
  }, {
    start: 2493,
    length: 1,
    convRule: rule45
  }, {
    start: 2494,
    length: 3,
    convRule: rule114
  }, {
    start: 2497,
    length: 4,
    convRule: rule84
  }, {
    start: 2503,
    length: 2,
    convRule: rule114
  }, {
    start: 2507,
    length: 2,
    convRule: rule114
  }, {
    start: 2509,
    length: 1,
    convRule: rule84
  }, {
    start: 2510,
    length: 1,
    convRule: rule45
  }, {
    start: 2519,
    length: 1,
    convRule: rule114
  }, {
    start: 2524,
    length: 2,
    convRule: rule45
  }, {
    start: 2527,
    length: 3,
    convRule: rule45
  }, {
    start: 2530,
    length: 2,
    convRule: rule84
  }, {
    start: 2534,
    length: 10,
    convRule: rule8
  }, {
    start: 2544,
    length: 2,
    convRule: rule45
  }, {
    start: 2546,
    length: 2,
    convRule: rule3
  }, {
    start: 2548,
    length: 6,
    convRule: rule17
  }, {
    start: 2554,
    length: 1,
    convRule: rule13
  }, {
    start: 2555,
    length: 1,
    convRule: rule3
  }, {
    start: 2561,
    length: 2,
    convRule: rule84
  }, {
    start: 2563,
    length: 1,
    convRule: rule114
  }, {
    start: 2565,
    length: 6,
    convRule: rule45
  }, {
    start: 2575,
    length: 2,
    convRule: rule45
  }, {
    start: 2579,
    length: 22,
    convRule: rule45
  }, {
    start: 2602,
    length: 7,
    convRule: rule45
  }, {
    start: 2610,
    length: 2,
    convRule: rule45
  }, {
    start: 2613,
    length: 2,
    convRule: rule45
  }, {
    start: 2616,
    length: 2,
    convRule: rule45
  }, {
    start: 2620,
    length: 1,
    convRule: rule84
  }, {
    start: 2622,
    length: 3,
    convRule: rule114
  }, {
    start: 2625,
    length: 2,
    convRule: rule84
  }, {
    start: 2631,
    length: 2,
    convRule: rule84
  }, {
    start: 2635,
    length: 3,
    convRule: rule84
  }, {
    start: 2641,
    length: 1,
    convRule: rule84
  }, {
    start: 2649,
    length: 4,
    convRule: rule45
  }, {
    start: 2654,
    length: 1,
    convRule: rule45
  }, {
    start: 2662,
    length: 10,
    convRule: rule8
  }, {
    start: 2672,
    length: 2,
    convRule: rule84
  }, {
    start: 2674,
    length: 3,
    convRule: rule45
  }, {
    start: 2677,
    length: 1,
    convRule: rule84
  }, {
    start: 2689,
    length: 2,
    convRule: rule84
  }, {
    start: 2691,
    length: 1,
    convRule: rule114
  }, {
    start: 2693,
    length: 9,
    convRule: rule45
  }, {
    start: 2703,
    length: 3,
    convRule: rule45
  }, {
    start: 2707,
    length: 22,
    convRule: rule45
  }, {
    start: 2730,
    length: 7,
    convRule: rule45
  }, {
    start: 2738,
    length: 2,
    convRule: rule45
  }, {
    start: 2741,
    length: 5,
    convRule: rule45
  }, {
    start: 2748,
    length: 1,
    convRule: rule84
  }, {
    start: 2749,
    length: 1,
    convRule: rule45
  }, {
    start: 2750,
    length: 3,
    convRule: rule114
  }, {
    start: 2753,
    length: 5,
    convRule: rule84
  }, {
    start: 2759,
    length: 2,
    convRule: rule84
  }, {
    start: 2761,
    length: 1,
    convRule: rule114
  }, {
    start: 2763,
    length: 2,
    convRule: rule114
  }, {
    start: 2765,
    length: 1,
    convRule: rule84
  }, {
    start: 2768,
    length: 1,
    convRule: rule45
  }, {
    start: 2784,
    length: 2,
    convRule: rule45
  }, {
    start: 2786,
    length: 2,
    convRule: rule84
  }, {
    start: 2790,
    length: 10,
    convRule: rule8
  }, {
    start: 2801,
    length: 1,
    convRule: rule3
  }, {
    start: 2817,
    length: 1,
    convRule: rule84
  }, {
    start: 2818,
    length: 2,
    convRule: rule114
  }, {
    start: 2821,
    length: 8,
    convRule: rule45
  }, {
    start: 2831,
    length: 2,
    convRule: rule45
  }, {
    start: 2835,
    length: 22,
    convRule: rule45
  }, {
    start: 2858,
    length: 7,
    convRule: rule45
  }, {
    start: 2866,
    length: 2,
    convRule: rule45
  }, {
    start: 2869,
    length: 5,
    convRule: rule45
  }, {
    start: 2876,
    length: 1,
    convRule: rule84
  }, {
    start: 2877,
    length: 1,
    convRule: rule45
  }, {
    start: 2878,
    length: 1,
    convRule: rule114
  }, {
    start: 2879,
    length: 1,
    convRule: rule84
  }, {
    start: 2880,
    length: 1,
    convRule: rule114
  }, {
    start: 2881,
    length: 4,
    convRule: rule84
  }, {
    start: 2887,
    length: 2,
    convRule: rule114
  }, {
    start: 2891,
    length: 2,
    convRule: rule114
  }, {
    start: 2893,
    length: 1,
    convRule: rule84
  }, {
    start: 2902,
    length: 1,
    convRule: rule84
  }, {
    start: 2903,
    length: 1,
    convRule: rule114
  }, {
    start: 2908,
    length: 2,
    convRule: rule45
  }, {
    start: 2911,
    length: 3,
    convRule: rule45
  }, {
    start: 2914,
    length: 2,
    convRule: rule84
  }, {
    start: 2918,
    length: 10,
    convRule: rule8
  }, {
    start: 2928,
    length: 1,
    convRule: rule13
  }, {
    start: 2929,
    length: 1,
    convRule: rule45
  }, {
    start: 2930,
    length: 6,
    convRule: rule17
  }, {
    start: 2946,
    length: 1,
    convRule: rule84
  }, {
    start: 2947,
    length: 1,
    convRule: rule45
  }, {
    start: 2949,
    length: 6,
    convRule: rule45
  }, {
    start: 2958,
    length: 3,
    convRule: rule45
  }, {
    start: 2962,
    length: 4,
    convRule: rule45
  }, {
    start: 2969,
    length: 2,
    convRule: rule45
  }, {
    start: 2972,
    length: 1,
    convRule: rule45
  }, {
    start: 2974,
    length: 2,
    convRule: rule45
  }, {
    start: 2979,
    length: 2,
    convRule: rule45
  }, {
    start: 2984,
    length: 3,
    convRule: rule45
  }, {
    start: 2990,
    length: 12,
    convRule: rule45
  }, {
    start: 3006,
    length: 2,
    convRule: rule114
  }, {
    start: 3008,
    length: 1,
    convRule: rule84
  }, {
    start: 3009,
    length: 2,
    convRule: rule114
  }, {
    start: 3014,
    length: 3,
    convRule: rule114
  }, {
    start: 3018,
    length: 3,
    convRule: rule114
  }, {
    start: 3021,
    length: 1,
    convRule: rule84
  }, {
    start: 3024,
    length: 1,
    convRule: rule45
  }, {
    start: 3031,
    length: 1,
    convRule: rule114
  }, {
    start: 3046,
    length: 10,
    convRule: rule8
  }, {
    start: 3056,
    length: 3,
    convRule: rule17
  }, {
    start: 3059,
    length: 6,
    convRule: rule13
  }, {
    start: 3065,
    length: 1,
    convRule: rule3
  }, {
    start: 3066,
    length: 1,
    convRule: rule13
  }, {
    start: 3073,
    length: 3,
    convRule: rule114
  }, {
    start: 3077,
    length: 8,
    convRule: rule45
  }, {
    start: 3086,
    length: 3,
    convRule: rule45
  }, {
    start: 3090,
    length: 23,
    convRule: rule45
  }, {
    start: 3114,
    length: 10,
    convRule: rule45
  }, {
    start: 3125,
    length: 5,
    convRule: rule45
  }, {
    start: 3133,
    length: 1,
    convRule: rule45
  }, {
    start: 3134,
    length: 3,
    convRule: rule84
  }, {
    start: 3137,
    length: 4,
    convRule: rule114
  }, {
    start: 3142,
    length: 3,
    convRule: rule84
  }, {
    start: 3146,
    length: 4,
    convRule: rule84
  }, {
    start: 3157,
    length: 2,
    convRule: rule84
  }, {
    start: 3160,
    length: 2,
    convRule: rule45
  }, {
    start: 3168,
    length: 2,
    convRule: rule45
  }, {
    start: 3170,
    length: 2,
    convRule: rule84
  }, {
    start: 3174,
    length: 10,
    convRule: rule8
  }, {
    start: 3192,
    length: 7,
    convRule: rule17
  }, {
    start: 3199,
    length: 1,
    convRule: rule13
  }, {
    start: 3202,
    length: 2,
    convRule: rule114
  }, {
    start: 3205,
    length: 8,
    convRule: rule45
  }, {
    start: 3214,
    length: 3,
    convRule: rule45
  }, {
    start: 3218,
    length: 23,
    convRule: rule45
  }, {
    start: 3242,
    length: 10,
    convRule: rule45
  }, {
    start: 3253,
    length: 5,
    convRule: rule45
  }, {
    start: 3260,
    length: 1,
    convRule: rule84
  }, {
    start: 3261,
    length: 1,
    convRule: rule45
  }, {
    start: 3262,
    length: 1,
    convRule: rule114
  }, {
    start: 3263,
    length: 1,
    convRule: rule84
  }, {
    start: 3264,
    length: 5,
    convRule: rule114
  }, {
    start: 3270,
    length: 1,
    convRule: rule84
  }, {
    start: 3271,
    length: 2,
    convRule: rule114
  }, {
    start: 3274,
    length: 2,
    convRule: rule114
  }, {
    start: 3276,
    length: 2,
    convRule: rule84
  }, {
    start: 3285,
    length: 2,
    convRule: rule114
  }, {
    start: 3294,
    length: 1,
    convRule: rule45
  }, {
    start: 3296,
    length: 2,
    convRule: rule45
  }, {
    start: 3298,
    length: 2,
    convRule: rule84
  }, {
    start: 3302,
    length: 10,
    convRule: rule8
  }, {
    start: 3313,
    length: 2,
    convRule: rule45
  }, {
    start: 3330,
    length: 2,
    convRule: rule114
  }, {
    start: 3333,
    length: 8,
    convRule: rule45
  }, {
    start: 3342,
    length: 3,
    convRule: rule45
  }, {
    start: 3346,
    length: 41,
    convRule: rule45
  }, {
    start: 3389,
    length: 1,
    convRule: rule45
  }, {
    start: 3390,
    length: 3,
    convRule: rule114
  }, {
    start: 3393,
    length: 4,
    convRule: rule84
  }, {
    start: 3398,
    length: 3,
    convRule: rule114
  }, {
    start: 3402,
    length: 3,
    convRule: rule114
  }, {
    start: 3405,
    length: 1,
    convRule: rule84
  }, {
    start: 3406,
    length: 1,
    convRule: rule45
  }, {
    start: 3415,
    length: 1,
    convRule: rule114
  }, {
    start: 3424,
    length: 2,
    convRule: rule45
  }, {
    start: 3426,
    length: 2,
    convRule: rule84
  }, {
    start: 3430,
    length: 10,
    convRule: rule8
  }, {
    start: 3440,
    length: 6,
    convRule: rule17
  }, {
    start: 3449,
    length: 1,
    convRule: rule13
  }, {
    start: 3450,
    length: 6,
    convRule: rule45
  }, {
    start: 3458,
    length: 2,
    convRule: rule114
  }, {
    start: 3461,
    length: 18,
    convRule: rule45
  }, {
    start: 3482,
    length: 24,
    convRule: rule45
  }, {
    start: 3507,
    length: 9,
    convRule: rule45
  }, {
    start: 3517,
    length: 1,
    convRule: rule45
  }, {
    start: 3520,
    length: 7,
    convRule: rule45
  }, {
    start: 3530,
    length: 1,
    convRule: rule84
  }, {
    start: 3535,
    length: 3,
    convRule: rule114
  }, {
    start: 3538,
    length: 3,
    convRule: rule84
  }, {
    start: 3542,
    length: 1,
    convRule: rule84
  }, {
    start: 3544,
    length: 8,
    convRule: rule114
  }, {
    start: 3570,
    length: 2,
    convRule: rule114
  }, {
    start: 3572,
    length: 1,
    convRule: rule2
  }, {
    start: 3585,
    length: 48,
    convRule: rule45
  }, {
    start: 3633,
    length: 1,
    convRule: rule84
  }, {
    start: 3634,
    length: 2,
    convRule: rule45
  }, {
    start: 3636,
    length: 7,
    convRule: rule84
  }, {
    start: 3647,
    length: 1,
    convRule: rule3
  }, {
    start: 3648,
    length: 6,
    convRule: rule45
  }, {
    start: 3654,
    length: 1,
    convRule: rule83
  }, {
    start: 3655,
    length: 8,
    convRule: rule84
  }, {
    start: 3663,
    length: 1,
    convRule: rule2
  }, {
    start: 3664,
    length: 10,
    convRule: rule8
  }, {
    start: 3674,
    length: 2,
    convRule: rule2
  }, {
    start: 3713,
    length: 2,
    convRule: rule45
  }, {
    start: 3716,
    length: 1,
    convRule: rule45
  }, {
    start: 3719,
    length: 2,
    convRule: rule45
  }, {
    start: 3722,
    length: 1,
    convRule: rule45
  }, {
    start: 3725,
    length: 1,
    convRule: rule45
  }, {
    start: 3732,
    length: 4,
    convRule: rule45
  }, {
    start: 3737,
    length: 7,
    convRule: rule45
  }, {
    start: 3745,
    length: 3,
    convRule: rule45
  }, {
    start: 3749,
    length: 1,
    convRule: rule45
  }, {
    start: 3751,
    length: 1,
    convRule: rule45
  }, {
    start: 3754,
    length: 2,
    convRule: rule45
  }, {
    start: 3757,
    length: 4,
    convRule: rule45
  }, {
    start: 3761,
    length: 1,
    convRule: rule84
  }, {
    start: 3762,
    length: 2,
    convRule: rule45
  }, {
    start: 3764,
    length: 6,
    convRule: rule84
  }, {
    start: 3771,
    length: 2,
    convRule: rule84
  }, {
    start: 3773,
    length: 1,
    convRule: rule45
  }, {
    start: 3776,
    length: 5,
    convRule: rule45
  }, {
    start: 3782,
    length: 1,
    convRule: rule83
  }, {
    start: 3784,
    length: 6,
    convRule: rule84
  }, {
    start: 3792,
    length: 10,
    convRule: rule8
  }, {
    start: 3804,
    length: 2,
    convRule: rule45
  }, {
    start: 3840,
    length: 1,
    convRule: rule45
  }, {
    start: 3841,
    length: 3,
    convRule: rule13
  }, {
    start: 3844,
    length: 15,
    convRule: rule2
  }, {
    start: 3859,
    length: 5,
    convRule: rule13
  }, {
    start: 3864,
    length: 2,
    convRule: rule84
  }, {
    start: 3866,
    length: 6,
    convRule: rule13
  }, {
    start: 3872,
    length: 10,
    convRule: rule8
  }, {
    start: 3882,
    length: 10,
    convRule: rule17
  }, {
    start: 3892,
    length: 1,
    convRule: rule13
  }, {
    start: 3893,
    length: 1,
    convRule: rule84
  }, {
    start: 3894,
    length: 1,
    convRule: rule13
  }, {
    start: 3895,
    length: 1,
    convRule: rule84
  }, {
    start: 3896,
    length: 1,
    convRule: rule13
  }, {
    start: 3897,
    length: 1,
    convRule: rule84
  }, {
    start: 3898,
    length: 1,
    convRule: rule4
  }, {
    start: 3899,
    length: 1,
    convRule: rule5
  }, {
    start: 3900,
    length: 1,
    convRule: rule4
  }, {
    start: 3901,
    length: 1,
    convRule: rule5
  }, {
    start: 3902,
    length: 2,
    convRule: rule114
  }, {
    start: 3904,
    length: 8,
    convRule: rule45
  }, {
    start: 3913,
    length: 36,
    convRule: rule45
  }, {
    start: 3953,
    length: 14,
    convRule: rule84
  }, {
    start: 3967,
    length: 1,
    convRule: rule114
  }, {
    start: 3968,
    length: 5,
    convRule: rule84
  }, {
    start: 3973,
    length: 1,
    convRule: rule2
  }, {
    start: 3974,
    length: 2,
    convRule: rule84
  }, {
    start: 3976,
    length: 5,
    convRule: rule45
  }, {
    start: 3981,
    length: 11,
    convRule: rule84
  }, {
    start: 3993,
    length: 36,
    convRule: rule84
  }, {
    start: 4030,
    length: 8,
    convRule: rule13
  }, {
    start: 4038,
    length: 1,
    convRule: rule84
  }, {
    start: 4039,
    length: 6,
    convRule: rule13
  }, {
    start: 4046,
    length: 2,
    convRule: rule13
  }, {
    start: 4048,
    length: 5,
    convRule: rule2
  }, {
    start: 4053,
    length: 4,
    convRule: rule13
  }, {
    start: 4057,
    length: 2,
    convRule: rule2
  }, {
    start: 4096,
    length: 43,
    convRule: rule45
  }, {
    start: 4139,
    length: 2,
    convRule: rule114
  }, {
    start: 4141,
    length: 4,
    convRule: rule84
  }, {
    start: 4145,
    length: 1,
    convRule: rule114
  }, {
    start: 4146,
    length: 6,
    convRule: rule84
  }, {
    start: 4152,
    length: 1,
    convRule: rule114
  }, {
    start: 4153,
    length: 2,
    convRule: rule84
  }, {
    start: 4155,
    length: 2,
    convRule: rule114
  }, {
    start: 4157,
    length: 2,
    convRule: rule84
  }, {
    start: 4159,
    length: 1,
    convRule: rule45
  }, {
    start: 4160,
    length: 10,
    convRule: rule8
  }, {
    start: 4170,
    length: 6,
    convRule: rule2
  }, {
    start: 4176,
    length: 6,
    convRule: rule45
  }, {
    start: 4182,
    length: 2,
    convRule: rule114
  }, {
    start: 4184,
    length: 2,
    convRule: rule84
  }, {
    start: 4186,
    length: 4,
    convRule: rule45
  }, {
    start: 4190,
    length: 3,
    convRule: rule84
  }, {
    start: 4193,
    length: 1,
    convRule: rule45
  }, {
    start: 4194,
    length: 3,
    convRule: rule114
  }, {
    start: 4197,
    length: 2,
    convRule: rule45
  }, {
    start: 4199,
    length: 7,
    convRule: rule114
  }, {
    start: 4206,
    length: 3,
    convRule: rule45
  }, {
    start: 4209,
    length: 4,
    convRule: rule84
  }, {
    start: 4213,
    length: 13,
    convRule: rule45
  }, {
    start: 4226,
    length: 1,
    convRule: rule84
  }, {
    start: 4227,
    length: 2,
    convRule: rule114
  }, {
    start: 4229,
    length: 2,
    convRule: rule84
  }, {
    start: 4231,
    length: 6,
    convRule: rule114
  }, {
    start: 4237,
    length: 1,
    convRule: rule84
  }, {
    start: 4238,
    length: 1,
    convRule: rule45
  }, {
    start: 4239,
    length: 1,
    convRule: rule114
  }, {
    start: 4240,
    length: 10,
    convRule: rule8
  }, {
    start: 4250,
    length: 3,
    convRule: rule114
  }, {
    start: 4253,
    length: 1,
    convRule: rule84
  }, {
    start: 4254,
    length: 2,
    convRule: rule13
  }, {
    start: 4256,
    length: 38,
    convRule: rule115
  }, {
    start: 4304,
    length: 43,
    convRule: rule45
  }, {
    start: 4347,
    length: 1,
    convRule: rule2
  }, {
    start: 4348,
    length: 1,
    convRule: rule83
  }, {
    start: 4352,
    length: 329,
    convRule: rule45
  }, {
    start: 4682,
    length: 4,
    convRule: rule45
  }, {
    start: 4688,
    length: 7,
    convRule: rule45
  }, {
    start: 4696,
    length: 1,
    convRule: rule45
  }, {
    start: 4698,
    length: 4,
    convRule: rule45
  }, {
    start: 4704,
    length: 41,
    convRule: rule45
  }, {
    start: 4746,
    length: 4,
    convRule: rule45
  }, {
    start: 4752,
    length: 33,
    convRule: rule45
  }, {
    start: 4786,
    length: 4,
    convRule: rule45
  }, {
    start: 4792,
    length: 7,
    convRule: rule45
  }, {
    start: 4800,
    length: 1,
    convRule: rule45
  }, {
    start: 4802,
    length: 4,
    convRule: rule45
  }, {
    start: 4808,
    length: 15,
    convRule: rule45
  }, {
    start: 4824,
    length: 57,
    convRule: rule45
  }, {
    start: 4882,
    length: 4,
    convRule: rule45
  }, {
    start: 4888,
    length: 67,
    convRule: rule45
  }, {
    start: 4957,
    length: 3,
    convRule: rule84
  }, {
    start: 4960,
    length: 1,
    convRule: rule13
  }, {
    start: 4961,
    length: 8,
    convRule: rule2
  }, {
    start: 4969,
    length: 20,
    convRule: rule17
  }, {
    start: 4992,
    length: 16,
    convRule: rule45
  }, {
    start: 5008,
    length: 10,
    convRule: rule13
  }, {
    start: 5024,
    length: 85,
    convRule: rule45
  }, {
    start: 5120,
    length: 1,
    convRule: rule7
  }, {
    start: 5121,
    length: 620,
    convRule: rule45
  }, {
    start: 5741,
    length: 2,
    convRule: rule2
  }, {
    start: 5743,
    length: 17,
    convRule: rule45
  }, {
    start: 5760,
    length: 1,
    convRule: rule1
  }, {
    start: 5761,
    length: 26,
    convRule: rule45
  }, {
    start: 5787,
    length: 1,
    convRule: rule4
  }, {
    start: 5788,
    length: 1,
    convRule: rule5
  }, {
    start: 5792,
    length: 75,
    convRule: rule45
  }, {
    start: 5867,
    length: 3,
    convRule: rule2
  }, {
    start: 5870,
    length: 3,
    convRule: rule116
  }, {
    start: 5888,
    length: 13,
    convRule: rule45
  }, {
    start: 5902,
    length: 4,
    convRule: rule45
  }, {
    start: 5906,
    length: 3,
    convRule: rule84
  }, {
    start: 5920,
    length: 18,
    convRule: rule45
  }, {
    start: 5938,
    length: 3,
    convRule: rule84
  }, {
    start: 5941,
    length: 2,
    convRule: rule2
  }, {
    start: 5952,
    length: 18,
    convRule: rule45
  }, {
    start: 5970,
    length: 2,
    convRule: rule84
  }, {
    start: 5984,
    length: 13,
    convRule: rule45
  }, {
    start: 5998,
    length: 3,
    convRule: rule45
  }, {
    start: 6002,
    length: 2,
    convRule: rule84
  }, {
    start: 6016,
    length: 52,
    convRule: rule45
  }, {
    start: 6068,
    length: 2,
    convRule: rule16
  }, {
    start: 6070,
    length: 1,
    convRule: rule114
  }, {
    start: 6071,
    length: 7,
    convRule: rule84
  }, {
    start: 6078,
    length: 8,
    convRule: rule114
  }, {
    start: 6086,
    length: 1,
    convRule: rule84
  }, {
    start: 6087,
    length: 2,
    convRule: rule114
  }, {
    start: 6089,
    length: 11,
    convRule: rule84
  }, {
    start: 6100,
    length: 3,
    convRule: rule2
  }, {
    start: 6103,
    length: 1,
    convRule: rule83
  }, {
    start: 6104,
    length: 3,
    convRule: rule2
  }, {
    start: 6107,
    length: 1,
    convRule: rule3
  }, {
    start: 6108,
    length: 1,
    convRule: rule45
  }, {
    start: 6109,
    length: 1,
    convRule: rule84
  }, {
    start: 6112,
    length: 10,
    convRule: rule8
  }, {
    start: 6128,
    length: 10,
    convRule: rule17
  }, {
    start: 6144,
    length: 6,
    convRule: rule2
  }, {
    start: 6150,
    length: 1,
    convRule: rule7
  }, {
    start: 6151,
    length: 4,
    convRule: rule2
  }, {
    start: 6155,
    length: 3,
    convRule: rule84
  }, {
    start: 6158,
    length: 1,
    convRule: rule1
  }, {
    start: 6160,
    length: 10,
    convRule: rule8
  }, {
    start: 6176,
    length: 35,
    convRule: rule45
  }, {
    start: 6211,
    length: 1,
    convRule: rule83
  }, {
    start: 6212,
    length: 52,
    convRule: rule45
  }, {
    start: 6272,
    length: 41,
    convRule: rule45
  }, {
    start: 6313,
    length: 1,
    convRule: rule84
  }, {
    start: 6314,
    length: 1,
    convRule: rule45
  }, {
    start: 6320,
    length: 70,
    convRule: rule45
  }, {
    start: 6400,
    length: 29,
    convRule: rule45
  }, {
    start: 6432,
    length: 3,
    convRule: rule84
  }, {
    start: 6435,
    length: 4,
    convRule: rule114
  }, {
    start: 6439,
    length: 2,
    convRule: rule84
  }, {
    start: 6441,
    length: 3,
    convRule: rule114
  }, {
    start: 6448,
    length: 2,
    convRule: rule114
  }, {
    start: 6450,
    length: 1,
    convRule: rule84
  }, {
    start: 6451,
    length: 6,
    convRule: rule114
  }, {
    start: 6457,
    length: 3,
    convRule: rule84
  }, {
    start: 6464,
    length: 1,
    convRule: rule13
  }, {
    start: 6468,
    length: 2,
    convRule: rule2
  }, {
    start: 6470,
    length: 10,
    convRule: rule8
  }, {
    start: 6480,
    length: 30,
    convRule: rule45
  }, {
    start: 6512,
    length: 5,
    convRule: rule45
  }, {
    start: 6528,
    length: 44,
    convRule: rule45
  }, {
    start: 6576,
    length: 17,
    convRule: rule114
  }, {
    start: 6593,
    length: 7,
    convRule: rule45
  }, {
    start: 6600,
    length: 2,
    convRule: rule114
  }, {
    start: 6608,
    length: 10,
    convRule: rule8
  }, {
    start: 6618,
    length: 1,
    convRule: rule17
  }, {
    start: 6622,
    length: 34,
    convRule: rule13
  }, {
    start: 6656,
    length: 23,
    convRule: rule45
  }, {
    start: 6679,
    length: 2,
    convRule: rule84
  }, {
    start: 6681,
    length: 3,
    convRule: rule114
  }, {
    start: 6686,
    length: 2,
    convRule: rule2
  }, {
    start: 6688,
    length: 53,
    convRule: rule45
  }, {
    start: 6741,
    length: 1,
    convRule: rule114
  }, {
    start: 6742,
    length: 1,
    convRule: rule84
  }, {
    start: 6743,
    length: 1,
    convRule: rule114
  }, {
    start: 6744,
    length: 7,
    convRule: rule84
  }, {
    start: 6752,
    length: 1,
    convRule: rule84
  }, {
    start: 6753,
    length: 1,
    convRule: rule114
  }, {
    start: 6754,
    length: 1,
    convRule: rule84
  }, {
    start: 6755,
    length: 2,
    convRule: rule114
  }, {
    start: 6757,
    length: 8,
    convRule: rule84
  }, {
    start: 6765,
    length: 6,
    convRule: rule114
  }, {
    start: 6771,
    length: 10,
    convRule: rule84
  }, {
    start: 6783,
    length: 1,
    convRule: rule84
  }, {
    start: 6784,
    length: 10,
    convRule: rule8
  }, {
    start: 6800,
    length: 10,
    convRule: rule8
  }, {
    start: 6816,
    length: 7,
    convRule: rule2
  }, {
    start: 6823,
    length: 1,
    convRule: rule83
  }, {
    start: 6824,
    length: 6,
    convRule: rule2
  }, {
    start: 6912,
    length: 4,
    convRule: rule84
  }, {
    start: 6916,
    length: 1,
    convRule: rule114
  }, {
    start: 6917,
    length: 47,
    convRule: rule45
  }, {
    start: 6964,
    length: 1,
    convRule: rule84
  }, {
    start: 6965,
    length: 1,
    convRule: rule114
  }, {
    start: 6966,
    length: 5,
    convRule: rule84
  }, {
    start: 6971,
    length: 1,
    convRule: rule114
  }, {
    start: 6972,
    length: 1,
    convRule: rule84
  }, {
    start: 6973,
    length: 5,
    convRule: rule114
  }, {
    start: 6978,
    length: 1,
    convRule: rule84
  }, {
    start: 6979,
    length: 2,
    convRule: rule114
  }, {
    start: 6981,
    length: 7,
    convRule: rule45
  }, {
    start: 6992,
    length: 10,
    convRule: rule8
  }, {
    start: 7002,
    length: 7,
    convRule: rule2
  }, {
    start: 7009,
    length: 10,
    convRule: rule13
  }, {
    start: 7019,
    length: 9,
    convRule: rule84
  }, {
    start: 7028,
    length: 9,
    convRule: rule13
  }, {
    start: 7040,
    length: 2,
    convRule: rule84
  }, {
    start: 7042,
    length: 1,
    convRule: rule114
  }, {
    start: 7043,
    length: 30,
    convRule: rule45
  }, {
    start: 7073,
    length: 1,
    convRule: rule114
  }, {
    start: 7074,
    length: 4,
    convRule: rule84
  }, {
    start: 7078,
    length: 2,
    convRule: rule114
  }, {
    start: 7080,
    length: 2,
    convRule: rule84
  }, {
    start: 7082,
    length: 1,
    convRule: rule114
  }, {
    start: 7086,
    length: 2,
    convRule: rule45
  }, {
    start: 7088,
    length: 10,
    convRule: rule8
  }, {
    start: 7104,
    length: 38,
    convRule: rule45
  }, {
    start: 7142,
    length: 1,
    convRule: rule84
  }, {
    start: 7143,
    length: 1,
    convRule: rule114
  }, {
    start: 7144,
    length: 2,
    convRule: rule84
  }, {
    start: 7146,
    length: 3,
    convRule: rule114
  }, {
    start: 7149,
    length: 1,
    convRule: rule84
  }, {
    start: 7150,
    length: 1,
    convRule: rule114
  }, {
    start: 7151,
    length: 3,
    convRule: rule84
  }, {
    start: 7154,
    length: 2,
    convRule: rule114
  }, {
    start: 7164,
    length: 4,
    convRule: rule2
  }, {
    start: 7168,
    length: 36,
    convRule: rule45
  }, {
    start: 7204,
    length: 8,
    convRule: rule114
  }, {
    start: 7212,
    length: 8,
    convRule: rule84
  }, {
    start: 7220,
    length: 2,
    convRule: rule114
  }, {
    start: 7222,
    length: 2,
    convRule: rule84
  }, {
    start: 7227,
    length: 5,
    convRule: rule2
  }, {
    start: 7232,
    length: 10,
    convRule: rule8
  }, {
    start: 7245,
    length: 3,
    convRule: rule45
  }, {
    start: 7248,
    length: 10,
    convRule: rule8
  }, {
    start: 7258,
    length: 30,
    convRule: rule45
  }, {
    start: 7288,
    length: 6,
    convRule: rule83
  }, {
    start: 7294,
    length: 2,
    convRule: rule2
  }, {
    start: 7376,
    length: 3,
    convRule: rule84
  }, {
    start: 7379,
    length: 1,
    convRule: rule2
  }, {
    start: 7380,
    length: 13,
    convRule: rule84
  }, {
    start: 7393,
    length: 1,
    convRule: rule114
  }, {
    start: 7394,
    length: 7,
    convRule: rule84
  }, {
    start: 7401,
    length: 4,
    convRule: rule45
  }, {
    start: 7405,
    length: 1,
    convRule: rule84
  }, {
    start: 7406,
    length: 4,
    convRule: rule45
  }, {
    start: 7410,
    length: 1,
    convRule: rule114
  }, {
    start: 7424,
    length: 44,
    convRule: rule14
  }, {
    start: 7468,
    length: 54,
    convRule: rule83
  }, {
    start: 7522,
    length: 22,
    convRule: rule14
  }, {
    start: 7544,
    length: 1,
    convRule: rule83
  }, {
    start: 7545,
    length: 1,
    convRule: rule117
  }, {
    start: 7546,
    length: 3,
    convRule: rule14
  }, {
    start: 7549,
    length: 1,
    convRule: rule118
  }, {
    start: 7550,
    length: 29,
    convRule: rule14
  }, {
    start: 7579,
    length: 37,
    convRule: rule83
  }, {
    start: 7616,
    length: 39,
    convRule: rule84
  }, {
    start: 7676,
    length: 4,
    convRule: rule84
  }, {
    start: 7680,
    length: 1,
    convRule: rule21
  }, {
    start: 7681,
    length: 1,
    convRule: rule22
  }, {
    start: 7682,
    length: 1,
    convRule: rule21
  }, {
    start: 7683,
    length: 1,
    convRule: rule22
  }, {
    start: 7684,
    length: 1,
    convRule: rule21
  }, {
    start: 7685,
    length: 1,
    convRule: rule22
  }, {
    start: 7686,
    length: 1,
    convRule: rule21
  }, {
    start: 7687,
    length: 1,
    convRule: rule22
  }, {
    start: 7688,
    length: 1,
    convRule: rule21
  }, {
    start: 7689,
    length: 1,
    convRule: rule22
  }, {
    start: 7690,
    length: 1,
    convRule: rule21
  }, {
    start: 7691,
    length: 1,
    convRule: rule22
  }, {
    start: 7692,
    length: 1,
    convRule: rule21
  }, {
    start: 7693,
    length: 1,
    convRule: rule22
  }, {
    start: 7694,
    length: 1,
    convRule: rule21
  }, {
    start: 7695,
    length: 1,
    convRule: rule22
  }, {
    start: 7696,
    length: 1,
    convRule: rule21
  }, {
    start: 7697,
    length: 1,
    convRule: rule22
  }, {
    start: 7698,
    length: 1,
    convRule: rule21
  }, {
    start: 7699,
    length: 1,
    convRule: rule22
  }, {
    start: 7700,
    length: 1,
    convRule: rule21
  }, {
    start: 7701,
    length: 1,
    convRule: rule22
  }, {
    start: 7702,
    length: 1,
    convRule: rule21
  }, {
    start: 7703,
    length: 1,
    convRule: rule22
  }, {
    start: 7704,
    length: 1,
    convRule: rule21
  }, {
    start: 7705,
    length: 1,
    convRule: rule22
  }, {
    start: 7706,
    length: 1,
    convRule: rule21
  }, {
    start: 7707,
    length: 1,
    convRule: rule22
  }, {
    start: 7708,
    length: 1,
    convRule: rule21
  }, {
    start: 7709,
    length: 1,
    convRule: rule22
  }, {
    start: 7710,
    length: 1,
    convRule: rule21
  }, {
    start: 7711,
    length: 1,
    convRule: rule22
  }, {
    start: 7712,
    length: 1,
    convRule: rule21
  }, {
    start: 7713,
    length: 1,
    convRule: rule22
  }, {
    start: 7714,
    length: 1,
    convRule: rule21
  }, {
    start: 7715,
    length: 1,
    convRule: rule22
  }, {
    start: 7716,
    length: 1,
    convRule: rule21
  }, {
    start: 7717,
    length: 1,
    convRule: rule22
  }, {
    start: 7718,
    length: 1,
    convRule: rule21
  }, {
    start: 7719,
    length: 1,
    convRule: rule22
  }, {
    start: 7720,
    length: 1,
    convRule: rule21
  }, {
    start: 7721,
    length: 1,
    convRule: rule22
  }, {
    start: 7722,
    length: 1,
    convRule: rule21
  }, {
    start: 7723,
    length: 1,
    convRule: rule22
  }, {
    start: 7724,
    length: 1,
    convRule: rule21
  }, {
    start: 7725,
    length: 1,
    convRule: rule22
  }, {
    start: 7726,
    length: 1,
    convRule: rule21
  }, {
    start: 7727,
    length: 1,
    convRule: rule22
  }, {
    start: 7728,
    length: 1,
    convRule: rule21
  }, {
    start: 7729,
    length: 1,
    convRule: rule22
  }, {
    start: 7730,
    length: 1,
    convRule: rule21
  }, {
    start: 7731,
    length: 1,
    convRule: rule22
  }, {
    start: 7732,
    length: 1,
    convRule: rule21
  }, {
    start: 7733,
    length: 1,
    convRule: rule22
  }, {
    start: 7734,
    length: 1,
    convRule: rule21
  }, {
    start: 7735,
    length: 1,
    convRule: rule22
  }, {
    start: 7736,
    length: 1,
    convRule: rule21
  }, {
    start: 7737,
    length: 1,
    convRule: rule22
  }, {
    start: 7738,
    length: 1,
    convRule: rule21
  }, {
    start: 7739,
    length: 1,
    convRule: rule22
  }, {
    start: 7740,
    length: 1,
    convRule: rule21
  }, {
    start: 7741,
    length: 1,
    convRule: rule22
  }, {
    start: 7742,
    length: 1,
    convRule: rule21
  }, {
    start: 7743,
    length: 1,
    convRule: rule22
  }, {
    start: 7744,
    length: 1,
    convRule: rule21
  }, {
    start: 7745,
    length: 1,
    convRule: rule22
  }, {
    start: 7746,
    length: 1,
    convRule: rule21
  }, {
    start: 7747,
    length: 1,
    convRule: rule22
  }, {
    start: 7748,
    length: 1,
    convRule: rule21
  }, {
    start: 7749,
    length: 1,
    convRule: rule22
  }, {
    start: 7750,
    length: 1,
    convRule: rule21
  }, {
    start: 7751,
    length: 1,
    convRule: rule22
  }, {
    start: 7752,
    length: 1,
    convRule: rule21
  }, {
    start: 7753,
    length: 1,
    convRule: rule22
  }, {
    start: 7754,
    length: 1,
    convRule: rule21
  }, {
    start: 7755,
    length: 1,
    convRule: rule22
  }, {
    start: 7756,
    length: 1,
    convRule: rule21
  }, {
    start: 7757,
    length: 1,
    convRule: rule22
  }, {
    start: 7758,
    length: 1,
    convRule: rule21
  }, {
    start: 7759,
    length: 1,
    convRule: rule22
  }, {
    start: 7760,
    length: 1,
    convRule: rule21
  }, {
    start: 7761,
    length: 1,
    convRule: rule22
  }, {
    start: 7762,
    length: 1,
    convRule: rule21
  }, {
    start: 7763,
    length: 1,
    convRule: rule22
  }, {
    start: 7764,
    length: 1,
    convRule: rule21
  }, {
    start: 7765,
    length: 1,
    convRule: rule22
  }, {
    start: 7766,
    length: 1,
    convRule: rule21
  }, {
    start: 7767,
    length: 1,
    convRule: rule22
  }, {
    start: 7768,
    length: 1,
    convRule: rule21
  }, {
    start: 7769,
    length: 1,
    convRule: rule22
  }, {
    start: 7770,
    length: 1,
    convRule: rule21
  }, {
    start: 7771,
    length: 1,
    convRule: rule22
  }, {
    start: 7772,
    length: 1,
    convRule: rule21
  }, {
    start: 7773,
    length: 1,
    convRule: rule22
  }, {
    start: 7774,
    length: 1,
    convRule: rule21
  }, {
    start: 7775,
    length: 1,
    convRule: rule22
  }, {
    start: 7776,
    length: 1,
    convRule: rule21
  }, {
    start: 7777,
    length: 1,
    convRule: rule22
  }, {
    start: 7778,
    length: 1,
    convRule: rule21
  }, {
    start: 7779,
    length: 1,
    convRule: rule22
  }, {
    start: 7780,
    length: 1,
    convRule: rule21
  }, {
    start: 7781,
    length: 1,
    convRule: rule22
  }, {
    start: 7782,
    length: 1,
    convRule: rule21
  }, {
    start: 7783,
    length: 1,
    convRule: rule22
  }, {
    start: 7784,
    length: 1,
    convRule: rule21
  }, {
    start: 7785,
    length: 1,
    convRule: rule22
  }, {
    start: 7786,
    length: 1,
    convRule: rule21
  }, {
    start: 7787,
    length: 1,
    convRule: rule22
  }, {
    start: 7788,
    length: 1,
    convRule: rule21
  }, {
    start: 7789,
    length: 1,
    convRule: rule22
  }, {
    start: 7790,
    length: 1,
    convRule: rule21
  }, {
    start: 7791,
    length: 1,
    convRule: rule22
  }, {
    start: 7792,
    length: 1,
    convRule: rule21
  }, {
    start: 7793,
    length: 1,
    convRule: rule22
  }, {
    start: 7794,
    length: 1,
    convRule: rule21
  }, {
    start: 7795,
    length: 1,
    convRule: rule22
  }, {
    start: 7796,
    length: 1,
    convRule: rule21
  }, {
    start: 7797,
    length: 1,
    convRule: rule22
  }, {
    start: 7798,
    length: 1,
    convRule: rule21
  }, {
    start: 7799,
    length: 1,
    convRule: rule22
  }, {
    start: 7800,
    length: 1,
    convRule: rule21
  }, {
    start: 7801,
    length: 1,
    convRule: rule22
  }, {
    start: 7802,
    length: 1,
    convRule: rule21
  }, {
    start: 7803,
    length: 1,
    convRule: rule22
  }, {
    start: 7804,
    length: 1,
    convRule: rule21
  }, {
    start: 7805,
    length: 1,
    convRule: rule22
  }, {
    start: 7806,
    length: 1,
    convRule: rule21
  }, {
    start: 7807,
    length: 1,
    convRule: rule22
  }, {
    start: 7808,
    length: 1,
    convRule: rule21
  }, {
    start: 7809,
    length: 1,
    convRule: rule22
  }, {
    start: 7810,
    length: 1,
    convRule: rule21
  }, {
    start: 7811,
    length: 1,
    convRule: rule22
  }, {
    start: 7812,
    length: 1,
    convRule: rule21
  }, {
    start: 7813,
    length: 1,
    convRule: rule22
  }, {
    start: 7814,
    length: 1,
    convRule: rule21
  }, {
    start: 7815,
    length: 1,
    convRule: rule22
  }, {
    start: 7816,
    length: 1,
    convRule: rule21
  }, {
    start: 7817,
    length: 1,
    convRule: rule22
  }, {
    start: 7818,
    length: 1,
    convRule: rule21
  }, {
    start: 7819,
    length: 1,
    convRule: rule22
  }, {
    start: 7820,
    length: 1,
    convRule: rule21
  }, {
    start: 7821,
    length: 1,
    convRule: rule22
  }, {
    start: 7822,
    length: 1,
    convRule: rule21
  }, {
    start: 7823,
    length: 1,
    convRule: rule22
  }, {
    start: 7824,
    length: 1,
    convRule: rule21
  }, {
    start: 7825,
    length: 1,
    convRule: rule22
  }, {
    start: 7826,
    length: 1,
    convRule: rule21
  }, {
    start: 7827,
    length: 1,
    convRule: rule22
  }, {
    start: 7828,
    length: 1,
    convRule: rule21
  }, {
    start: 7829,
    length: 1,
    convRule: rule22
  }, {
    start: 7830,
    length: 5,
    convRule: rule14
  }, {
    start: 7835,
    length: 1,
    convRule: rule119
  }, {
    start: 7836,
    length: 2,
    convRule: rule14
  }, {
    start: 7838,
    length: 1,
    convRule: rule120
  }, {
    start: 7839,
    length: 1,
    convRule: rule14
  }, {
    start: 7840,
    length: 1,
    convRule: rule21
  }, {
    start: 7841,
    length: 1,
    convRule: rule22
  }, {
    start: 7842,
    length: 1,
    convRule: rule21
  }, {
    start: 7843,
    length: 1,
    convRule: rule22
  }, {
    start: 7844,
    length: 1,
    convRule: rule21
  }, {
    start: 7845,
    length: 1,
    convRule: rule22
  }, {
    start: 7846,
    length: 1,
    convRule: rule21
  }, {
    start: 7847,
    length: 1,
    convRule: rule22
  }, {
    start: 7848,
    length: 1,
    convRule: rule21
  }, {
    start: 7849,
    length: 1,
    convRule: rule22
  }, {
    start: 7850,
    length: 1,
    convRule: rule21
  }, {
    start: 7851,
    length: 1,
    convRule: rule22
  }, {
    start: 7852,
    length: 1,
    convRule: rule21
  }, {
    start: 7853,
    length: 1,
    convRule: rule22
  }, {
    start: 7854,
    length: 1,
    convRule: rule21
  }, {
    start: 7855,
    length: 1,
    convRule: rule22
  }, {
    start: 7856,
    length: 1,
    convRule: rule21
  }, {
    start: 7857,
    length: 1,
    convRule: rule22
  }, {
    start: 7858,
    length: 1,
    convRule: rule21
  }, {
    start: 7859,
    length: 1,
    convRule: rule22
  }, {
    start: 7860,
    length: 1,
    convRule: rule21
  }, {
    start: 7861,
    length: 1,
    convRule: rule22
  }, {
    start: 7862,
    length: 1,
    convRule: rule21
  }, {
    start: 7863,
    length: 1,
    convRule: rule22
  }, {
    start: 7864,
    length: 1,
    convRule: rule21
  }, {
    start: 7865,
    length: 1,
    convRule: rule22
  }, {
    start: 7866,
    length: 1,
    convRule: rule21
  }, {
    start: 7867,
    length: 1,
    convRule: rule22
  }, {
    start: 7868,
    length: 1,
    convRule: rule21
  }, {
    start: 7869,
    length: 1,
    convRule: rule22
  }, {
    start: 7870,
    length: 1,
    convRule: rule21
  }, {
    start: 7871,
    length: 1,
    convRule: rule22
  }, {
    start: 7872,
    length: 1,
    convRule: rule21
  }, {
    start: 7873,
    length: 1,
    convRule: rule22
  }, {
    start: 7874,
    length: 1,
    convRule: rule21
  }, {
    start: 7875,
    length: 1,
    convRule: rule22
  }, {
    start: 7876,
    length: 1,
    convRule: rule21
  }, {
    start: 7877,
    length: 1,
    convRule: rule22
  }, {
    start: 7878,
    length: 1,
    convRule: rule21
  }, {
    start: 7879,
    length: 1,
    convRule: rule22
  }, {
    start: 7880,
    length: 1,
    convRule: rule21
  }, {
    start: 7881,
    length: 1,
    convRule: rule22
  }, {
    start: 7882,
    length: 1,
    convRule: rule21
  }, {
    start: 7883,
    length: 1,
    convRule: rule22
  }, {
    start: 7884,
    length: 1,
    convRule: rule21
  }, {
    start: 7885,
    length: 1,
    convRule: rule22
  }, {
    start: 7886,
    length: 1,
    convRule: rule21
  }, {
    start: 7887,
    length: 1,
    convRule: rule22
  }, {
    start: 7888,
    length: 1,
    convRule: rule21
  }, {
    start: 7889,
    length: 1,
    convRule: rule22
  }, {
    start: 7890,
    length: 1,
    convRule: rule21
  }, {
    start: 7891,
    length: 1,
    convRule: rule22
  }, {
    start: 7892,
    length: 1,
    convRule: rule21
  }, {
    start: 7893,
    length: 1,
    convRule: rule22
  }, {
    start: 7894,
    length: 1,
    convRule: rule21
  }, {
    start: 7895,
    length: 1,
    convRule: rule22
  }, {
    start: 7896,
    length: 1,
    convRule: rule21
  }, {
    start: 7897,
    length: 1,
    convRule: rule22
  }, {
    start: 7898,
    length: 1,
    convRule: rule21
  }, {
    start: 7899,
    length: 1,
    convRule: rule22
  }, {
    start: 7900,
    length: 1,
    convRule: rule21
  }, {
    start: 7901,
    length: 1,
    convRule: rule22
  }, {
    start: 7902,
    length: 1,
    convRule: rule21
  }, {
    start: 7903,
    length: 1,
    convRule: rule22
  }, {
    start: 7904,
    length: 1,
    convRule: rule21
  }, {
    start: 7905,
    length: 1,
    convRule: rule22
  }, {
    start: 7906,
    length: 1,
    convRule: rule21
  }, {
    start: 7907,
    length: 1,
    convRule: rule22
  }, {
    start: 7908,
    length: 1,
    convRule: rule21
  }, {
    start: 7909,
    length: 1,
    convRule: rule22
  }, {
    start: 7910,
    length: 1,
    convRule: rule21
  }, {
    start: 7911,
    length: 1,
    convRule: rule22
  }, {
    start: 7912,
    length: 1,
    convRule: rule21
  }, {
    start: 7913,
    length: 1,
    convRule: rule22
  }, {
    start: 7914,
    length: 1,
    convRule: rule21
  }, {
    start: 7915,
    length: 1,
    convRule: rule22
  }, {
    start: 7916,
    length: 1,
    convRule: rule21
  }, {
    start: 7917,
    length: 1,
    convRule: rule22
  }, {
    start: 7918,
    length: 1,
    convRule: rule21
  }, {
    start: 7919,
    length: 1,
    convRule: rule22
  }, {
    start: 7920,
    length: 1,
    convRule: rule21
  }, {
    start: 7921,
    length: 1,
    convRule: rule22
  }, {
    start: 7922,
    length: 1,
    convRule: rule21
  }, {
    start: 7923,
    length: 1,
    convRule: rule22
  }, {
    start: 7924,
    length: 1,
    convRule: rule21
  }, {
    start: 7925,
    length: 1,
    convRule: rule22
  }, {
    start: 7926,
    length: 1,
    convRule: rule21
  }, {
    start: 7927,
    length: 1,
    convRule: rule22
  }, {
    start: 7928,
    length: 1,
    convRule: rule21
  }, {
    start: 7929,
    length: 1,
    convRule: rule22
  }, {
    start: 7930,
    length: 1,
    convRule: rule21
  }, {
    start: 7931,
    length: 1,
    convRule: rule22
  }, {
    start: 7932,
    length: 1,
    convRule: rule21
  }, {
    start: 7933,
    length: 1,
    convRule: rule22
  }, {
    start: 7934,
    length: 1,
    convRule: rule21
  }, {
    start: 7935,
    length: 1,
    convRule: rule22
  }, {
    start: 7936,
    length: 8,
    convRule: rule121
  }, {
    start: 7944,
    length: 8,
    convRule: rule122
  }, {
    start: 7952,
    length: 6,
    convRule: rule121
  }, {
    start: 7960,
    length: 6,
    convRule: rule122
  }, {
    start: 7968,
    length: 8,
    convRule: rule121
  }, {
    start: 7976,
    length: 8,
    convRule: rule122
  }, {
    start: 7984,
    length: 8,
    convRule: rule121
  }, {
    start: 7992,
    length: 8,
    convRule: rule122
  }, {
    start: 8000,
    length: 6,
    convRule: rule121
  }, {
    start: 8008,
    length: 6,
    convRule: rule122
  }, {
    start: 8016,
    length: 1,
    convRule: rule14
  }, {
    start: 8017,
    length: 1,
    convRule: rule121
  }, {
    start: 8018,
    length: 1,
    convRule: rule14
  }, {
    start: 8019,
    length: 1,
    convRule: rule121
  }, {
    start: 8020,
    length: 1,
    convRule: rule14
  }, {
    start: 8021,
    length: 1,
    convRule: rule121
  }, {
    start: 8022,
    length: 1,
    convRule: rule14
  }, {
    start: 8023,
    length: 1,
    convRule: rule121
  }, {
    start: 8025,
    length: 1,
    convRule: rule122
  }, {
    start: 8027,
    length: 1,
    convRule: rule122
  }, {
    start: 8029,
    length: 1,
    convRule: rule122
  }, {
    start: 8031,
    length: 1,
    convRule: rule122
  }, {
    start: 8032,
    length: 8,
    convRule: rule121
  }, {
    start: 8040,
    length: 8,
    convRule: rule122
  }, {
    start: 8048,
    length: 2,
    convRule: rule123
  }, {
    start: 8050,
    length: 4,
    convRule: rule124
  }, {
    start: 8054,
    length: 2,
    convRule: rule125
  }, {
    start: 8056,
    length: 2,
    convRule: rule126
  }, {
    start: 8058,
    length: 2,
    convRule: rule127
  }, {
    start: 8060,
    length: 2,
    convRule: rule128
  }, {
    start: 8064,
    length: 8,
    convRule: rule121
  }, {
    start: 8072,
    length: 8,
    convRule: rule129
  }, {
    start: 8080,
    length: 8,
    convRule: rule121
  }, {
    start: 8088,
    length: 8,
    convRule: rule129
  }, {
    start: 8096,
    length: 8,
    convRule: rule121
  }, {
    start: 8104,
    length: 8,
    convRule: rule129
  }, {
    start: 8112,
    length: 2,
    convRule: rule121
  }, {
    start: 8114,
    length: 1,
    convRule: rule14
  }, {
    start: 8115,
    length: 1,
    convRule: rule130
  }, {
    start: 8116,
    length: 1,
    convRule: rule14
  }, {
    start: 8118,
    length: 2,
    convRule: rule14
  }, {
    start: 8120,
    length: 2,
    convRule: rule122
  }, {
    start: 8122,
    length: 2,
    convRule: rule131
  }, {
    start: 8124,
    length: 1,
    convRule: rule132
  }, {
    start: 8125,
    length: 1,
    convRule: rule10
  }, {
    start: 8126,
    length: 1,
    convRule: rule133
  }, {
    start: 8127,
    length: 3,
    convRule: rule10
  }, {
    start: 8130,
    length: 1,
    convRule: rule14
  }, {
    start: 8131,
    length: 1,
    convRule: rule130
  }, {
    start: 8132,
    length: 1,
    convRule: rule14
  }, {
    start: 8134,
    length: 2,
    convRule: rule14
  }, {
    start: 8136,
    length: 4,
    convRule: rule134
  }, {
    start: 8140,
    length: 1,
    convRule: rule132
  }, {
    start: 8141,
    length: 3,
    convRule: rule10
  }, {
    start: 8144,
    length: 2,
    convRule: rule121
  }, {
    start: 8146,
    length: 2,
    convRule: rule14
  }, {
    start: 8150,
    length: 2,
    convRule: rule14
  }, {
    start: 8152,
    length: 2,
    convRule: rule122
  }, {
    start: 8154,
    length: 2,
    convRule: rule135
  }, {
    start: 8157,
    length: 3,
    convRule: rule10
  }, {
    start: 8160,
    length: 2,
    convRule: rule121
  }, {
    start: 8162,
    length: 3,
    convRule: rule14
  }, {
    start: 8165,
    length: 1,
    convRule: rule104
  }, {
    start: 8166,
    length: 2,
    convRule: rule14
  }, {
    start: 8168,
    length: 2,
    convRule: rule122
  }, {
    start: 8170,
    length: 2,
    convRule: rule136
  }, {
    start: 8172,
    length: 1,
    convRule: rule107
  }, {
    start: 8173,
    length: 3,
    convRule: rule10
  }, {
    start: 8178,
    length: 1,
    convRule: rule14
  }, {
    start: 8179,
    length: 1,
    convRule: rule130
  }, {
    start: 8180,
    length: 1,
    convRule: rule14
  }, {
    start: 8182,
    length: 2,
    convRule: rule14
  }, {
    start: 8184,
    length: 2,
    convRule: rule137
  }, {
    start: 8186,
    length: 2,
    convRule: rule138
  }, {
    start: 8188,
    length: 1,
    convRule: rule132
  }, {
    start: 8189,
    length: 2,
    convRule: rule10
  }, {
    start: 8192,
    length: 11,
    convRule: rule1
  }, {
    start: 8203,
    length: 5,
    convRule: rule16
  }, {
    start: 8208,
    length: 6,
    convRule: rule7
  }, {
    start: 8214,
    length: 2,
    convRule: rule2
  }, {
    start: 8216,
    length: 1,
    convRule: rule15
  }, {
    start: 8217,
    length: 1,
    convRule: rule19
  }, {
    start: 8218,
    length: 1,
    convRule: rule4
  }, {
    start: 8219,
    length: 2,
    convRule: rule15
  }, {
    start: 8221,
    length: 1,
    convRule: rule19
  }, {
    start: 8222,
    length: 1,
    convRule: rule4
  }, {
    start: 8223,
    length: 1,
    convRule: rule15
  }, {
    start: 8224,
    length: 8,
    convRule: rule2
  }, {
    start: 8232,
    length: 1,
    convRule: rule139
  }, {
    start: 8233,
    length: 1,
    convRule: rule140
  }, {
    start: 8234,
    length: 5,
    convRule: rule16
  }, {
    start: 8239,
    length: 1,
    convRule: rule1
  }, {
    start: 8240,
    length: 9,
    convRule: rule2
  }, {
    start: 8249,
    length: 1,
    convRule: rule15
  }, {
    start: 8250,
    length: 1,
    convRule: rule19
  }, {
    start: 8251,
    length: 4,
    convRule: rule2
  }, {
    start: 8255,
    length: 2,
    convRule: rule11
  }, {
    start: 8257,
    length: 3,
    convRule: rule2
  }, {
    start: 8260,
    length: 1,
    convRule: rule6
  }, {
    start: 8261,
    length: 1,
    convRule: rule4
  }, {
    start: 8262,
    length: 1,
    convRule: rule5
  }, {
    start: 8263,
    length: 11,
    convRule: rule2
  }, {
    start: 8274,
    length: 1,
    convRule: rule6
  }, {
    start: 8275,
    length: 1,
    convRule: rule2
  }, {
    start: 8276,
    length: 1,
    convRule: rule11
  }, {
    start: 8277,
    length: 10,
    convRule: rule2
  }, {
    start: 8287,
    length: 1,
    convRule: rule1
  }, {
    start: 8288,
    length: 5,
    convRule: rule16
  }, {
    start: 8298,
    length: 6,
    convRule: rule16
  }, {
    start: 8304,
    length: 1,
    convRule: rule17
  }, {
    start: 8305,
    length: 1,
    convRule: rule83
  }, {
    start: 8308,
    length: 6,
    convRule: rule17
  }, {
    start: 8314,
    length: 3,
    convRule: rule6
  }, {
    start: 8317,
    length: 1,
    convRule: rule4
  }, {
    start: 8318,
    length: 1,
    convRule: rule5
  }, {
    start: 8319,
    length: 1,
    convRule: rule83
  }, {
    start: 8320,
    length: 10,
    convRule: rule17
  }, {
    start: 8330,
    length: 3,
    convRule: rule6
  }, {
    start: 8333,
    length: 1,
    convRule: rule4
  }, {
    start: 8334,
    length: 1,
    convRule: rule5
  }, {
    start: 8336,
    length: 13,
    convRule: rule83
  }, {
    start: 8352,
    length: 26,
    convRule: rule3
  }, {
    start: 8400,
    length: 13,
    convRule: rule84
  }, {
    start: 8413,
    length: 4,
    convRule: rule109
  }, {
    start: 8417,
    length: 1,
    convRule: rule84
  }, {
    start: 8418,
    length: 3,
    convRule: rule109
  }, {
    start: 8421,
    length: 12,
    convRule: rule84
  }, {
    start: 8448,
    length: 2,
    convRule: rule13
  }, {
    start: 8450,
    length: 1,
    convRule: rule98
  }, {
    start: 8451,
    length: 4,
    convRule: rule13
  }, {
    start: 8455,
    length: 1,
    convRule: rule98
  }, {
    start: 8456,
    length: 2,
    convRule: rule13
  }, {
    start: 8458,
    length: 1,
    convRule: rule14
  }, {
    start: 8459,
    length: 3,
    convRule: rule98
  }, {
    start: 8462,
    length: 2,
    convRule: rule14
  }, {
    start: 8464,
    length: 3,
    convRule: rule98
  }, {
    start: 8467,
    length: 1,
    convRule: rule14
  }, {
    start: 8468,
    length: 1,
    convRule: rule13
  }, {
    start: 8469,
    length: 1,
    convRule: rule98
  }, {
    start: 8470,
    length: 2,
    convRule: rule13
  }, {
    start: 8472,
    length: 1,
    convRule: rule6
  }, {
    start: 8473,
    length: 5,
    convRule: rule98
  }, {
    start: 8478,
    length: 6,
    convRule: rule13
  }, {
    start: 8484,
    length: 1,
    convRule: rule98
  }, {
    start: 8485,
    length: 1,
    convRule: rule13
  }, {
    start: 8486,
    length: 1,
    convRule: rule141
  }, {
    start: 8487,
    length: 1,
    convRule: rule13
  }, {
    start: 8488,
    length: 1,
    convRule: rule98
  }, {
    start: 8489,
    length: 1,
    convRule: rule13
  }, {
    start: 8490,
    length: 1,
    convRule: rule142
  }, {
    start: 8491,
    length: 1,
    convRule: rule143
  }, {
    start: 8492,
    length: 2,
    convRule: rule98
  }, {
    start: 8494,
    length: 1,
    convRule: rule13
  }, {
    start: 8495,
    length: 1,
    convRule: rule14
  }, {
    start: 8496,
    length: 2,
    convRule: rule98
  }, {
    start: 8498,
    length: 1,
    convRule: rule144
  }, {
    start: 8499,
    length: 1,
    convRule: rule98
  }, {
    start: 8500,
    length: 1,
    convRule: rule14
  }, {
    start: 8501,
    length: 4,
    convRule: rule45
  }, {
    start: 8505,
    length: 1,
    convRule: rule14
  }, {
    start: 8506,
    length: 2,
    convRule: rule13
  }, {
    start: 8508,
    length: 2,
    convRule: rule14
  }, {
    start: 8510,
    length: 2,
    convRule: rule98
  }, {
    start: 8512,
    length: 5,
    convRule: rule6
  }, {
    start: 8517,
    length: 1,
    convRule: rule98
  }, {
    start: 8518,
    length: 4,
    convRule: rule14
  }, {
    start: 8522,
    length: 1,
    convRule: rule13
  }, {
    start: 8523,
    length: 1,
    convRule: rule6
  }, {
    start: 8524,
    length: 2,
    convRule: rule13
  }, {
    start: 8526,
    length: 1,
    convRule: rule145
  }, {
    start: 8527,
    length: 1,
    convRule: rule13
  }, {
    start: 8528,
    length: 16,
    convRule: rule17
  }, {
    start: 8544,
    length: 16,
    convRule: rule146
  }, {
    start: 8560,
    length: 16,
    convRule: rule147
  }, {
    start: 8576,
    length: 3,
    convRule: rule116
  }, {
    start: 8579,
    length: 1,
    convRule: rule21
  }, {
    start: 8580,
    length: 1,
    convRule: rule22
  }, {
    start: 8581,
    length: 4,
    convRule: rule116
  }, {
    start: 8585,
    length: 1,
    convRule: rule17
  }, {
    start: 8592,
    length: 5,
    convRule: rule6
  }, {
    start: 8597,
    length: 5,
    convRule: rule13
  }, {
    start: 8602,
    length: 2,
    convRule: rule6
  }, {
    start: 8604,
    length: 4,
    convRule: rule13
  }, {
    start: 8608,
    length: 1,
    convRule: rule6
  }, {
    start: 8609,
    length: 2,
    convRule: rule13
  }, {
    start: 8611,
    length: 1,
    convRule: rule6
  }, {
    start: 8612,
    length: 2,
    convRule: rule13
  }, {
    start: 8614,
    length: 1,
    convRule: rule6
  }, {
    start: 8615,
    length: 7,
    convRule: rule13
  }, {
    start: 8622,
    length: 1,
    convRule: rule6
  }, {
    start: 8623,
    length: 31,
    convRule: rule13
  }, {
    start: 8654,
    length: 2,
    convRule: rule6
  }, {
    start: 8656,
    length: 2,
    convRule: rule13
  }, {
    start: 8658,
    length: 1,
    convRule: rule6
  }, {
    start: 8659,
    length: 1,
    convRule: rule13
  }, {
    start: 8660,
    length: 1,
    convRule: rule6
  }, {
    start: 8661,
    length: 31,
    convRule: rule13
  }, {
    start: 8692,
    length: 268,
    convRule: rule6
  }, {
    start: 8960,
    length: 8,
    convRule: rule13
  }, {
    start: 8968,
    length: 4,
    convRule: rule6
  }, {
    start: 8972,
    length: 20,
    convRule: rule13
  }, {
    start: 8992,
    length: 2,
    convRule: rule6
  }, {
    start: 8994,
    length: 7,
    convRule: rule13
  }, {
    start: 9001,
    length: 1,
    convRule: rule4
  }, {
    start: 9002,
    length: 1,
    convRule: rule5
  }, {
    start: 9003,
    length: 81,
    convRule: rule13
  }, {
    start: 9084,
    length: 1,
    convRule: rule6
  }, {
    start: 9085,
    length: 30,
    convRule: rule13
  }, {
    start: 9115,
    length: 25,
    convRule: rule6
  }, {
    start: 9140,
    length: 40,
    convRule: rule13
  }, {
    start: 9180,
    length: 6,
    convRule: rule6
  }, {
    start: 9186,
    length: 18,
    convRule: rule13
  }, {
    start: 9216,
    length: 39,
    convRule: rule13
  }, {
    start: 9280,
    length: 11,
    convRule: rule13
  }, {
    start: 9312,
    length: 60,
    convRule: rule17
  }, {
    start: 9372,
    length: 26,
    convRule: rule13
  }, {
    start: 9398,
    length: 26,
    convRule: rule148
  }, {
    start: 9424,
    length: 26,
    convRule: rule149
  }, {
    start: 9450,
    length: 22,
    convRule: rule17
  }, {
    start: 9472,
    length: 183,
    convRule: rule13
  }, {
    start: 9655,
    length: 1,
    convRule: rule6
  }, {
    start: 9656,
    length: 9,
    convRule: rule13
  }, {
    start: 9665,
    length: 1,
    convRule: rule6
  }, {
    start: 9666,
    length: 54,
    convRule: rule13
  }, {
    start: 9720,
    length: 8,
    convRule: rule6
  }, {
    start: 9728,
    length: 111,
    convRule: rule13
  }, {
    start: 9839,
    length: 1,
    convRule: rule6
  }, {
    start: 9840,
    length: 144,
    convRule: rule13
  }, {
    start: 9985,
    length: 103,
    convRule: rule13
  }, {
    start: 10088,
    length: 1,
    convRule: rule4
  }, {
    start: 10089,
    length: 1,
    convRule: rule5
  }, {
    start: 10090,
    length: 1,
    convRule: rule4
  }, {
    start: 10091,
    length: 1,
    convRule: rule5
  }, {
    start: 10092,
    length: 1,
    convRule: rule4
  }, {
    start: 10093,
    length: 1,
    convRule: rule5
  }, {
    start: 10094,
    length: 1,
    convRule: rule4
  }, {
    start: 10095,
    length: 1,
    convRule: rule5
  }, {
    start: 10096,
    length: 1,
    convRule: rule4
  }, {
    start: 10097,
    length: 1,
    convRule: rule5
  }, {
    start: 10098,
    length: 1,
    convRule: rule4
  }, {
    start: 10099,
    length: 1,
    convRule: rule5
  }, {
    start: 10100,
    length: 1,
    convRule: rule4
  }, {
    start: 10101,
    length: 1,
    convRule: rule5
  }, {
    start: 10102,
    length: 30,
    convRule: rule17
  }, {
    start: 10132,
    length: 44,
    convRule: rule13
  }, {
    start: 10176,
    length: 5,
    convRule: rule6
  }, {
    start: 10181,
    length: 1,
    convRule: rule4
  }, {
    start: 10182,
    length: 1,
    convRule: rule5
  }, {
    start: 10183,
    length: 4,
    convRule: rule6
  }, {
    start: 10188,
    length: 1,
    convRule: rule6
  }, {
    start: 10190,
    length: 24,
    convRule: rule6
  }, {
    start: 10214,
    length: 1,
    convRule: rule4
  }, {
    start: 10215,
    length: 1,
    convRule: rule5
  }, {
    start: 10216,
    length: 1,
    convRule: rule4
  }, {
    start: 10217,
    length: 1,
    convRule: rule5
  }, {
    start: 10218,
    length: 1,
    convRule: rule4
  }, {
    start: 10219,
    length: 1,
    convRule: rule5
  }, {
    start: 10220,
    length: 1,
    convRule: rule4
  }, {
    start: 10221,
    length: 1,
    convRule: rule5
  }, {
    start: 10222,
    length: 1,
    convRule: rule4
  }, {
    start: 10223,
    length: 1,
    convRule: rule5
  }, {
    start: 10224,
    length: 16,
    convRule: rule6
  }, {
    start: 10240,
    length: 256,
    convRule: rule13
  }, {
    start: 10496,
    length: 131,
    convRule: rule6
  }, {
    start: 10627,
    length: 1,
    convRule: rule4
  }, {
    start: 10628,
    length: 1,
    convRule: rule5
  }, {
    start: 10629,
    length: 1,
    convRule: rule4
  }, {
    start: 10630,
    length: 1,
    convRule: rule5
  }, {
    start: 10631,
    length: 1,
    convRule: rule4
  }, {
    start: 10632,
    length: 1,
    convRule: rule5
  }, {
    start: 10633,
    length: 1,
    convRule: rule4
  }, {
    start: 10634,
    length: 1,
    convRule: rule5
  }, {
    start: 10635,
    length: 1,
    convRule: rule4
  }, {
    start: 10636,
    length: 1,
    convRule: rule5
  }, {
    start: 10637,
    length: 1,
    convRule: rule4
  }, {
    start: 10638,
    length: 1,
    convRule: rule5
  }, {
    start: 10639,
    length: 1,
    convRule: rule4
  }, {
    start: 10640,
    length: 1,
    convRule: rule5
  }, {
    start: 10641,
    length: 1,
    convRule: rule4
  }, {
    start: 10642,
    length: 1,
    convRule: rule5
  }, {
    start: 10643,
    length: 1,
    convRule: rule4
  }, {
    start: 10644,
    length: 1,
    convRule: rule5
  }, {
    start: 10645,
    length: 1,
    convRule: rule4
  }, {
    start: 10646,
    length: 1,
    convRule: rule5
  }, {
    start: 10647,
    length: 1,
    convRule: rule4
  }, {
    start: 10648,
    length: 1,
    convRule: rule5
  }, {
    start: 10649,
    length: 63,
    convRule: rule6
  }, {
    start: 10712,
    length: 1,
    convRule: rule4
  }, {
    start: 10713,
    length: 1,
    convRule: rule5
  }, {
    start: 10714,
    length: 1,
    convRule: rule4
  }, {
    start: 10715,
    length: 1,
    convRule: rule5
  }, {
    start: 10716,
    length: 32,
    convRule: rule6
  }, {
    start: 10748,
    length: 1,
    convRule: rule4
  }, {
    start: 10749,
    length: 1,
    convRule: rule5
  }, {
    start: 10750,
    length: 258,
    convRule: rule6
  }, {
    start: 11008,
    length: 48,
    convRule: rule13
  }, {
    start: 11056,
    length: 21,
    convRule: rule6
  }, {
    start: 11077,
    length: 2,
    convRule: rule13
  }, {
    start: 11079,
    length: 6,
    convRule: rule6
  }, {
    start: 11088,
    length: 10,
    convRule: rule13
  }, {
    start: 11264,
    length: 47,
    convRule: rule112
  }, {
    start: 11312,
    length: 47,
    convRule: rule113
  }, {
    start: 11360,
    length: 1,
    convRule: rule21
  }, {
    start: 11361,
    length: 1,
    convRule: rule22
  }, {
    start: 11362,
    length: 1,
    convRule: rule150
  }, {
    start: 11363,
    length: 1,
    convRule: rule151
  }, {
    start: 11364,
    length: 1,
    convRule: rule152
  }, {
    start: 11365,
    length: 1,
    convRule: rule153
  }, {
    start: 11366,
    length: 1,
    convRule: rule154
  }, {
    start: 11367,
    length: 1,
    convRule: rule21
  }, {
    start: 11368,
    length: 1,
    convRule: rule22
  }, {
    start: 11369,
    length: 1,
    convRule: rule21
  }, {
    start: 11370,
    length: 1,
    convRule: rule22
  }, {
    start: 11371,
    length: 1,
    convRule: rule21
  }, {
    start: 11372,
    length: 1,
    convRule: rule22
  }, {
    start: 11373,
    length: 1,
    convRule: rule155
  }, {
    start: 11374,
    length: 1,
    convRule: rule156
  }, {
    start: 11375,
    length: 1,
    convRule: rule157
  }, {
    start: 11376,
    length: 1,
    convRule: rule158
  }, {
    start: 11377,
    length: 1,
    convRule: rule14
  }, {
    start: 11378,
    length: 1,
    convRule: rule21
  }, {
    start: 11379,
    length: 1,
    convRule: rule22
  }, {
    start: 11380,
    length: 1,
    convRule: rule14
  }, {
    start: 11381,
    length: 1,
    convRule: rule21
  }, {
    start: 11382,
    length: 1,
    convRule: rule22
  }, {
    start: 11383,
    length: 6,
    convRule: rule14
  }, {
    start: 11389,
    length: 1,
    convRule: rule83
  }, {
    start: 11390,
    length: 2,
    convRule: rule159
  }, {
    start: 11392,
    length: 1,
    convRule: rule21
  }, {
    start: 11393,
    length: 1,
    convRule: rule22
  }, {
    start: 11394,
    length: 1,
    convRule: rule21
  }, {
    start: 11395,
    length: 1,
    convRule: rule22
  }, {
    start: 11396,
    length: 1,
    convRule: rule21
  }, {
    start: 11397,
    length: 1,
    convRule: rule22
  }, {
    start: 11398,
    length: 1,
    convRule: rule21
  }, {
    start: 11399,
    length: 1,
    convRule: rule22
  }, {
    start: 11400,
    length: 1,
    convRule: rule21
  }, {
    start: 11401,
    length: 1,
    convRule: rule22
  }, {
    start: 11402,
    length: 1,
    convRule: rule21
  }, {
    start: 11403,
    length: 1,
    convRule: rule22
  }, {
    start: 11404,
    length: 1,
    convRule: rule21
  }, {
    start: 11405,
    length: 1,
    convRule: rule22
  }, {
    start: 11406,
    length: 1,
    convRule: rule21
  }, {
    start: 11407,
    length: 1,
    convRule: rule22
  }, {
    start: 11408,
    length: 1,
    convRule: rule21
  }, {
    start: 11409,
    length: 1,
    convRule: rule22
  }, {
    start: 11410,
    length: 1,
    convRule: rule21
  }, {
    start: 11411,
    length: 1,
    convRule: rule22
  }, {
    start: 11412,
    length: 1,
    convRule: rule21
  }, {
    start: 11413,
    length: 1,
    convRule: rule22
  }, {
    start: 11414,
    length: 1,
    convRule: rule21
  }, {
    start: 11415,
    length: 1,
    convRule: rule22
  }, {
    start: 11416,
    length: 1,
    convRule: rule21
  }, {
    start: 11417,
    length: 1,
    convRule: rule22
  }, {
    start: 11418,
    length: 1,
    convRule: rule21
  }, {
    start: 11419,
    length: 1,
    convRule: rule22
  }, {
    start: 11420,
    length: 1,
    convRule: rule21
  }, {
    start: 11421,
    length: 1,
    convRule: rule22
  }, {
    start: 11422,
    length: 1,
    convRule: rule21
  }, {
    start: 11423,
    length: 1,
    convRule: rule22
  }, {
    start: 11424,
    length: 1,
    convRule: rule21
  }, {
    start: 11425,
    length: 1,
    convRule: rule22
  }, {
    start: 11426,
    length: 1,
    convRule: rule21
  }, {
    start: 11427,
    length: 1,
    convRule: rule22
  }, {
    start: 11428,
    length: 1,
    convRule: rule21
  }, {
    start: 11429,
    length: 1,
    convRule: rule22
  }, {
    start: 11430,
    length: 1,
    convRule: rule21
  }, {
    start: 11431,
    length: 1,
    convRule: rule22
  }, {
    start: 11432,
    length: 1,
    convRule: rule21
  }, {
    start: 11433,
    length: 1,
    convRule: rule22
  }, {
    start: 11434,
    length: 1,
    convRule: rule21
  }, {
    start: 11435,
    length: 1,
    convRule: rule22
  }, {
    start: 11436,
    length: 1,
    convRule: rule21
  }, {
    start: 11437,
    length: 1,
    convRule: rule22
  }, {
    start: 11438,
    length: 1,
    convRule: rule21
  }, {
    start: 11439,
    length: 1,
    convRule: rule22
  }, {
    start: 11440,
    length: 1,
    convRule: rule21
  }, {
    start: 11441,
    length: 1,
    convRule: rule22
  }, {
    start: 11442,
    length: 1,
    convRule: rule21
  }, {
    start: 11443,
    length: 1,
    convRule: rule22
  }, {
    start: 11444,
    length: 1,
    convRule: rule21
  }, {
    start: 11445,
    length: 1,
    convRule: rule22
  }, {
    start: 11446,
    length: 1,
    convRule: rule21
  }, {
    start: 11447,
    length: 1,
    convRule: rule22
  }, {
    start: 11448,
    length: 1,
    convRule: rule21
  }, {
    start: 11449,
    length: 1,
    convRule: rule22
  }, {
    start: 11450,
    length: 1,
    convRule: rule21
  }, {
    start: 11451,
    length: 1,
    convRule: rule22
  }, {
    start: 11452,
    length: 1,
    convRule: rule21
  }, {
    start: 11453,
    length: 1,
    convRule: rule22
  }, {
    start: 11454,
    length: 1,
    convRule: rule21
  }, {
    start: 11455,
    length: 1,
    convRule: rule22
  }, {
    start: 11456,
    length: 1,
    convRule: rule21
  }, {
    start: 11457,
    length: 1,
    convRule: rule22
  }, {
    start: 11458,
    length: 1,
    convRule: rule21
  }, {
    start: 11459,
    length: 1,
    convRule: rule22
  }, {
    start: 11460,
    length: 1,
    convRule: rule21
  }, {
    start: 11461,
    length: 1,
    convRule: rule22
  }, {
    start: 11462,
    length: 1,
    convRule: rule21
  }, {
    start: 11463,
    length: 1,
    convRule: rule22
  }, {
    start: 11464,
    length: 1,
    convRule: rule21
  }, {
    start: 11465,
    length: 1,
    convRule: rule22
  }, {
    start: 11466,
    length: 1,
    convRule: rule21
  }, {
    start: 11467,
    length: 1,
    convRule: rule22
  }, {
    start: 11468,
    length: 1,
    convRule: rule21
  }, {
    start: 11469,
    length: 1,
    convRule: rule22
  }, {
    start: 11470,
    length: 1,
    convRule: rule21
  }, {
    start: 11471,
    length: 1,
    convRule: rule22
  }, {
    start: 11472,
    length: 1,
    convRule: rule21
  }, {
    start: 11473,
    length: 1,
    convRule: rule22
  }, {
    start: 11474,
    length: 1,
    convRule: rule21
  }, {
    start: 11475,
    length: 1,
    convRule: rule22
  }, {
    start: 11476,
    length: 1,
    convRule: rule21
  }, {
    start: 11477,
    length: 1,
    convRule: rule22
  }, {
    start: 11478,
    length: 1,
    convRule: rule21
  }, {
    start: 11479,
    length: 1,
    convRule: rule22
  }, {
    start: 11480,
    length: 1,
    convRule: rule21
  }, {
    start: 11481,
    length: 1,
    convRule: rule22
  }, {
    start: 11482,
    length: 1,
    convRule: rule21
  }, {
    start: 11483,
    length: 1,
    convRule: rule22
  }, {
    start: 11484,
    length: 1,
    convRule: rule21
  }, {
    start: 11485,
    length: 1,
    convRule: rule22
  }, {
    start: 11486,
    length: 1,
    convRule: rule21
  }, {
    start: 11487,
    length: 1,
    convRule: rule22
  }, {
    start: 11488,
    length: 1,
    convRule: rule21
  }, {
    start: 11489,
    length: 1,
    convRule: rule22
  }, {
    start: 11490,
    length: 1,
    convRule: rule21
  }, {
    start: 11491,
    length: 1,
    convRule: rule22
  }, {
    start: 11492,
    length: 1,
    convRule: rule14
  }, {
    start: 11493,
    length: 6,
    convRule: rule13
  }, {
    start: 11499,
    length: 1,
    convRule: rule21
  }, {
    start: 11500,
    length: 1,
    convRule: rule22
  }, {
    start: 11501,
    length: 1,
    convRule: rule21
  }, {
    start: 11502,
    length: 1,
    convRule: rule22
  }, {
    start: 11503,
    length: 3,
    convRule: rule84
  }, {
    start: 11513,
    length: 4,
    convRule: rule2
  }, {
    start: 11517,
    length: 1,
    convRule: rule17
  }, {
    start: 11518,
    length: 2,
    convRule: rule2
  }, {
    start: 11520,
    length: 38,
    convRule: rule160
  }, {
    start: 11568,
    length: 54,
    convRule: rule45
  }, {
    start: 11631,
    length: 1,
    convRule: rule83
  }, {
    start: 11632,
    length: 1,
    convRule: rule2
  }, {
    start: 11647,
    length: 1,
    convRule: rule84
  }, {
    start: 11648,
    length: 23,
    convRule: rule45
  }, {
    start: 11680,
    length: 7,
    convRule: rule45
  }, {
    start: 11688,
    length: 7,
    convRule: rule45
  }, {
    start: 11696,
    length: 7,
    convRule: rule45
  }, {
    start: 11704,
    length: 7,
    convRule: rule45
  }, {
    start: 11712,
    length: 7,
    convRule: rule45
  }, {
    start: 11720,
    length: 7,
    convRule: rule45
  }, {
    start: 11728,
    length: 7,
    convRule: rule45
  }, {
    start: 11736,
    length: 7,
    convRule: rule45
  }, {
    start: 11744,
    length: 32,
    convRule: rule84
  }, {
    start: 11776,
    length: 2,
    convRule: rule2
  }, {
    start: 11778,
    length: 1,
    convRule: rule15
  }, {
    start: 11779,
    length: 1,
    convRule: rule19
  }, {
    start: 11780,
    length: 1,
    convRule: rule15
  }, {
    start: 11781,
    length: 1,
    convRule: rule19
  }, {
    start: 11782,
    length: 3,
    convRule: rule2
  }, {
    start: 11785,
    length: 1,
    convRule: rule15
  }, {
    start: 11786,
    length: 1,
    convRule: rule19
  }, {
    start: 11787,
    length: 1,
    convRule: rule2
  }, {
    start: 11788,
    length: 1,
    convRule: rule15
  }, {
    start: 11789,
    length: 1,
    convRule: rule19
  }, {
    start: 11790,
    length: 9,
    convRule: rule2
  }, {
    start: 11799,
    length: 1,
    convRule: rule7
  }, {
    start: 11800,
    length: 2,
    convRule: rule2
  }, {
    start: 11802,
    length: 1,
    convRule: rule7
  }, {
    start: 11803,
    length: 1,
    convRule: rule2
  }, {
    start: 11804,
    length: 1,
    convRule: rule15
  }, {
    start: 11805,
    length: 1,
    convRule: rule19
  }, {
    start: 11806,
    length: 2,
    convRule: rule2
  }, {
    start: 11808,
    length: 1,
    convRule: rule15
  }, {
    start: 11809,
    length: 1,
    convRule: rule19
  }, {
    start: 11810,
    length: 1,
    convRule: rule4
  }, {
    start: 11811,
    length: 1,
    convRule: rule5
  }, {
    start: 11812,
    length: 1,
    convRule: rule4
  }, {
    start: 11813,
    length: 1,
    convRule: rule5
  }, {
    start: 11814,
    length: 1,
    convRule: rule4
  }, {
    start: 11815,
    length: 1,
    convRule: rule5
  }, {
    start: 11816,
    length: 1,
    convRule: rule4
  }, {
    start: 11817,
    length: 1,
    convRule: rule5
  }, {
    start: 11818,
    length: 5,
    convRule: rule2
  }, {
    start: 11823,
    length: 1,
    convRule: rule83
  }, {
    start: 11824,
    length: 2,
    convRule: rule2
  }, {
    start: 11904,
    length: 26,
    convRule: rule13
  }, {
    start: 11931,
    length: 89,
    convRule: rule13
  }, {
    start: 12032,
    length: 214,
    convRule: rule13
  }, {
    start: 12272,
    length: 12,
    convRule: rule13
  }, {
    start: 12288,
    length: 1,
    convRule: rule1
  }, {
    start: 12289,
    length: 3,
    convRule: rule2
  }, {
    start: 12292,
    length: 1,
    convRule: rule13
  }, {
    start: 12293,
    length: 1,
    convRule: rule83
  }, {
    start: 12294,
    length: 1,
    convRule: rule45
  }, {
    start: 12295,
    length: 1,
    convRule: rule116
  }, {
    start: 12296,
    length: 1,
    convRule: rule4
  }, {
    start: 12297,
    length: 1,
    convRule: rule5
  }, {
    start: 12298,
    length: 1,
    convRule: rule4
  }, {
    start: 12299,
    length: 1,
    convRule: rule5
  }, {
    start: 12300,
    length: 1,
    convRule: rule4
  }, {
    start: 12301,
    length: 1,
    convRule: rule5
  }, {
    start: 12302,
    length: 1,
    convRule: rule4
  }, {
    start: 12303,
    length: 1,
    convRule: rule5
  }, {
    start: 12304,
    length: 1,
    convRule: rule4
  }, {
    start: 12305,
    length: 1,
    convRule: rule5
  }, {
    start: 12306,
    length: 2,
    convRule: rule13
  }, {
    start: 12308,
    length: 1,
    convRule: rule4
  }, {
    start: 12309,
    length: 1,
    convRule: rule5
  }, {
    start: 12310,
    length: 1,
    convRule: rule4
  }, {
    start: 12311,
    length: 1,
    convRule: rule5
  }, {
    start: 12312,
    length: 1,
    convRule: rule4
  }, {
    start: 12313,
    length: 1,
    convRule: rule5
  }, {
    start: 12314,
    length: 1,
    convRule: rule4
  }, {
    start: 12315,
    length: 1,
    convRule: rule5
  }, {
    start: 12316,
    length: 1,
    convRule: rule7
  }, {
    start: 12317,
    length: 1,
    convRule: rule4
  }, {
    start: 12318,
    length: 2,
    convRule: rule5
  }, {
    start: 12320,
    length: 1,
    convRule: rule13
  }, {
    start: 12321,
    length: 9,
    convRule: rule116
  }, {
    start: 12330,
    length: 6,
    convRule: rule84
  }, {
    start: 12336,
    length: 1,
    convRule: rule7
  }, {
    start: 12337,
    length: 5,
    convRule: rule83
  }, {
    start: 12342,
    length: 2,
    convRule: rule13
  }, {
    start: 12344,
    length: 3,
    convRule: rule116
  }, {
    start: 12347,
    length: 1,
    convRule: rule83
  }, {
    start: 12348,
    length: 1,
    convRule: rule45
  }, {
    start: 12349,
    length: 1,
    convRule: rule2
  }, {
    start: 12350,
    length: 2,
    convRule: rule13
  }, {
    start: 12353,
    length: 86,
    convRule: rule45
  }, {
    start: 12441,
    length: 2,
    convRule: rule84
  }, {
    start: 12443,
    length: 2,
    convRule: rule10
  }, {
    start: 12445,
    length: 2,
    convRule: rule83
  }, {
    start: 12447,
    length: 1,
    convRule: rule45
  }, {
    start: 12448,
    length: 1,
    convRule: rule7
  }, {
    start: 12449,
    length: 90,
    convRule: rule45
  }, {
    start: 12539,
    length: 1,
    convRule: rule2
  }, {
    start: 12540,
    length: 3,
    convRule: rule83
  }, {
    start: 12543,
    length: 1,
    convRule: rule45
  }, {
    start: 12549,
    length: 41,
    convRule: rule45
  }, {
    start: 12593,
    length: 94,
    convRule: rule45
  }, {
    start: 12688,
    length: 2,
    convRule: rule13
  }, {
    start: 12690,
    length: 4,
    convRule: rule17
  }, {
    start: 12694,
    length: 10,
    convRule: rule13
  }, {
    start: 12704,
    length: 27,
    convRule: rule45
  }, {
    start: 12736,
    length: 36,
    convRule: rule13
  }, {
    start: 12784,
    length: 16,
    convRule: rule45
  }, {
    start: 12800,
    length: 31,
    convRule: rule13
  }, {
    start: 12832,
    length: 10,
    convRule: rule17
  }, {
    start: 12842,
    length: 39,
    convRule: rule13
  }, {
    start: 12881,
    length: 15,
    convRule: rule17
  }, {
    start: 12896,
    length: 32,
    convRule: rule13
  }, {
    start: 12928,
    length: 10,
    convRule: rule17
  }, {
    start: 12938,
    length: 39,
    convRule: rule13
  }, {
    start: 12977,
    length: 15,
    convRule: rule17
  }, {
    start: 12992,
    length: 63,
    convRule: rule13
  }, {
    start: 13056,
    length: 256,
    convRule: rule13
  }, {
    start: 13312,
    length: 6582,
    convRule: rule45
  }, {
    start: 19904,
    length: 64,
    convRule: rule13
  }, {
    start: 19968,
    length: 20940,
    convRule: rule45
  }, {
    start: 40960,
    length: 21,
    convRule: rule45
  }, {
    start: 40981,
    length: 1,
    convRule: rule83
  }, {
    start: 40982,
    length: 1143,
    convRule: rule45
  }, {
    start: 42128,
    length: 55,
    convRule: rule13
  }, {
    start: 42192,
    length: 40,
    convRule: rule45
  }, {
    start: 42232,
    length: 6,
    convRule: rule83
  }, {
    start: 42238,
    length: 2,
    convRule: rule2
  }, {
    start: 42240,
    length: 268,
    convRule: rule45
  }, {
    start: 42508,
    length: 1,
    convRule: rule83
  }, {
    start: 42509,
    length: 3,
    convRule: rule2
  }, {
    start: 42512,
    length: 16,
    convRule: rule45
  }, {
    start: 42528,
    length: 10,
    convRule: rule8
  }, {
    start: 42538,
    length: 2,
    convRule: rule45
  }, {
    start: 42560,
    length: 1,
    convRule: rule21
  }, {
    start: 42561,
    length: 1,
    convRule: rule22
  }, {
    start: 42562,
    length: 1,
    convRule: rule21
  }, {
    start: 42563,
    length: 1,
    convRule: rule22
  }, {
    start: 42564,
    length: 1,
    convRule: rule21
  }, {
    start: 42565,
    length: 1,
    convRule: rule22
  }, {
    start: 42566,
    length: 1,
    convRule: rule21
  }, {
    start: 42567,
    length: 1,
    convRule: rule22
  }, {
    start: 42568,
    length: 1,
    convRule: rule21
  }, {
    start: 42569,
    length: 1,
    convRule: rule22
  }, {
    start: 42570,
    length: 1,
    convRule: rule21
  }, {
    start: 42571,
    length: 1,
    convRule: rule22
  }, {
    start: 42572,
    length: 1,
    convRule: rule21
  }, {
    start: 42573,
    length: 1,
    convRule: rule22
  }, {
    start: 42574,
    length: 1,
    convRule: rule21
  }, {
    start: 42575,
    length: 1,
    convRule: rule22
  }, {
    start: 42576,
    length: 1,
    convRule: rule21
  }, {
    start: 42577,
    length: 1,
    convRule: rule22
  }, {
    start: 42578,
    length: 1,
    convRule: rule21
  }, {
    start: 42579,
    length: 1,
    convRule: rule22
  }, {
    start: 42580,
    length: 1,
    convRule: rule21
  }, {
    start: 42581,
    length: 1,
    convRule: rule22
  }, {
    start: 42582,
    length: 1,
    convRule: rule21
  }, {
    start: 42583,
    length: 1,
    convRule: rule22
  }, {
    start: 42584,
    length: 1,
    convRule: rule21
  }, {
    start: 42585,
    length: 1,
    convRule: rule22
  }, {
    start: 42586,
    length: 1,
    convRule: rule21
  }, {
    start: 42587,
    length: 1,
    convRule: rule22
  }, {
    start: 42588,
    length: 1,
    convRule: rule21
  }, {
    start: 42589,
    length: 1,
    convRule: rule22
  }, {
    start: 42590,
    length: 1,
    convRule: rule21
  }, {
    start: 42591,
    length: 1,
    convRule: rule22
  }, {
    start: 42592,
    length: 1,
    convRule: rule21
  }, {
    start: 42593,
    length: 1,
    convRule: rule22
  }, {
    start: 42594,
    length: 1,
    convRule: rule21
  }, {
    start: 42595,
    length: 1,
    convRule: rule22
  }, {
    start: 42596,
    length: 1,
    convRule: rule21
  }, {
    start: 42597,
    length: 1,
    convRule: rule22
  }, {
    start: 42598,
    length: 1,
    convRule: rule21
  }, {
    start: 42599,
    length: 1,
    convRule: rule22
  }, {
    start: 42600,
    length: 1,
    convRule: rule21
  }, {
    start: 42601,
    length: 1,
    convRule: rule22
  }, {
    start: 42602,
    length: 1,
    convRule: rule21
  }, {
    start: 42603,
    length: 1,
    convRule: rule22
  }, {
    start: 42604,
    length: 1,
    convRule: rule21
  }, {
    start: 42605,
    length: 1,
    convRule: rule22
  }, {
    start: 42606,
    length: 1,
    convRule: rule45
  }, {
    start: 42607,
    length: 1,
    convRule: rule84
  }, {
    start: 42608,
    length: 3,
    convRule: rule109
  }, {
    start: 42611,
    length: 1,
    convRule: rule2
  }, {
    start: 42620,
    length: 2,
    convRule: rule84
  }, {
    start: 42622,
    length: 1,
    convRule: rule2
  }, {
    start: 42623,
    length: 1,
    convRule: rule83
  }, {
    start: 42624,
    length: 1,
    convRule: rule21
  }, {
    start: 42625,
    length: 1,
    convRule: rule22
  }, {
    start: 42626,
    length: 1,
    convRule: rule21
  }, {
    start: 42627,
    length: 1,
    convRule: rule22
  }, {
    start: 42628,
    length: 1,
    convRule: rule21
  }, {
    start: 42629,
    length: 1,
    convRule: rule22
  }, {
    start: 42630,
    length: 1,
    convRule: rule21
  }, {
    start: 42631,
    length: 1,
    convRule: rule22
  }, {
    start: 42632,
    length: 1,
    convRule: rule21
  }, {
    start: 42633,
    length: 1,
    convRule: rule22
  }, {
    start: 42634,
    length: 1,
    convRule: rule21
  }, {
    start: 42635,
    length: 1,
    convRule: rule22
  }, {
    start: 42636,
    length: 1,
    convRule: rule21
  }, {
    start: 42637,
    length: 1,
    convRule: rule22
  }, {
    start: 42638,
    length: 1,
    convRule: rule21
  }, {
    start: 42639,
    length: 1,
    convRule: rule22
  }, {
    start: 42640,
    length: 1,
    convRule: rule21
  }, {
    start: 42641,
    length: 1,
    convRule: rule22
  }, {
    start: 42642,
    length: 1,
    convRule: rule21
  }, {
    start: 42643,
    length: 1,
    convRule: rule22
  }, {
    start: 42644,
    length: 1,
    convRule: rule21
  }, {
    start: 42645,
    length: 1,
    convRule: rule22
  }, {
    start: 42646,
    length: 1,
    convRule: rule21
  }, {
    start: 42647,
    length: 1,
    convRule: rule22
  }, {
    start: 42656,
    length: 70,
    convRule: rule45
  }, {
    start: 42726,
    length: 10,
    convRule: rule116
  }, {
    start: 42736,
    length: 2,
    convRule: rule84
  }, {
    start: 42738,
    length: 6,
    convRule: rule2
  }, {
    start: 42752,
    length: 23,
    convRule: rule10
  }, {
    start: 42775,
    length: 9,
    convRule: rule83
  }, {
    start: 42784,
    length: 2,
    convRule: rule10
  }, {
    start: 42786,
    length: 1,
    convRule: rule21
  }, {
    start: 42787,
    length: 1,
    convRule: rule22
  }, {
    start: 42788,
    length: 1,
    convRule: rule21
  }, {
    start: 42789,
    length: 1,
    convRule: rule22
  }, {
    start: 42790,
    length: 1,
    convRule: rule21
  }, {
    start: 42791,
    length: 1,
    convRule: rule22
  }, {
    start: 42792,
    length: 1,
    convRule: rule21
  }, {
    start: 42793,
    length: 1,
    convRule: rule22
  }, {
    start: 42794,
    length: 1,
    convRule: rule21
  }, {
    start: 42795,
    length: 1,
    convRule: rule22
  }, {
    start: 42796,
    length: 1,
    convRule: rule21
  }, {
    start: 42797,
    length: 1,
    convRule: rule22
  }, {
    start: 42798,
    length: 1,
    convRule: rule21
  }, {
    start: 42799,
    length: 1,
    convRule: rule22
  }, {
    start: 42800,
    length: 2,
    convRule: rule14
  }, {
    start: 42802,
    length: 1,
    convRule: rule21
  }, {
    start: 42803,
    length: 1,
    convRule: rule22
  }, {
    start: 42804,
    length: 1,
    convRule: rule21
  }, {
    start: 42805,
    length: 1,
    convRule: rule22
  }, {
    start: 42806,
    length: 1,
    convRule: rule21
  }, {
    start: 42807,
    length: 1,
    convRule: rule22
  }, {
    start: 42808,
    length: 1,
    convRule: rule21
  }, {
    start: 42809,
    length: 1,
    convRule: rule22
  }, {
    start: 42810,
    length: 1,
    convRule: rule21
  }, {
    start: 42811,
    length: 1,
    convRule: rule22
  }, {
    start: 42812,
    length: 1,
    convRule: rule21
  }, {
    start: 42813,
    length: 1,
    convRule: rule22
  }, {
    start: 42814,
    length: 1,
    convRule: rule21
  }, {
    start: 42815,
    length: 1,
    convRule: rule22
  }, {
    start: 42816,
    length: 1,
    convRule: rule21
  }, {
    start: 42817,
    length: 1,
    convRule: rule22
  }, {
    start: 42818,
    length: 1,
    convRule: rule21
  }, {
    start: 42819,
    length: 1,
    convRule: rule22
  }, {
    start: 42820,
    length: 1,
    convRule: rule21
  }, {
    start: 42821,
    length: 1,
    convRule: rule22
  }, {
    start: 42822,
    length: 1,
    convRule: rule21
  }, {
    start: 42823,
    length: 1,
    convRule: rule22
  }, {
    start: 42824,
    length: 1,
    convRule: rule21
  }, {
    start: 42825,
    length: 1,
    convRule: rule22
  }, {
    start: 42826,
    length: 1,
    convRule: rule21
  }, {
    start: 42827,
    length: 1,
    convRule: rule22
  }, {
    start: 42828,
    length: 1,
    convRule: rule21
  }, {
    start: 42829,
    length: 1,
    convRule: rule22
  }, {
    start: 42830,
    length: 1,
    convRule: rule21
  }, {
    start: 42831,
    length: 1,
    convRule: rule22
  }, {
    start: 42832,
    length: 1,
    convRule: rule21
  }, {
    start: 42833,
    length: 1,
    convRule: rule22
  }, {
    start: 42834,
    length: 1,
    convRule: rule21
  }, {
    start: 42835,
    length: 1,
    convRule: rule22
  }, {
    start: 42836,
    length: 1,
    convRule: rule21
  }, {
    start: 42837,
    length: 1,
    convRule: rule22
  }, {
    start: 42838,
    length: 1,
    convRule: rule21
  }, {
    start: 42839,
    length: 1,
    convRule: rule22
  }, {
    start: 42840,
    length: 1,
    convRule: rule21
  }, {
    start: 42841,
    length: 1,
    convRule: rule22
  }, {
    start: 42842,
    length: 1,
    convRule: rule21
  }, {
    start: 42843,
    length: 1,
    convRule: rule22
  }, {
    start: 42844,
    length: 1,
    convRule: rule21
  }, {
    start: 42845,
    length: 1,
    convRule: rule22
  }, {
    start: 42846,
    length: 1,
    convRule: rule21
  }, {
    start: 42847,
    length: 1,
    convRule: rule22
  }, {
    start: 42848,
    length: 1,
    convRule: rule21
  }, {
    start: 42849,
    length: 1,
    convRule: rule22
  }, {
    start: 42850,
    length: 1,
    convRule: rule21
  }, {
    start: 42851,
    length: 1,
    convRule: rule22
  }, {
    start: 42852,
    length: 1,
    convRule: rule21
  }, {
    start: 42853,
    length: 1,
    convRule: rule22
  }, {
    start: 42854,
    length: 1,
    convRule: rule21
  }, {
    start: 42855,
    length: 1,
    convRule: rule22
  }, {
    start: 42856,
    length: 1,
    convRule: rule21
  }, {
    start: 42857,
    length: 1,
    convRule: rule22
  }, {
    start: 42858,
    length: 1,
    convRule: rule21
  }, {
    start: 42859,
    length: 1,
    convRule: rule22
  }, {
    start: 42860,
    length: 1,
    convRule: rule21
  }, {
    start: 42861,
    length: 1,
    convRule: rule22
  }, {
    start: 42862,
    length: 1,
    convRule: rule21
  }, {
    start: 42863,
    length: 1,
    convRule: rule22
  }, {
    start: 42864,
    length: 1,
    convRule: rule83
  }, {
    start: 42865,
    length: 8,
    convRule: rule14
  }, {
    start: 42873,
    length: 1,
    convRule: rule21
  }, {
    start: 42874,
    length: 1,
    convRule: rule22
  }, {
    start: 42875,
    length: 1,
    convRule: rule21
  }, {
    start: 42876,
    length: 1,
    convRule: rule22
  }, {
    start: 42877,
    length: 1,
    convRule: rule161
  }, {
    start: 42878,
    length: 1,
    convRule: rule21
  }, {
    start: 42879,
    length: 1,
    convRule: rule22
  }, {
    start: 42880,
    length: 1,
    convRule: rule21
  }, {
    start: 42881,
    length: 1,
    convRule: rule22
  }, {
    start: 42882,
    length: 1,
    convRule: rule21
  }, {
    start: 42883,
    length: 1,
    convRule: rule22
  }, {
    start: 42884,
    length: 1,
    convRule: rule21
  }, {
    start: 42885,
    length: 1,
    convRule: rule22
  }, {
    start: 42886,
    length: 1,
    convRule: rule21
  }, {
    start: 42887,
    length: 1,
    convRule: rule22
  }, {
    start: 42888,
    length: 1,
    convRule: rule83
  }, {
    start: 42889,
    length: 2,
    convRule: rule10
  }, {
    start: 42891,
    length: 1,
    convRule: rule21
  }, {
    start: 42892,
    length: 1,
    convRule: rule22
  }, {
    start: 42893,
    length: 1,
    convRule: rule162
  }, {
    start: 42894,
    length: 1,
    convRule: rule14
  }, {
    start: 42896,
    length: 1,
    convRule: rule21
  }, {
    start: 42897,
    length: 1,
    convRule: rule22
  }, {
    start: 42912,
    length: 1,
    convRule: rule21
  }, {
    start: 42913,
    length: 1,
    convRule: rule22
  }, {
    start: 42914,
    length: 1,
    convRule: rule21
  }, {
    start: 42915,
    length: 1,
    convRule: rule22
  }, {
    start: 42916,
    length: 1,
    convRule: rule21
  }, {
    start: 42917,
    length: 1,
    convRule: rule22
  }, {
    start: 42918,
    length: 1,
    convRule: rule21
  }, {
    start: 42919,
    length: 1,
    convRule: rule22
  }, {
    start: 42920,
    length: 1,
    convRule: rule21
  }, {
    start: 42921,
    length: 1,
    convRule: rule22
  }, {
    start: 43002,
    length: 1,
    convRule: rule14
  }, {
    start: 43003,
    length: 7,
    convRule: rule45
  }, {
    start: 43010,
    length: 1,
    convRule: rule84
  }, {
    start: 43011,
    length: 3,
    convRule: rule45
  }, {
    start: 43014,
    length: 1,
    convRule: rule84
  }, {
    start: 43015,
    length: 4,
    convRule: rule45
  }, {
    start: 43019,
    length: 1,
    convRule: rule84
  }, {
    start: 43020,
    length: 23,
    convRule: rule45
  }, {
    start: 43043,
    length: 2,
    convRule: rule114
  }, {
    start: 43045,
    length: 2,
    convRule: rule84
  }, {
    start: 43047,
    length: 1,
    convRule: rule114
  }, {
    start: 43048,
    length: 4,
    convRule: rule13
  }, {
    start: 43056,
    length: 6,
    convRule: rule17
  }, {
    start: 43062,
    length: 2,
    convRule: rule13
  }, {
    start: 43064,
    length: 1,
    convRule: rule3
  }, {
    start: 43065,
    length: 1,
    convRule: rule13
  }, {
    start: 43072,
    length: 52,
    convRule: rule45
  }, {
    start: 43124,
    length: 4,
    convRule: rule2
  }, {
    start: 43136,
    length: 2,
    convRule: rule114
  }, {
    start: 43138,
    length: 50,
    convRule: rule45
  }, {
    start: 43188,
    length: 16,
    convRule: rule114
  }, {
    start: 43204,
    length: 1,
    convRule: rule84
  }, {
    start: 43214,
    length: 2,
    convRule: rule2
  }, {
    start: 43216,
    length: 10,
    convRule: rule8
  }, {
    start: 43232,
    length: 18,
    convRule: rule84
  }, {
    start: 43250,
    length: 6,
    convRule: rule45
  }, {
    start: 43256,
    length: 3,
    convRule: rule2
  }, {
    start: 43259,
    length: 1,
    convRule: rule45
  }, {
    start: 43264,
    length: 10,
    convRule: rule8
  }, {
    start: 43274,
    length: 28,
    convRule: rule45
  }, {
    start: 43302,
    length: 8,
    convRule: rule84
  }, {
    start: 43310,
    length: 2,
    convRule: rule2
  }, {
    start: 43312,
    length: 23,
    convRule: rule45
  }, {
    start: 43335,
    length: 11,
    convRule: rule84
  }, {
    start: 43346,
    length: 2,
    convRule: rule114
  }, {
    start: 43359,
    length: 1,
    convRule: rule2
  }, {
    start: 43360,
    length: 29,
    convRule: rule45
  }, {
    start: 43392,
    length: 3,
    convRule: rule84
  }, {
    start: 43395,
    length: 1,
    convRule: rule114
  }, {
    start: 43396,
    length: 47,
    convRule: rule45
  }, {
    start: 43443,
    length: 1,
    convRule: rule84
  }, {
    start: 43444,
    length: 2,
    convRule: rule114
  }, {
    start: 43446,
    length: 4,
    convRule: rule84
  }, {
    start: 43450,
    length: 2,
    convRule: rule114
  }, {
    start: 43452,
    length: 1,
    convRule: rule84
  }, {
    start: 43453,
    length: 4,
    convRule: rule114
  }, {
    start: 43457,
    length: 13,
    convRule: rule2
  }, {
    start: 43471,
    length: 1,
    convRule: rule83
  }, {
    start: 43472,
    length: 10,
    convRule: rule8
  }, {
    start: 43486,
    length: 2,
    convRule: rule2
  }, {
    start: 43520,
    length: 41,
    convRule: rule45
  }, {
    start: 43561,
    length: 6,
    convRule: rule84
  }, {
    start: 43567,
    length: 2,
    convRule: rule114
  }, {
    start: 43569,
    length: 2,
    convRule: rule84
  }, {
    start: 43571,
    length: 2,
    convRule: rule114
  }, {
    start: 43573,
    length: 2,
    convRule: rule84
  }, {
    start: 43584,
    length: 3,
    convRule: rule45
  }, {
    start: 43587,
    length: 1,
    convRule: rule84
  }, {
    start: 43588,
    length: 8,
    convRule: rule45
  }, {
    start: 43596,
    length: 1,
    convRule: rule84
  }, {
    start: 43597,
    length: 1,
    convRule: rule114
  }, {
    start: 43600,
    length: 10,
    convRule: rule8
  }, {
    start: 43612,
    length: 4,
    convRule: rule2
  }, {
    start: 43616,
    length: 16,
    convRule: rule45
  }, {
    start: 43632,
    length: 1,
    convRule: rule83
  }, {
    start: 43633,
    length: 6,
    convRule: rule45
  }, {
    start: 43639,
    length: 3,
    convRule: rule13
  }, {
    start: 43642,
    length: 1,
    convRule: rule45
  }, {
    start: 43643,
    length: 1,
    convRule: rule114
  }, {
    start: 43648,
    length: 48,
    convRule: rule45
  }, {
    start: 43696,
    length: 1,
    convRule: rule84
  }, {
    start: 43697,
    length: 1,
    convRule: rule45
  }, {
    start: 43698,
    length: 3,
    convRule: rule84
  }, {
    start: 43701,
    length: 2,
    convRule: rule45
  }, {
    start: 43703,
    length: 2,
    convRule: rule84
  }, {
    start: 43705,
    length: 5,
    convRule: rule45
  }, {
    start: 43710,
    length: 2,
    convRule: rule84
  }, {
    start: 43712,
    length: 1,
    convRule: rule45
  }, {
    start: 43713,
    length: 1,
    convRule: rule84
  }, {
    start: 43714,
    length: 1,
    convRule: rule45
  }, {
    start: 43739,
    length: 2,
    convRule: rule45
  }, {
    start: 43741,
    length: 1,
    convRule: rule83
  }, {
    start: 43742,
    length: 2,
    convRule: rule2
  }, {
    start: 43777,
    length: 6,
    convRule: rule45
  }, {
    start: 43785,
    length: 6,
    convRule: rule45
  }, {
    start: 43793,
    length: 6,
    convRule: rule45
  }, {
    start: 43808,
    length: 7,
    convRule: rule45
  }, {
    start: 43816,
    length: 7,
    convRule: rule45
  }, {
    start: 43968,
    length: 35,
    convRule: rule45
  }, {
    start: 44003,
    length: 2,
    convRule: rule114
  }, {
    start: 44005,
    length: 1,
    convRule: rule84
  }, {
    start: 44006,
    length: 2,
    convRule: rule114
  }, {
    start: 44008,
    length: 1,
    convRule: rule84
  }, {
    start: 44009,
    length: 2,
    convRule: rule114
  }, {
    start: 44011,
    length: 1,
    convRule: rule2
  }, {
    start: 44012,
    length: 1,
    convRule: rule114
  }, {
    start: 44013,
    length: 1,
    convRule: rule84
  }, {
    start: 44016,
    length: 10,
    convRule: rule8
  }, {
    start: 44032,
    length: 11172,
    convRule: rule45
  }, {
    start: 55216,
    length: 23,
    convRule: rule45
  }, {
    start: 55243,
    length: 49,
    convRule: rule45
  }, {
    start: 55296,
    length: 896,
    convRule: rule163
  }, {
    start: 56192,
    length: 128,
    convRule: rule163
  }, {
    start: 56320,
    length: 1024,
    convRule: rule163
  }, {
    start: 57344,
    length: 6400,
    convRule: rule164
  }, {
    start: 63744,
    length: 302,
    convRule: rule45
  }, {
    start: 64048,
    length: 62,
    convRule: rule45
  }, {
    start: 64112,
    length: 106,
    convRule: rule45
  }, {
    start: 64256,
    length: 7,
    convRule: rule14
  }, {
    start: 64275,
    length: 5,
    convRule: rule14
  }, {
    start: 64285,
    length: 1,
    convRule: rule45
  }, {
    start: 64286,
    length: 1,
    convRule: rule84
  }, {
    start: 64287,
    length: 10,
    convRule: rule45
  }, {
    start: 64297,
    length: 1,
    convRule: rule6
  }, {
    start: 64298,
    length: 13,
    convRule: rule45
  }, {
    start: 64312,
    length: 5,
    convRule: rule45
  }, {
    start: 64318,
    length: 1,
    convRule: rule45
  }, {
    start: 64320,
    length: 2,
    convRule: rule45
  }, {
    start: 64323,
    length: 2,
    convRule: rule45
  }, {
    start: 64326,
    length: 108,
    convRule: rule45
  }, {
    start: 64434,
    length: 16,
    convRule: rule10
  }, {
    start: 64467,
    length: 363,
    convRule: rule45
  }, {
    start: 64830,
    length: 1,
    convRule: rule4
  }, {
    start: 64831,
    length: 1,
    convRule: rule5
  }, {
    start: 64848,
    length: 64,
    convRule: rule45
  }, {
    start: 64914,
    length: 54,
    convRule: rule45
  }, {
    start: 65008,
    length: 12,
    convRule: rule45
  }, {
    start: 65020,
    length: 1,
    convRule: rule3
  }, {
    start: 65021,
    length: 1,
    convRule: rule13
  }, {
    start: 65024,
    length: 16,
    convRule: rule84
  }, {
    start: 65040,
    length: 7,
    convRule: rule2
  }, {
    start: 65047,
    length: 1,
    convRule: rule4
  }, {
    start: 65048,
    length: 1,
    convRule: rule5
  }, {
    start: 65049,
    length: 1,
    convRule: rule2
  }, {
    start: 65056,
    length: 7,
    convRule: rule84
  }, {
    start: 65072,
    length: 1,
    convRule: rule2
  }, {
    start: 65073,
    length: 2,
    convRule: rule7
  }, {
    start: 65075,
    length: 2,
    convRule: rule11
  }, {
    start: 65077,
    length: 1,
    convRule: rule4
  }, {
    start: 65078,
    length: 1,
    convRule: rule5
  }, {
    start: 65079,
    length: 1,
    convRule: rule4
  }, {
    start: 65080,
    length: 1,
    convRule: rule5
  }, {
    start: 65081,
    length: 1,
    convRule: rule4
  }, {
    start: 65082,
    length: 1,
    convRule: rule5
  }, {
    start: 65083,
    length: 1,
    convRule: rule4
  }, {
    start: 65084,
    length: 1,
    convRule: rule5
  }, {
    start: 65085,
    length: 1,
    convRule: rule4
  }, {
    start: 65086,
    length: 1,
    convRule: rule5
  }, {
    start: 65087,
    length: 1,
    convRule: rule4
  }, {
    start: 65088,
    length: 1,
    convRule: rule5
  }, {
    start: 65089,
    length: 1,
    convRule: rule4
  }, {
    start: 65090,
    length: 1,
    convRule: rule5
  }, {
    start: 65091,
    length: 1,
    convRule: rule4
  }, {
    start: 65092,
    length: 1,
    convRule: rule5
  }, {
    start: 65093,
    length: 2,
    convRule: rule2
  }, {
    start: 65095,
    length: 1,
    convRule: rule4
  }, {
    start: 65096,
    length: 1,
    convRule: rule5
  }, {
    start: 65097,
    length: 4,
    convRule: rule2
  }, {
    start: 65101,
    length: 3,
    convRule: rule11
  }, {
    start: 65104,
    length: 3,
    convRule: rule2
  }, {
    start: 65108,
    length: 4,
    convRule: rule2
  }, {
    start: 65112,
    length: 1,
    convRule: rule7
  }, {
    start: 65113,
    length: 1,
    convRule: rule4
  }, {
    start: 65114,
    length: 1,
    convRule: rule5
  }, {
    start: 65115,
    length: 1,
    convRule: rule4
  }, {
    start: 65116,
    length: 1,
    convRule: rule5
  }, {
    start: 65117,
    length: 1,
    convRule: rule4
  }, {
    start: 65118,
    length: 1,
    convRule: rule5
  }, {
    start: 65119,
    length: 3,
    convRule: rule2
  }, {
    start: 65122,
    length: 1,
    convRule: rule6
  }, {
    start: 65123,
    length: 1,
    convRule: rule7
  }, {
    start: 65124,
    length: 3,
    convRule: rule6
  }, {
    start: 65128,
    length: 1,
    convRule: rule2
  }, {
    start: 65129,
    length: 1,
    convRule: rule3
  }, {
    start: 65130,
    length: 2,
    convRule: rule2
  }, {
    start: 65136,
    length: 5,
    convRule: rule45
  }, {
    start: 65142,
    length: 135,
    convRule: rule45
  }, {
    start: 65279,
    length: 1,
    convRule: rule16
  }, {
    start: 65281,
    length: 3,
    convRule: rule2
  }, {
    start: 65284,
    length: 1,
    convRule: rule3
  }, {
    start: 65285,
    length: 3,
    convRule: rule2
  }, {
    start: 65288,
    length: 1,
    convRule: rule4
  }, {
    start: 65289,
    length: 1,
    convRule: rule5
  }, {
    start: 65290,
    length: 1,
    convRule: rule2
  }, {
    start: 65291,
    length: 1,
    convRule: rule6
  }, {
    start: 65292,
    length: 1,
    convRule: rule2
  }, {
    start: 65293,
    length: 1,
    convRule: rule7
  }, {
    start: 65294,
    length: 2,
    convRule: rule2
  }, {
    start: 65296,
    length: 10,
    convRule: rule8
  }, {
    start: 65306,
    length: 2,
    convRule: rule2
  }, {
    start: 65308,
    length: 3,
    convRule: rule6
  }, {
    start: 65311,
    length: 2,
    convRule: rule2
  }, {
    start: 65313,
    length: 26,
    convRule: rule9
  }, {
    start: 65339,
    length: 1,
    convRule: rule4
  }, {
    start: 65340,
    length: 1,
    convRule: rule2
  }, {
    start: 65341,
    length: 1,
    convRule: rule5
  }, {
    start: 65342,
    length: 1,
    convRule: rule10
  }, {
    start: 65343,
    length: 1,
    convRule: rule11
  }, {
    start: 65344,
    length: 1,
    convRule: rule10
  }, {
    start: 65345,
    length: 26,
    convRule: rule12
  }, {
    start: 65371,
    length: 1,
    convRule: rule4
  }, {
    start: 65372,
    length: 1,
    convRule: rule6
  }, {
    start: 65373,
    length: 1,
    convRule: rule5
  }, {
    start: 65374,
    length: 1,
    convRule: rule6
  }, {
    start: 65375,
    length: 1,
    convRule: rule4
  }, {
    start: 65376,
    length: 1,
    convRule: rule5
  }, {
    start: 65377,
    length: 1,
    convRule: rule2
  }, {
    start: 65378,
    length: 1,
    convRule: rule4
  }, {
    start: 65379,
    length: 1,
    convRule: rule5
  }, {
    start: 65380,
    length: 2,
    convRule: rule2
  }, {
    start: 65382,
    length: 10,
    convRule: rule45
  }, {
    start: 65392,
    length: 1,
    convRule: rule83
  }, {
    start: 65393,
    length: 45,
    convRule: rule45
  }, {
    start: 65438,
    length: 2,
    convRule: rule83
  }, {
    start: 65440,
    length: 31,
    convRule: rule45
  }, {
    start: 65474,
    length: 6,
    convRule: rule45
  }, {
    start: 65482,
    length: 6,
    convRule: rule45
  }, {
    start: 65490,
    length: 6,
    convRule: rule45
  }, {
    start: 65498,
    length: 3,
    convRule: rule45
  }, {
    start: 65504,
    length: 2,
    convRule: rule3
  }, {
    start: 65506,
    length: 1,
    convRule: rule6
  }, {
    start: 65507,
    length: 1,
    convRule: rule10
  }, {
    start: 65508,
    length: 1,
    convRule: rule13
  }, {
    start: 65509,
    length: 2,
    convRule: rule3
  }, {
    start: 65512,
    length: 1,
    convRule: rule13
  }, {
    start: 65513,
    length: 4,
    convRule: rule6
  }, {
    start: 65517,
    length: 2,
    convRule: rule13
  }, {
    start: 65529,
    length: 3,
    convRule: rule16
  }, {
    start: 65532,
    length: 2,
    convRule: rule13
  }, {
    start: 65536,
    length: 12,
    convRule: rule45
  }, {
    start: 65549,
    length: 26,
    convRule: rule45
  }, {
    start: 65576,
    length: 19,
    convRule: rule45
  }, {
    start: 65596,
    length: 2,
    convRule: rule45
  }, {
    start: 65599,
    length: 15,
    convRule: rule45
  }, {
    start: 65616,
    length: 14,
    convRule: rule45
  }, {
    start: 65664,
    length: 123,
    convRule: rule45
  }, {
    start: 65792,
    length: 2,
    convRule: rule2
  }, {
    start: 65794,
    length: 1,
    convRule: rule13
  }, {
    start: 65799,
    length: 45,
    convRule: rule17
  }, {
    start: 65847,
    length: 9,
    convRule: rule13
  }, {
    start: 65856,
    length: 53,
    convRule: rule116
  }, {
    start: 65909,
    length: 4,
    convRule: rule17
  }, {
    start: 65913,
    length: 17,
    convRule: rule13
  }, {
    start: 65930,
    length: 1,
    convRule: rule17
  }, {
    start: 65936,
    length: 12,
    convRule: rule13
  }, {
    start: 66000,
    length: 45,
    convRule: rule13
  }, {
    start: 66045,
    length: 1,
    convRule: rule84
  }, {
    start: 66176,
    length: 29,
    convRule: rule45
  }, {
    start: 66208,
    length: 49,
    convRule: rule45
  }, {
    start: 66304,
    length: 31,
    convRule: rule45
  }, {
    start: 66336,
    length: 4,
    convRule: rule17
  }, {
    start: 66352,
    length: 17,
    convRule: rule45
  }, {
    start: 66369,
    length: 1,
    convRule: rule116
  }, {
    start: 66370,
    length: 8,
    convRule: rule45
  }, {
    start: 66378,
    length: 1,
    convRule: rule116
  }, {
    start: 66432,
    length: 30,
    convRule: rule45
  }, {
    start: 66463,
    length: 1,
    convRule: rule2
  }, {
    start: 66464,
    length: 36,
    convRule: rule45
  }, {
    start: 66504,
    length: 8,
    convRule: rule45
  }, {
    start: 66512,
    length: 1,
    convRule: rule2
  }, {
    start: 66513,
    length: 5,
    convRule: rule116
  }, {
    start: 66560,
    length: 40,
    convRule: rule165
  }, {
    start: 66600,
    length: 40,
    convRule: rule166
  }, {
    start: 66640,
    length: 78,
    convRule: rule45
  }, {
    start: 66720,
    length: 10,
    convRule: rule8
  }, {
    start: 67584,
    length: 6,
    convRule: rule45
  }, {
    start: 67592,
    length: 1,
    convRule: rule45
  }, {
    start: 67594,
    length: 44,
    convRule: rule45
  }, {
    start: 67639,
    length: 2,
    convRule: rule45
  }, {
    start: 67644,
    length: 1,
    convRule: rule45
  }, {
    start: 67647,
    length: 23,
    convRule: rule45
  }, {
    start: 67671,
    length: 1,
    convRule: rule2
  }, {
    start: 67672,
    length: 8,
    convRule: rule17
  }, {
    start: 67840,
    length: 22,
    convRule: rule45
  }, {
    start: 67862,
    length: 6,
    convRule: rule17
  }, {
    start: 67871,
    length: 1,
    convRule: rule2
  }, {
    start: 67872,
    length: 26,
    convRule: rule45
  }, {
    start: 67903,
    length: 1,
    convRule: rule2
  }, {
    start: 68096,
    length: 1,
    convRule: rule45
  }, {
    start: 68097,
    length: 3,
    convRule: rule84
  }, {
    start: 68101,
    length: 2,
    convRule: rule84
  }, {
    start: 68108,
    length: 4,
    convRule: rule84
  }, {
    start: 68112,
    length: 4,
    convRule: rule45
  }, {
    start: 68117,
    length: 3,
    convRule: rule45
  }, {
    start: 68121,
    length: 27,
    convRule: rule45
  }, {
    start: 68152,
    length: 3,
    convRule: rule84
  }, {
    start: 68159,
    length: 1,
    convRule: rule84
  }, {
    start: 68160,
    length: 8,
    convRule: rule17
  }, {
    start: 68176,
    length: 9,
    convRule: rule2
  }, {
    start: 68192,
    length: 29,
    convRule: rule45
  }, {
    start: 68221,
    length: 2,
    convRule: rule17
  }, {
    start: 68223,
    length: 1,
    convRule: rule2
  }, {
    start: 68352,
    length: 54,
    convRule: rule45
  }, {
    start: 68409,
    length: 7,
    convRule: rule2
  }, {
    start: 68416,
    length: 22,
    convRule: rule45
  }, {
    start: 68440,
    length: 8,
    convRule: rule17
  }, {
    start: 68448,
    length: 19,
    convRule: rule45
  }, {
    start: 68472,
    length: 8,
    convRule: rule17
  }, {
    start: 68608,
    length: 73,
    convRule: rule45
  }, {
    start: 69216,
    length: 31,
    convRule: rule17
  }, {
    start: 69632,
    length: 1,
    convRule: rule114
  }, {
    start: 69633,
    length: 1,
    convRule: rule84
  }, {
    start: 69634,
    length: 1,
    convRule: rule114
  }, {
    start: 69635,
    length: 53,
    convRule: rule45
  }, {
    start: 69688,
    length: 15,
    convRule: rule84
  }, {
    start: 69703,
    length: 7,
    convRule: rule2
  }, {
    start: 69714,
    length: 20,
    convRule: rule17
  }, {
    start: 69734,
    length: 10,
    convRule: rule8
  }, {
    start: 69760,
    length: 2,
    convRule: rule84
  }, {
    start: 69762,
    length: 1,
    convRule: rule114
  }, {
    start: 69763,
    length: 45,
    convRule: rule45
  }, {
    start: 69808,
    length: 3,
    convRule: rule114
  }, {
    start: 69811,
    length: 4,
    convRule: rule84
  }, {
    start: 69815,
    length: 2,
    convRule: rule114
  }, {
    start: 69817,
    length: 2,
    convRule: rule84
  }, {
    start: 69819,
    length: 2,
    convRule: rule2
  }, {
    start: 69821,
    length: 1,
    convRule: rule16
  }, {
    start: 69822,
    length: 4,
    convRule: rule2
  }, {
    start: 73728,
    length: 879,
    convRule: rule45
  }, {
    start: 74752,
    length: 99,
    convRule: rule116
  }, {
    start: 74864,
    length: 4,
    convRule: rule2
  }, {
    start: 77824,
    length: 1071,
    convRule: rule45
  }, {
    start: 92160,
    length: 569,
    convRule: rule45
  }, {
    start: 110592,
    length: 2,
    convRule: rule45
  }, {
    start: 118784,
    length: 246,
    convRule: rule13
  }, {
    start: 119040,
    length: 39,
    convRule: rule13
  }, {
    start: 119081,
    length: 60,
    convRule: rule13
  }, {
    start: 119141,
    length: 2,
    convRule: rule114
  }, {
    start: 119143,
    length: 3,
    convRule: rule84
  }, {
    start: 119146,
    length: 3,
    convRule: rule13
  }, {
    start: 119149,
    length: 6,
    convRule: rule114
  }, {
    start: 119155,
    length: 8,
    convRule: rule16
  }, {
    start: 119163,
    length: 8,
    convRule: rule84
  }, {
    start: 119171,
    length: 2,
    convRule: rule13
  }, {
    start: 119173,
    length: 7,
    convRule: rule84
  }, {
    start: 119180,
    length: 30,
    convRule: rule13
  }, {
    start: 119210,
    length: 4,
    convRule: rule84
  }, {
    start: 119214,
    length: 48,
    convRule: rule13
  }, {
    start: 119296,
    length: 66,
    convRule: rule13
  }, {
    start: 119362,
    length: 3,
    convRule: rule84
  }, {
    start: 119365,
    length: 1,
    convRule: rule13
  }, {
    start: 119552,
    length: 87,
    convRule: rule13
  }, {
    start: 119648,
    length: 18,
    convRule: rule17
  }, {
    start: 119808,
    length: 26,
    convRule: rule98
  }, {
    start: 119834,
    length: 26,
    convRule: rule14
  }, {
    start: 119860,
    length: 26,
    convRule: rule98
  }, {
    start: 119886,
    length: 7,
    convRule: rule14
  }, {
    start: 119894,
    length: 18,
    convRule: rule14
  }, {
    start: 119912,
    length: 26,
    convRule: rule98
  }, {
    start: 119938,
    length: 26,
    convRule: rule14
  }, {
    start: 119964,
    length: 1,
    convRule: rule98
  }, {
    start: 119966,
    length: 2,
    convRule: rule98
  }, {
    start: 119970,
    length: 1,
    convRule: rule98
  }, {
    start: 119973,
    length: 2,
    convRule: rule98
  }, {
    start: 119977,
    length: 4,
    convRule: rule98
  }, {
    start: 119982,
    length: 8,
    convRule: rule98
  }, {
    start: 119990,
    length: 4,
    convRule: rule14
  }, {
    start: 119995,
    length: 1,
    convRule: rule14
  }, {
    start: 119997,
    length: 7,
    convRule: rule14
  }, {
    start: 120005,
    length: 11,
    convRule: rule14
  }, {
    start: 120016,
    length: 26,
    convRule: rule98
  }, {
    start: 120042,
    length: 26,
    convRule: rule14
  }, {
    start: 120068,
    length: 2,
    convRule: rule98
  }, {
    start: 120071,
    length: 4,
    convRule: rule98
  }, {
    start: 120077,
    length: 8,
    convRule: rule98
  }, {
    start: 120086,
    length: 7,
    convRule: rule98
  }, {
    start: 120094,
    length: 26,
    convRule: rule14
  }, {
    start: 120120,
    length: 2,
    convRule: rule98
  }, {
    start: 120123,
    length: 4,
    convRule: rule98
  }, {
    start: 120128,
    length: 5,
    convRule: rule98
  }, {
    start: 120134,
    length: 1,
    convRule: rule98
  }, {
    start: 120138,
    length: 7,
    convRule: rule98
  }, {
    start: 120146,
    length: 26,
    convRule: rule14
  }, {
    start: 120172,
    length: 26,
    convRule: rule98
  }, {
    start: 120198,
    length: 26,
    convRule: rule14
  }, {
    start: 120224,
    length: 26,
    convRule: rule98
  }, {
    start: 120250,
    length: 26,
    convRule: rule14
  }, {
    start: 120276,
    length: 26,
    convRule: rule98
  }, {
    start: 120302,
    length: 26,
    convRule: rule14
  }, {
    start: 120328,
    length: 26,
    convRule: rule98
  }, {
    start: 120354,
    length: 26,
    convRule: rule14
  }, {
    start: 120380,
    length: 26,
    convRule: rule98
  }, {
    start: 120406,
    length: 26,
    convRule: rule14
  }, {
    start: 120432,
    length: 26,
    convRule: rule98
  }, {
    start: 120458,
    length: 28,
    convRule: rule14
  }, {
    start: 120488,
    length: 25,
    convRule: rule98
  }, {
    start: 120513,
    length: 1,
    convRule: rule6
  }, {
    start: 120514,
    length: 25,
    convRule: rule14
  }, {
    start: 120539,
    length: 1,
    convRule: rule6
  }, {
    start: 120540,
    length: 6,
    convRule: rule14
  }, {
    start: 120546,
    length: 25,
    convRule: rule98
  }, {
    start: 120571,
    length: 1,
    convRule: rule6
  }, {
    start: 120572,
    length: 25,
    convRule: rule14
  }, {
    start: 120597,
    length: 1,
    convRule: rule6
  }, {
    start: 120598,
    length: 6,
    convRule: rule14
  }, {
    start: 120604,
    length: 25,
    convRule: rule98
  }, {
    start: 120629,
    length: 1,
    convRule: rule6
  }, {
    start: 120630,
    length: 25,
    convRule: rule14
  }, {
    start: 120655,
    length: 1,
    convRule: rule6
  }, {
    start: 120656,
    length: 6,
    convRule: rule14
  }, {
    start: 120662,
    length: 25,
    convRule: rule98
  }, {
    start: 120687,
    length: 1,
    convRule: rule6
  }, {
    start: 120688,
    length: 25,
    convRule: rule14
  }, {
    start: 120713,
    length: 1,
    convRule: rule6
  }, {
    start: 120714,
    length: 6,
    convRule: rule14
  }, {
    start: 120720,
    length: 25,
    convRule: rule98
  }, {
    start: 120745,
    length: 1,
    convRule: rule6
  }, {
    start: 120746,
    length: 25,
    convRule: rule14
  }, {
    start: 120771,
    length: 1,
    convRule: rule6
  }, {
    start: 120772,
    length: 6,
    convRule: rule14
  }, {
    start: 120778,
    length: 1,
    convRule: rule98
  }, {
    start: 120779,
    length: 1,
    convRule: rule14
  }, {
    start: 120782,
    length: 50,
    convRule: rule8
  }, {
    start: 126976,
    length: 44,
    convRule: rule13
  }, {
    start: 127024,
    length: 100,
    convRule: rule13
  }, {
    start: 127136,
    length: 15,
    convRule: rule13
  }, {
    start: 127153,
    length: 14,
    convRule: rule13
  }, {
    start: 127169,
    length: 15,
    convRule: rule13
  }, {
    start: 127185,
    length: 15,
    convRule: rule13
  }, {
    start: 127232,
    length: 11,
    convRule: rule17
  }, {
    start: 127248,
    length: 31,
    convRule: rule13
  }, {
    start: 127280,
    length: 58,
    convRule: rule13
  }, {
    start: 127344,
    length: 43,
    convRule: rule13
  }, {
    start: 127462,
    length: 29,
    convRule: rule13
  }, {
    start: 127504,
    length: 43,
    convRule: rule13
  }, {
    start: 127552,
    length: 9,
    convRule: rule13
  }, {
    start: 127568,
    length: 2,
    convRule: rule13
  }, {
    start: 127744,
    length: 33,
    convRule: rule13
  }, {
    start: 127792,
    length: 6,
    convRule: rule13
  }, {
    start: 127799,
    length: 70,
    convRule: rule13
  }, {
    start: 127872,
    length: 20,
    convRule: rule13
  }, {
    start: 127904,
    length: 37,
    convRule: rule13
  }, {
    start: 127942,
    length: 5,
    convRule: rule13
  }, {
    start: 127968,
    length: 17,
    convRule: rule13
  }, {
    start: 128000,
    length: 63,
    convRule: rule13
  }, {
    start: 128064,
    length: 1,
    convRule: rule13
  }, {
    start: 128066,
    length: 182,
    convRule: rule13
  }, {
    start: 128249,
    length: 4,
    convRule: rule13
  }, {
    start: 128256,
    length: 62,
    convRule: rule13
  }, {
    start: 128336,
    length: 24,
    convRule: rule13
  }, {
    start: 128507,
    length: 5,
    convRule: rule13
  }, {
    start: 128513,
    length: 16,
    convRule: rule13
  }, {
    start: 128530,
    length: 3,
    convRule: rule13
  }, {
    start: 128534,
    length: 1,
    convRule: rule13
  }, {
    start: 128536,
    length: 1,
    convRule: rule13
  }, {
    start: 128538,
    length: 1,
    convRule: rule13
  }, {
    start: 128540,
    length: 3,
    convRule: rule13
  }, {
    start: 128544,
    length: 6,
    convRule: rule13
  }, {
    start: 128552,
    length: 4,
    convRule: rule13
  }, {
    start: 128557,
    length: 1,
    convRule: rule13
  }, {
    start: 128560,
    length: 4,
    convRule: rule13
  }, {
    start: 128565,
    length: 12,
    convRule: rule13
  }, {
    start: 128581,
    length: 11,
    convRule: rule13
  }, {
    start: 128640,
    length: 70,
    convRule: rule13
  }, {
    start: 128768,
    length: 116,
    convRule: rule13
  }, {
    start: 131072,
    length: 42711,
    convRule: rule45
  }, {
    start: 173824,
    length: 4149,
    convRule: rule45
  }, {
    start: 177984,
    length: 222,
    convRule: rule45
  }, {
    start: 194560,
    length: 542,
    convRule: rule45
  }, {
    start: 917505,
    length: 1,
    convRule: rule16
  }, {
    start: 917536,
    length: 96,
    convRule: rule16
  }, {
    start: 917760,
    length: 240,
    convRule: rule84
  }, {
    start: 983040,
    length: 65534,
    convRule: rule164
  }, {
    start: 1048576,
    length: 65534,
    convRule: rule164
  }];

  var checkAttr = function checkAttr(categories) {
    return function ($$char) {
      var numOfBlocks = function () {
        var $28 = $$char < 256;

        if ($28) {
          return numLat1Blocks;
        }

        ;
        return numBlocks;
      }();

      var maybeConversionRule = getRule(allchars)($$char)(numOfBlocks);

      if (maybeConversionRule instanceof Data_Maybe.Nothing) {
        return false;
      }

      ;

      if (maybeConversionRule instanceof Data_Maybe.Just) {
        return Data_Maybe.isJust(Data_Array.elemIndex(Data_Eq.eqInt)(maybeConversionRule.value0.category)(categories));
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode.Internal (line 4800, column 8 - line 4802, column 92): " + [maybeConversionRule.constructor.name]);
    };
  };

  var uIswalnum = checkAttr([gencatLT, gencatLU, gencatLL, gencatLM, gencatLO, gencatMC, gencatME, gencatMN, gencatNO, gencatND, gencatNL]);
  var uIswalpha = checkAttr([gencatLL, gencatLU, gencatLT, gencatLM, gencatLO]);
  var uIswupper = checkAttr([gencatLU, gencatLT]);
  exports["uIswupper"] = uIswupper;
  exports["uIswalpha"] = uIswalpha;
  exports["uIswalnum"] = uIswalnum;
  exports["uIswspace"] = uIswspace;
  exports["uTowupper"] = uTowupper;
  exports["uTowlower"] = uTowlower;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Char.Unicode"] = $PS["Data.Char.Unicode"] || {};
  var exports = $PS["Data.Char.Unicode"];
  var $foreign = $PS["Data.Char.Unicode"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Char = $PS["Data.Char"];
  var Data_Char_Unicode_Internal = $PS["Data.Char.Unicode.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var toUpper = $foreign.withCharCode(Data_Char_Unicode_Internal.uTowupper);
  var toLower = $foreign.withCharCode(Data_Char_Unicode_Internal.uTowlower);

  var isUpper = function isUpper($50) {
    return Data_Char_Unicode_Internal.uIswupper(Data_Char.toCharCode($50));
  };

  var isSpace = function isSpace(c) {
    var uc = Data_Char.toCharCode(c);
    var $14 = uc <= 823;

    if ($14) {
      return uc === 32 || uc >= 9 && uc <= 13 || uc === 160;
    }

    ;
    return Data_Char_Unicode_Internal.uIswspace(Data_Char.toCharCode(c));
  };

  var isOctDigit = function isOctDigit(c) {
    var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
    return diff <= 7 && diff >= 0;
  };

  var isDigit = function isDigit(c) {
    var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
    return diff <= 9 && diff >= 0;
  };

  var isHexDigit = function isHexDigit(c) {
    return isDigit(c) || function () {
      var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
      return diff <= 5 && diff >= 0;
    }() || function () {
      var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
      return diff <= 5 && diff >= 0;
    }();
  };

  var isAlphaNum = function isAlphaNum($54) {
    return Data_Char_Unicode_Internal.uIswalnum(Data_Char.toCharCode($54));
  };

  var isAlpha = function isAlpha($55) {
    return Data_Char_Unicode_Internal.uIswalpha(Data_Char.toCharCode($55));
  };

  var digitToInt = function digitToInt(c) {
    var hexUpper = Data_Char.toCharCode(c) - Data_Char.toCharCode("A") | 0;
    var hexLower = Data_Char.toCharCode(c) - Data_Char.toCharCode("a") | 0;
    var dec = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;

    var result = function () {
      if (dec <= 9 && dec >= 0) {
        return new Data_Maybe.Just(dec);
      }

      ;

      if (hexLower <= 5 && hexLower >= 0) {
        return Data_Maybe.Just.create(hexLower + 10 | 0);
      }

      ;

      if (hexUpper <= 5 && hexUpper >= 0) {
        return Data_Maybe.Just.create(hexUpper + 10 | 0);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Char.Unicode (line 547, column 5 - line 547, column 24): " + []);
    }();

    return result;
  };

  exports["isUpper"] = isUpper;
  exports["isAlpha"] = isAlpha;
  exports["isAlphaNum"] = isAlphaNum;
  exports["isDigit"] = isDigit;
  exports["isOctDigit"] = isOctDigit;
  exports["isHexDigit"] = isHexDigit;
  exports["isSpace"] = isSpace;
  exports["digitToInt"] = digitToInt;
  exports["toLower"] = toLower;
  exports["toUpper"] = toUpper;
})(PS);

(function (exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});

(function (exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];

  var uncons = function uncons(v) {
    if (v === "") {
      return Data_Maybe.Nothing.value;
    }

    ;
    return new Data_Maybe.Just({
      head: Data_String_Unsafe.charAt(0)(v),
      tail: $foreign.drop(1)(v)
    });
  };

  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var contains = function contains(pat) {
    var $16 = indexOf(pat);
    return function ($17) {
      return Data_Maybe.isJust($16($17));
    };
  };

  var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["contains"] = contains;
  exports["charAt"] = charAt;
  exports["uncons"] = uncons;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["DataType"] = $PS["DataType"] || {};
  var exports = $PS["DataType"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Char_Unicode = $PS["Data.Char.Unicode"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Lattice = $PS["Lattice"];
  var Util = $PS["Util"];

  var Ctr = function Ctr(x) {
    return x;
  };

  var DataType = function () {
    function DataType(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    DataType.create = function (value0) {
      return function (value1) {
        return new DataType(value0, value1);
      };
    };

    return DataType;
  }();

  var DataTypeFor = function DataTypeFor(dataTypeFor) {
    this.dataTypeFor = dataTypeFor;
  };

  var typeName = function typeName(v) {
    return v.value0;
  };

  var showDataType = new Data_Show.Show(typeName);
  var newtypeCtr = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Ctr);

  var isCtrOp = function isCtrOp(str) {
    return ":" === Util.fromJust(Util.absurd)(Data_String_CodeUnits.charAt(0)(str));
  };

  var isCtrName = function isCtrName(str) {
    return Data_Char_Unicode.isUpper(Util.fromJust(Util.absurd)(Data_String_CodeUnits.charAt(0)(str)));
  };

  var showCtr = new Data_Show.Show(function (c) {
    var show$prime = function show$prime(str) {
      if (isCtrName(str)) {
        return str;
      }

      ;

      if (isCtrOp(str)) {
        return "(" + (str + ")");
      }

      ;

      if (Data_Boolean.otherwise) {
        return Util.error(Util.absurd);
      }

      ;
      throw new Error("Failed pattern match at DataType (line 38, column 7 - line 40, column 48): " + [str.constructor.name]);
    };

    return show$prime(Data_Newtype.unwrap(newtypeCtr)(c));
  });
  var eqDataType = new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(typeName));
  var eqCtr = new Data_Eq.Eq(function (x) {
    return function (y) {
      return x === y;
    };
  });
  var ordCtr = new Data_Ord.Ord(function () {
    return eqCtr;
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
  });

  var dataTypeFor = function dataTypeFor(dict) {
    return dict.dataTypeFor;
  };

  var dataType = function dataType(name) {
    var $33 = DataType.create(name);
    var $34 = Data_Map_Internal.fromFoldable(ordCtr)(Data_Foldable.foldableArray);
    var $35 = Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(Data_Tuple.Tuple.create));
    return function ($36) {
      return $33($34($35($36)));
    };
  };

  var ctrs = function ctrs(v) {
    return Data_Map_Internal.keys(v.value1);
  };

  var cTrue = "True";
  var cSome = "Some";
  var cPair = "Pair";
  var cNone = "None";
  var cNil = "Nil";
  var cLinePlot = "LinePlot";
  var cLineChart = "LineChart";
  var cFalse = "False";
  var cCons = ":";
  var cBarChart = "BarChart";
  var dataTypes = Data_List.fromFoldable(Data_Foldable.foldableArray)([dataType("Bool")([new Data_Tuple.Tuple(cTrue, 0), new Data_Tuple.Tuple(cFalse, 0)]), dataType("List")([new Data_Tuple.Tuple(cNil, 0), new Data_Tuple.Tuple(cCons, 2)]), dataType("Option")([new Data_Tuple.Tuple(cNone, 0), new Data_Tuple.Tuple(cSome, 1)]), dataType("Ordering")([new Data_Tuple.Tuple("GT", 0), new Data_Tuple.Tuple("LT", 0), new Data_Tuple.Tuple("EQ", 0)]), dataType("Pair")([new Data_Tuple.Tuple("Pair", 2)]), dataType("Tree")([new Data_Tuple.Tuple("Empty", 0), new Data_Tuple.Tuple("NonEmpty", 3)]), dataType("Point")([new Data_Tuple.Tuple("Point", 2)]), dataType("Orient")([new Data_Tuple.Tuple("Horiz", 0), new Data_Tuple.Tuple("Vert", 0)]), dataType("Plot")([new Data_Tuple.Tuple(cBarChart, 2), new Data_Tuple.Tuple(cLineChart, 2), new Data_Tuple.Tuple(cLinePlot, 2)]), dataType("GraphicsElement")([new Data_Tuple.Tuple("Circle", 4), new Data_Tuple.Tuple("Group", 1), new Data_Tuple.Tuple("Line", 4), new Data_Tuple.Tuple("Polyline", 3), new Data_Tuple.Tuple("Polymarkers", 2), new Data_Tuple.Tuple("Rect", 5), new Data_Tuple.Tuple("Text", 5), new Data_Tuple.Tuple("Viewport", 9)]), dataType("Transform")([new Data_Tuple.Tuple("Scale", 2), new Data_Tuple.Tuple("Translate", 2)]), dataType("Marker")([new Data_Tuple.Tuple("Arrowhead", 0)])]);
  var ctrToDataType = Data_Map_Internal.fromFoldable(ordCtr)(Data_List_Types.foldableList)(Data_List.concat(Data_Functor.mapFlipped(Data_List_Types.functorList)(dataTypes)(function (d) {
    return Data_Functor.mapFlipped(Data_List_Types.functorList)(ctrs(d))(function (v) {
      return new Data_Tuple.Tuple(v, d);
    });
  })));
  var dataTypeForCtr = new DataTypeFor(function (c) {
    return Data_Either.note("Unknown constructor " + Data_Show.show(showCtr)(c))(Data_Map_Internal.lookup(ordCtr)(c)(ctrToDataType));
  });
  var dataTypeForListCtr = new DataTypeFor(function (v) {
    if (v instanceof Data_List_Types.Nil) {
      return Util.error(Util.absurd);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return dataTypeFor(dataTypeForCtr)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at DataType (line 73, column 1 - line 75, column 39): " + [v.constructor.name]);
  });
  var keyCtr = new Lattice.Key(function () {
    return ordCtr;
  }, function (msg) {
    return function (c) {
      return function (cs) {
        return Data_Functor["void"](Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(dataTypeFor(dataTypeForCtr)(c))(function (d) {
          return Control_Bind.bind(Data_Either.bindEither)(dataTypeFor(dataTypeForListCtr)(cs))(function (d$prime) {
            return Util["with"](msg + (Data_Show.show(showCtr)(c) + (" is not a constructor of " + Data_Show.show(showDataType)(d$prime))))(Util.mayFailEq(showDataType)(eqDataType)(d)(d$prime));
          });
        }));
      };
    };
  });

  var arity = function arity(c) {
    return Control_Bind.bind(Data_Either.bindEither)(dataTypeFor(dataTypeForCtr)(c))(function (v) {
      return Data_Either.note(Util.absurd)(Data_Map_Internal.lookup(ordCtr)(c)(v.value1));
    });
  };

  var checkArity = function checkArity(c) {
    return function (n) {
      return Data_Functor["void"](Data_Either.functorEither)(Util["with"]("Checking arity of " + Data_Show.show(showCtr)(c))(Util.bind2Flipped(Data_Either.monadEither)(Util.mayFailEq(Data_Show.showInt)(Data_Eq.eqInt))(arity(c))(Control_Applicative.pure(Data_Either.applicativeEither)(n))));
    };
  };

  exports["dataTypeFor"] = dataTypeFor;
  exports["isCtrName"] = isCtrName;
  exports["isCtrOp"] = isCtrOp;
  exports["ctrs"] = ctrs;
  exports["arity"] = arity;
  exports["checkArity"] = checkArity;
  exports["cBarChart"] = cBarChart;
  exports["cLineChart"] = cLineChart;
  exports["cLinePlot"] = cLinePlot;
  exports["cFalse"] = cFalse;
  exports["cTrue"] = cTrue;
  exports["cNil"] = cNil;
  exports["cCons"] = cCons;
  exports["cPair"] = cPair;
  exports["eqCtr"] = eqCtr;
  exports["ordCtr"] = ordCtr;
  exports["showCtr"] = showCtr;
  exports["keyCtr"] = keyCtr;
  exports["showDataType"] = showDataType;
  exports["dataTypeForCtr"] = dataTypeForCtr;
  exports["dataTypeForListCtr"] = dataTypeForListCtr;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];

  var Choice = function Choice(Profunctor0, left, right) {
    this.Profunctor0 = Profunctor0;
    this.left = left;
    this.right = right;
  };

  var right = function right(dict) {
    return dict.right;
  };

  var left = function left(dict) {
    return dict.left;
  };

  var splitChoice = function splitChoice(dictCategory) {
    return function (dictChoice) {
      return function (l) {
        return function (r) {
          return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
        };
      };
    };
  };

  var fanin = function fanin(dictCategory) {
    return function (dictChoice) {
      return function (l) {
        return function (r) {
          var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(dictCategory));
          return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
        };
      };
    };
  };

  var choiceFn = new Choice(function () {
    return Data_Profunctor.profunctorFn;
  }, function (v) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return Data_Either.Left.create(v(v1.value0));
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return new Data_Either.Right(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v.constructor.name, v1.constructor.name]);
    };
  }, Data_Functor.map(Data_Either.functorEither));
  exports["fanin"] = fanin;
  exports["choiceFn"] = choiceFn;
})(PS);

(function (exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];

  var Ring = function Ring(Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
  };

  var sub = function sub(dict) {
    return dict.sub;
  };

  var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
  }, $foreign.numSub);
  var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
  }, $foreign.intSub);

  var negate = function negate(dictRing) {
    return function (a) {
      return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
  };

  exports["sub"] = sub;
  exports["negate"] = negate;
  exports["ringInt"] = ringInt;
  exports["ringNumber"] = ringNumber;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];

  var Alternative = function Alternative(Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
  };

  exports["Alternative"] = Alternative;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];

  var StateT = function StateT(x) {
    return x;
  };

  var runStateT = function runStateT(v) {
    return v;
  };

  var lazyStateT = new Control_Lazy.Lazy(function (f) {
    return function (s) {
      var v = f(Data_Unit.unit);
      return v(s);
    };
  });

  var functorStateT = function functorStateT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return function (s) {
          return Data_Functor.map(dictFunctor)(function (v1) {
            return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
          })(v(s));
        };
      };
    });
  };

  var evalStateT = function evalStateT(dictFunctor) {
    return function (v) {
      return function (s) {
        return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
      };
    };
  };

  var monadStateT = function monadStateT(dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeStateT(dictMonad);
    }, function () {
      return bindStateT(dictMonad);
    });
  };

  var bindStateT = function bindStateT(dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyStateT(dictMonad);
    }, function (v) {
      return function (f) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
            var v3 = f(v1.value0);
            return v3(v1.value1);
          });
        };
      };
    });
  };

  var applyStateT = function applyStateT(dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorStateT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadStateT(dictMonad)));
  };

  var applicativeStateT = function applicativeStateT(dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyStateT(dictMonad);
    }, function (a) {
      return function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
      };
    });
  };

  var monadStateStateT = function monadStateStateT(dictMonad) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadStateT(dictMonad);
    }, function (f) {
      return StateT(function () {
        var $112 = Control_Applicative.pure(dictMonad.Applicative0());
        return function ($113) {
          return $112(f($113));
        };
      }());
    });
  };

  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["evalStateT"] = evalStateT;
  exports["functorStateT"] = functorStateT;
  exports["monadStateT"] = monadStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.MonadPlus"] = $PS["Control.MonadPlus"] || {};
  var exports = $PS["Control.MonadPlus"];

  var MonadPlus = function MonadPlus(MonadZero0) {
    this.MonadZero0 = MonadZero0;
  };

  exports["MonadPlus"] = MonadPlus;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Control.MonadZero"] = $PS["Control.MonadZero"] || {};
  var exports = $PS["Control.MonadZero"];

  var MonadZero = function MonadZero(Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
  };

  exports["MonadZero"] = MonadZero;
})(PS);

(function (exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  }; // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.


  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return (x % yy + yy) % yy;
    };
  };

  exports.numDiv = function (n1) {
    return function (n2) {
      return n1 / n2;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];

  var CommutativeRing = function CommutativeRing(Ring0) {
    this.Ring0 = Ring0;
  };

  var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
  });
  var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
  exports["commutativeRingNumber"] = commutativeRingNumber;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];

  var EuclideanRing = function EuclideanRing(CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
  };

  var mod = function mod(dict) {
    return dict.mod;
  };

  var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
  }, function (v) {
    return 1;
  }, $foreign.numDiv, function (v) {
    return function (v1) {
      return 0.0;
    };
  });
  var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);

  var div = function div(dict) {
    return dict.div;
  };

  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
  exports["euclideanRingNumber"] = euclideanRingNumber;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.String.Pattern"] = $PS["Data.String.Pattern"] || {};
  var exports = $PS["Data.String.Pattern"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Pattern = function Pattern(x) {
    return x;
  };

  var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Pattern);
  exports["newtypePattern"] = newtypePattern;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.Pos"] = $PS["Text.Parsing.Parser.Pos"] || {};
  var exports = $PS["Text.Parsing.Parser.Pos"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];

  var updatePosString = function updatePosString(pos$prime) {
    return function (str) {
      var updatePosChar = function updatePosChar(v) {
        return function (c) {
          if (c === "\x0a") {
            return {
              line: v.line + 1 | 0,
              column: 1
            };
          }

          ;

          if (c === "\x0d") {
            return {
              line: v.line + 1 | 0,
              column: 1
            };
          }

          ;

          if (c === "\x09") {
            return {
              line: v.line,
              column: (v.column + 8 | 0) - Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.column - 1 | 0)(8) | 0
            };
          }

          ;
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        };
      };

      return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(""))(str));
    };
  };

  var showPosition = new Data_Show.Show(function (v) {
    return "(Position { line: " + (Data_Show.show(Data_Show.showInt)(v.line) + (", column: " + (Data_Show.show(Data_Show.showInt)(v.column) + " })")));
  });
  var initialPos = {
    line: 1,
    column: 1
  };
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
  exports["showPosition"] = showPosition;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser"] = $PS["Text.Parsing.Parser"] || {};
  var exports = $PS["Text.Parsing.Parser"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_MonadPlus = $PS["Control.MonadPlus"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];

  var ParseState = function () {
    function ParseState(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    ParseState.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new ParseState(value0, value1, value2);
        };
      };
    };

    return ParseState;
  }();

  var ParseError = function () {
    function ParseError(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ParseError.create = function (value0) {
      return function (value1) {
        return new ParseError(value0, value1);
      };
    };

    return ParseError;
  }();

  var ParserT = function ParserT(x) {
    return x;
  };

  var showParseError = new Data_Show.Show(function (v) {
    return "(ParseError " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Text_Parsing_Parser_Pos.showPosition)(v.value1) + ")")));
  });
  var newtypeParserT = new Data_Newtype.Newtype(function (n) {
    return n;
  }, ParserT);

  var runParserT = function runParserT(dictMonad) {
    return function (s) {
      return function (p) {
        var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
        return Control_Monad_State_Trans.evalStateT(dictMonad.Bind1().Apply0().Functor0())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
      };
    };
  };

  var runParser = function runParser(s) {
    var $90 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
    var $91 = runParserT(Data_Identity.monadIdentity)(s);
    return function ($92) {
      return $90($91($92));
    };
  };

  var monadThrowParserT = function monadThrowParserT(dictMonad) {
    return Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };

  var monadStateParserT = function monadStateParserT(dictMonad) {
    return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };

  var position = function position(dictMonad) {
    return Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
      return v.value1;
    });
  };

  var monadParserT = function monadParserT(dictMonad) {
    return Control_Monad_Except_Trans.monadExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };

  var lazyParserT = new Control_Lazy.Lazy(function (f) {
    return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)(function () {
      var $98 = Data_Newtype.unwrap(newtypeParserT);
      return function ($99) {
        return Control_Monad_Except_Trans.runExceptT($98(f($99)));
      };
    }());
  });

  var functorParserT = function functorParserT(dictFunctor) {
    return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };

  var failWithPosition = function failWithPosition(dictMonad) {
    return function (message) {
      return function (pos) {
        return Control_Monad_Error_Class.throwError(monadThrowParserT(dictMonad))(new ParseError(message, pos));
      };
    };
  };

  var bindParserT = function bindParserT(dictMonad) {
    return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };

  var fail = function fail(dictMonad) {
    return function (message) {
      return Control_Bind.bindFlipped(bindParserT(dictMonad))(failWithPosition(dictMonad)(message))(position(dictMonad));
    };
  };

  var applyParserT = function applyParserT(dictMonad) {
    return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };

  var applicativeParserT = function applicativeParserT(dictMonad) {
    return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };

  var altParserT = function altParserT(dictMonad) {
    return new Control_Alt.Alt(function () {
      return functorParserT(dictMonad.Bind1().Apply0().Functor0());
    }, function (p1) {
      return function (p2) {
        return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
            if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
              return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
            }

            ;
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
          });
        })));
      };
    });
  };

  var plusParserT = function plusParserT(dictMonad) {
    return new Control_Plus.Plus(function () {
      return altParserT(dictMonad);
    }, fail(dictMonad)("No alternative"));
  };

  var alternativeParserT = function alternativeParserT(dictMonad) {
    return new Control_Alternative.Alternative(function () {
      return applicativeParserT(dictMonad);
    }, function () {
      return plusParserT(dictMonad);
    });
  };

  var monadZeroParserT = function monadZeroParserT(dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeParserT(dictMonad);
    }, function () {
      return monadParserT(dictMonad);
    });
  };

  var monadPlusParserT = function monadPlusParserT(dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
      return monadZeroParserT(dictMonad);
    });
  };

  exports["ParseError"] = ParseError;
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["runParser"] = runParser;
  exports["fail"] = fail;
  exports["showParseError"] = showParseError;
  exports["newtypeParserT"] = newtypeParserT;
  exports["lazyParserT"] = lazyParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["monadPlusParserT"] = monadPlusParserT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.Combinators"] = $PS["Text.Parsing.Parser.Combinators"] || {};
  var exports = $PS["Text.Parsing.Parser.Combinators"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];

  var withErrorMessage = function withErrorMessage(dictMonad) {
    return function (p) {
      return function (msg) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
      };
    };
  };

  var tryRethrow = function tryRethrow(dictMonad) {
    return function (p) {
      return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
          if (v1.value0 instanceof Data_Either.Left) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Either.Left(new Text_Parsing_Parser.ParseError(v1.value0.value0.value0, v.value1)), new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
          }

          ;
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
        });
      })));
    };
  };

  var $$try = function $$try(dictMonad) {
    return function (p) {
      return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
        return Control_Bind.bind(dictMonad.Bind1())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
          if (v1.value0 instanceof Data_Either.Left) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
          }

          ;
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value1));
        });
      })));
    };
  };

  var skipMany1 = function skipMany1(dictMonad) {
    return function (p) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (x) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(skipMany(dictMonad)(p))(function (xs) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
        });
      });
    };
  };

  var skipMany = function skipMany(dictMonad) {
    return function (p) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(skipMany1(dictMonad)(p))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
    };
  };

  var sepBy1 = function sepBy1(dictMonad) {
    return function (p) {
      return function (sep) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (a) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(sep)(p)))(function (as) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(a, as));
          });
        });
      };
    };
  };

  var sepBy = function sepBy(dictMonad) {
    return function (p) {
      return function (sep) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
      };
    };
  };

  var option = function option(dictMonad) {
    return function (a) {
      return function (p) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
      };
    };
  };

  var notFollowedBy = function notFollowedBy(dictMonad) {
    return function (p) {
      return $$try(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))($$try(dictMonad)(p))(Text_Parsing_Parser.fail(dictMonad)("Negated parser succeeded")))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit)));
    };
  };

  var choice = function choice(dictFoldable) {
    return function (dictMonad) {
      return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
    };
  };

  var between = function between(dictMonad) {
    return function (open) {
      return function (close) {
        return function (p) {
          return Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(open)(p))(close);
        };
      };
    };
  };

  var asErrorMessage = function asErrorMessage(dictMonad) {
    return Data_Function.flip(withErrorMessage(dictMonad));
  };

  exports["withErrorMessage"] = withErrorMessage;
  exports["asErrorMessage"] = asErrorMessage;
  exports["between"] = between;
  exports["option"] = option;
  exports["try"] = $$try;
  exports["tryRethrow"] = tryRethrow;
  exports["sepBy"] = sepBy;
  exports["sepBy1"] = sepBy1;
  exports["choice"] = choice;
  exports["skipMany"] = skipMany;
  exports["skipMany1"] = skipMany1;
  exports["notFollowedBy"] = notFollowedBy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.Expr"] = $PS["Text.Parsing.Parser.Expr"] || {};
  var exports = $PS["Text.Parsing.Parser.Expr"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];

  var AssocNone = function () {
    function AssocNone() {}

    ;
    AssocNone.value = new AssocNone();
    return AssocNone;
  }();

  var AssocLeft = function () {
    function AssocLeft() {}

    ;
    AssocLeft.value = new AssocLeft();
    return AssocLeft;
  }();

  var AssocRight = function () {
    function AssocRight() {}

    ;
    AssocRight.value = new AssocRight();
    return AssocRight;
  }();

  var Infix = function () {
    function Infix(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Infix.create = function (value0) {
      return function (value1) {
        return new Infix(value0, value1);
      };
    };

    return Infix;
  }();

  var Prefix = function () {
    function Prefix(value0) {
      this.value0 = value0;
    }

    ;

    Prefix.create = function (value0) {
      return new Prefix(value0);
    };

    return Prefix;
  }();

  var Postfix = function () {
    function Postfix(value0) {
      this.value0 = value0;
    }

    ;

    Postfix.create = function (value0) {
      return new Postfix(value0);
    };

    return Postfix;
  }();

  var termP = function termP(dictMonad) {
    return function (prefixP) {
      return function (term) {
        return function (postfixP) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(prefixP)(function (pre) {
            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(term)(function (x) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(postfixP)(function (post) {
                return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(post(pre(x)));
              });
            });
          });
        };
      };
    };
  };

  var splitOp = function splitOp(v) {
    return function (accum) {
      if (v instanceof Infix && v.value1 instanceof AssocNone) {
        return {
          rassoc: accum.rassoc,
          lassoc: accum.lassoc,
          nassoc: new Data_List_Types.Cons(v.value0, accum.nassoc),
          prefix: accum.prefix,
          postfix: accum.postfix
        };
      }

      ;

      if (v instanceof Infix && v.value1 instanceof AssocLeft) {
        return {
          rassoc: accum.rassoc,
          lassoc: new Data_List_Types.Cons(v.value0, accum.lassoc),
          nassoc: accum.nassoc,
          prefix: accum.prefix,
          postfix: accum.postfix
        };
      }

      ;

      if (v instanceof Infix && v.value1 instanceof AssocRight) {
        return {
          rassoc: new Data_List_Types.Cons(v.value0, accum.rassoc),
          lassoc: accum.lassoc,
          nassoc: accum.nassoc,
          prefix: accum.prefix,
          postfix: accum.postfix
        };
      }

      ;

      if (v instanceof Prefix) {
        return {
          rassoc: accum.rassoc,
          lassoc: accum.lassoc,
          nassoc: accum.nassoc,
          prefix: new Data_List_Types.Cons(v.value0, accum.prefix),
          postfix: accum.postfix
        };
      }

      ;

      if (v instanceof Postfix) {
        return {
          rassoc: accum.rassoc,
          lassoc: accum.lassoc,
          nassoc: accum.nassoc,
          prefix: accum.prefix,
          postfix: new Data_List_Types.Cons(v.value0, accum.postfix)
        };
      }

      ;
      throw new Error("Failed pattern match at Text.Parsing.Parser.Expr (line 69, column 1 - line 69, column 80): " + [v.constructor.name, accum.constructor.name]);
    };
  };

  var rassocP1 = function rassocP1(dictMonad) {
    return function (x) {
      return function (rassocOp) {
        return function (prefixP) {
          return function (term) {
            return function (postfixP) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(rassocP(dictMonad)(x)(rassocOp)(prefixP)(term)(postfixP))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(x));
            };
          };
        };
      };
    };
  };

  var rassocP = function rassocP(dictMonad) {
    return function (x) {
      return function (rassocOp) {
        return function (prefixP) {
          return function (term) {
            return function (postfixP) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(rassocOp)(function (f) {
                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(termP(dictMonad)(prefixP)(term)(postfixP))(function (z) {
                  return rassocP1(dictMonad)(z)(rassocOp)(prefixP)(term)(postfixP);
                }))(function (y) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(f(x)(y));
                });
              });
            };
          };
        };
      };
    };
  };

  var nassocP = function nassocP(dictMonad) {
    return function (x) {
      return function (nassocOp) {
        return function (prefixP) {
          return function (term) {
            return function (postfixP) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(nassocOp)(function (f) {
                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(termP(dictMonad)(prefixP)(term)(postfixP))(function (y) {
                  return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(f(x)(y));
                });
              });
            };
          };
        };
      };
    };
  };

  var lassocP1 = function lassocP1(dictMonad) {
    return function (x) {
      return function (lassocOp) {
        return function (prefixP) {
          return function (term) {
            return function (postfixP) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(lassocP(dictMonad)(x)(lassocOp)(prefixP)(term)(postfixP))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(x));
            };
          };
        };
      };
    };
  };

  var lassocP = function lassocP(dictMonad) {
    return function (x) {
      return function (lassocOp) {
        return function (prefixP) {
          return function (term) {
            return function (postfixP) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(lassocOp)(function (f) {
                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(termP(dictMonad)(prefixP)(term)(postfixP))(function (y) {
                  return lassocP1(dictMonad)(f(x)(y))(lassocOp)(prefixP)(term)(postfixP);
                });
              });
            };
          };
        };
      };
    };
  };

  var makeParser = function makeParser(dictMonad) {
    return function (term) {
      return function (ops) {
        var accum = Data_Foldable.foldr(Data_Foldable.foldableArray)(splitOp)({
          rassoc: Data_List_Types.Nil.value,
          lassoc: Data_List_Types.Nil.value,
          nassoc: Data_List_Types.Nil.value,
          prefix: Data_List_Types.Nil.value,
          postfix: Data_List_Types.Nil.value
        })(ops);
        var lassocOp = Text_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(dictMonad)(accum.lassoc);
        var nassocOp = Text_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(dictMonad)(accum.nassoc);
        var postfixOp = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(dictMonad)(accum.postfix))("");
        var postfixP = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(postfixOp)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Control_Category.identity(Control_Category.categoryFn)));
        var prefixOp = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(dictMonad)(accum.prefix))("");
        var prefixP = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(prefixOp)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Control_Category.identity(Control_Category.categoryFn)));
        var rassocOp = Text_Parsing_Parser_Combinators.choice(Data_List_Types.foldableList)(dictMonad)(accum.rassoc);
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(termP(dictMonad)(prefixP)(term)(postfixP))(function (x) {
          return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(rassocP(dictMonad)(x)(rassocOp)(prefixP)(term)(postfixP))(lassocP(dictMonad)(x)(lassocOp)(prefixP)(term)(postfixP)))(nassocP(dictMonad)(x)(nassocOp)(prefixP)(term)(postfixP)))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(x)))("operator");
        });
      };
    };
  };

  var buildExprParser = function buildExprParser(dictMonad) {
    return function (operators) {
      return function (simpleExpr) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(makeParser(dictMonad))(simpleExpr)(operators);
      };
    };
  };

  exports["AssocNone"] = AssocNone;
  exports["AssocLeft"] = AssocLeft;
  exports["AssocRight"] = AssocRight;
  exports["Infix"] = Infix;
  exports["buildExprParser"] = buildExprParser;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Primitive.Parse"] = $PS["Primitive.Parse"] || {};
  var exports = $PS["Primitive.Parse"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Text_Parsing_Parser_Expr = $PS["Text.Parsing.Parser.Expr"];

  var opDef = function opDef(op) {
    return function (prec) {
      return function (assoc) {
        return new Data_Tuple.Tuple(op, {
          op: op,
          prec: prec,
          assoc: assoc
        });
      };
    };
  };

  var opDefs = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([opDef(".")(8)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("!")(8)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("**")(8)(Text_Parsing_Parser_Expr.AssocRight.value), opDef("*")(7)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("/")(7)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("+")(6)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("-")(6)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef(":")(6)(Text_Parsing_Parser_Expr.AssocRight.value), opDef("++")(5)(Text_Parsing_Parser_Expr.AssocRight.value), opDef("==")(4)(Text_Parsing_Parser_Expr.AssocNone.value), opDef("/=")(4)(Text_Parsing_Parser_Expr.AssocNone.value), opDef("<")(4)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef(">")(4)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef("<=")(4)(Text_Parsing_Parser_Expr.AssocLeft.value), opDef(">=")(4)(Text_Parsing_Parser_Expr.AssocLeft.value)]);
  exports["opDefs"] = opDefs;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["SExpr"] = $PS["SExpr"] || {};
  var exports = $PS["SExpr"];

  var PEnd = function () {
    function PEnd() {}

    ;
    PEnd.value = new PEnd();
    return PEnd;
  }();

  var PNext = function () {
    function PNext(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    PNext.create = function (value0) {
      return function (value1) {
        return new PNext(value0, value1);
      };
    };

    return PNext;
  }();

  var PVar = function () {
    function PVar(value0) {
      this.value0 = value0;
    }

    ;

    PVar.create = function (value0) {
      return new PVar(value0);
    };

    return PVar;
  }();

  var PConstr = function () {
    function PConstr(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    PConstr.create = function (value0) {
      return function (value1) {
        return new PConstr(value0, value1);
      };
    };

    return PConstr;
  }();

  var PRecord = function () {
    function PRecord(value0) {
      this.value0 = value0;
    }

    ;

    PRecord.create = function (value0) {
      return new PRecord(value0);
    };

    return PRecord;
  }();

  var PListEmpty = function () {
    function PListEmpty() {}

    ;
    PListEmpty.value = new PListEmpty();
    return PListEmpty;
  }();

  var PListNonEmpty = function () {
    function PListNonEmpty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    PListNonEmpty.create = function (value0) {
      return function (value1) {
        return new PListNonEmpty(value0, value1);
      };
    };

    return PListNonEmpty;
  }();

  var Var = function () {
    function Var(value0) {
      this.value0 = value0;
    }

    ;

    Var.create = function (value0) {
      return new Var(value0);
    };

    return Var;
  }();

  var Op = function () {
    function Op(value0) {
      this.value0 = value0;
    }

    ;

    Op.create = function (value0) {
      return new Op(value0);
    };

    return Op;
  }();

  var Int = function () {
    function Int(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Int.create = function (value0) {
      return function (value1) {
        return new Int(value0, value1);
      };
    };

    return Int;
  }();

  var Float = function () {
    function Float(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Float.create = function (value0) {
      return function (value1) {
        return new Float(value0, value1);
      };
    };

    return Float;
  }();

  var Str = function () {
    function Str(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Str.create = function (value0) {
      return function (value1) {
        return new Str(value0, value1);
      };
    };

    return Str;
  }();

  var Constr = function () {
    function Constr(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Constr.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Constr(value0, value1, value2);
        };
      };
    };

    return Constr;
  }();

  var Record = function () {
    function Record(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Record.create = function (value0) {
      return function (value1) {
        return new Record(value0, value1);
      };
    };

    return Record;
  }();

  var Matrix = function () {
    function Matrix(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Matrix.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Matrix(value0, value1, value2, value3);
          };
        };
      };
    };

    return Matrix;
  }();

  var Lambda = function () {
    function Lambda(value0) {
      this.value0 = value0;
    }

    ;

    Lambda.create = function (value0) {
      return new Lambda(value0);
    };

    return Lambda;
  }();

  var RecordLookup = function () {
    function RecordLookup(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    RecordLookup.create = function (value0) {
      return function (value1) {
        return new RecordLookup(value0, value1);
      };
    };

    return RecordLookup;
  }();

  var App = function () {
    function App(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    App.create = function (value0) {
      return function (value1) {
        return new App(value0, value1);
      };
    };

    return App;
  }();

  var BinaryApp = function () {
    function BinaryApp(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    BinaryApp.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new BinaryApp(value0, value1, value2);
        };
      };
    };

    return BinaryApp;
  }();

  var MatchAs = function () {
    function MatchAs(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    MatchAs.create = function (value0) {
      return function (value1) {
        return new MatchAs(value0, value1);
      };
    };

    return MatchAs;
  }();

  var IfElse = function () {
    function IfElse(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    IfElse.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new IfElse(value0, value1, value2);
        };
      };
    };

    return IfElse;
  }();

  var ListEmpty = function () {
    function ListEmpty(value0) {
      this.value0 = value0;
    }

    ;

    ListEmpty.create = function (value0) {
      return new ListEmpty(value0);
    };

    return ListEmpty;
  }();

  var ListNonEmpty = function () {
    function ListNonEmpty(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    ListNonEmpty.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new ListNonEmpty(value0, value1, value2);
        };
      };
    };

    return ListNonEmpty;
  }();

  var ListEnum = function () {
    function ListEnum(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ListEnum.create = function (value0) {
      return function (value1) {
        return new ListEnum(value0, value1);
      };
    };

    return ListEnum;
  }();

  var ListComp = function () {
    function ListComp(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    ListComp.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new ListComp(value0, value1, value2);
        };
      };
    };

    return ListComp;
  }();

  var Let = function () {
    function Let(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Let.create = function (value0) {
      return function (value1) {
        return new Let(value0, value1);
      };
    };

    return Let;
  }();

  var LetRec = function () {
    function LetRec(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    LetRec.create = function (value0) {
      return function (value1) {
        return new LetRec(value0, value1);
      };
    };

    return LetRec;
  }();

  var End = function () {
    function End(value0) {
      this.value0 = value0;
    }

    ;

    End.create = function (value0) {
      return new End(value0);
    };

    return End;
  }();

  var Next = function () {
    function Next(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Next.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Next(value0, value1, value2);
        };
      };
    };

    return Next;
  }();

  var Guard = function () {
    function Guard(value0) {
      this.value0 = value0;
    }

    ;

    Guard.create = function (value0) {
      return new Guard(value0);
    };

    return Guard;
  }();

  var Generator = function () {
    function Generator(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Generator.create = function (value0) {
      return function (value1) {
        return new Generator(value0, value1);
      };
    };

    return Generator;
  }();

  var Declaration = function () {
    function Declaration(value0) {
      this.value0 = value0;
    }

    ;

    Declaration.create = function (value0) {
      return new Declaration(value0);
    };

    return Declaration;
  }();

  var VarDef = function () {
    function VarDef(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    VarDef.create = function (value0) {
      return function (value1) {
        return new VarDef(value0, value1);
      };
    };

    return VarDef;
  }();

  var Module = function () {
    function Module(value0) {
      this.value0 = value0;
    }

    ;

    Module.create = function (value0) {
      return new Module(value0);
    };

    return Module;
  }();

  exports["Var"] = Var;
  exports["Op"] = Op;
  exports["Int"] = Int;
  exports["Float"] = Float;
  exports["Str"] = Str;
  exports["Constr"] = Constr;
  exports["Record"] = Record;
  exports["Matrix"] = Matrix;
  exports["Lambda"] = Lambda;
  exports["RecordLookup"] = RecordLookup;
  exports["App"] = App;
  exports["BinaryApp"] = BinaryApp;
  exports["MatchAs"] = MatchAs;
  exports["IfElse"] = IfElse;
  exports["ListEmpty"] = ListEmpty;
  exports["ListNonEmpty"] = ListNonEmpty;
  exports["ListEnum"] = ListEnum;
  exports["ListComp"] = ListComp;
  exports["Let"] = Let;
  exports["LetRec"] = LetRec;
  exports["End"] = End;
  exports["Next"] = Next;
  exports["PVar"] = PVar;
  exports["PConstr"] = PConstr;
  exports["PRecord"] = PRecord;
  exports["PListEmpty"] = PListEmpty;
  exports["PListNonEmpty"] = PListNonEmpty;
  exports["PEnd"] = PEnd;
  exports["PNext"] = PNext;
  exports["VarDef"] = VarDef;
  exports["Guard"] = Guard;
  exports["Generator"] = Generator;
  exports["Declaration"] = Declaration;
  exports["Module"] = Module;
})(PS);

(function (exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt ? function (str) {
      return str.codePointAt(0);
    } : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();

          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }

          return accum;
        };
      }

      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }

      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];

  var unsurrogate = function unsurrogate(lead) {
    return function (trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };

  var isTrail = function isTrail(cu) {
    return 56320 <= cu && cu <= 57343;
  };

  var isLead = function isLead(cu) {
    return 55296 <= cu && cu <= 56319;
  };

  var uncons = function uncons(s) {
    var v = Data_String_CodeUnits.length(s);

    if (v === 0) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 1) {
      return new Data_Maybe.Just({
        head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
        tail: ""
      });
    }

    ;
    var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $21 = isLead(cu0) && isTrail(cu1);

    if ($21) {
      return new Data_Maybe.Just({
        head: unsurrogate(cu0)(cu1),
        tail: Data_String_CodeUnits.drop(2)(s)
      });
    }

    ;
    return new Data_Maybe.Just({
      head: cu0,
      tail: Data_String_CodeUnits.drop(1)(s)
    });
  };

  var unconsButWithTuple = function unconsButWithTuple(s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return new Data_Tuple.Tuple(v.head, v.tail);
    })(uncons(s));
  };

  var toCodePointArrayFallback = function toCodePointArrayFallback(s) {
    return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };

  var unsafeCodePointAt0Fallback = function unsafeCodePointAt0Fallback(s) {
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;

    if ($25) {
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var $26 = isTrail(cu1);

      if ($26) {
        return unsurrogate(cu0)(cu1);
      }

      ;
      return cu0;
    }

    ;
    return cu0;
  };

  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);

  var length = function length($52) {
    return Data_Array.length(toCodePointArray($52));
  };

  var indexOf = function indexOf(p) {
    return function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
        return length(Data_String_CodeUnits.take(i)(s));
      })(Data_String_CodeUnits.indexOf(p)(s));
    };
  };

  var fromCharCode = function () {
    var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
    return function ($54) {
      return Data_String_CodeUnits.singleton($53($54));
    };
  }();

  var singletonFallback = function singletonFallback(v) {
    if (v <= 65535) {
      return fromCharCode(v);
    }

    ;
    var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode(lead) + fromCharCode(trail);
  };

  var singleton = $foreign["_singleton"](singletonFallback);

  var takeFallback = function takeFallback(n) {
    return function (v) {
      if (n < 1) {
        return "";
      }

      ;
      var v1 = uncons(v);

      if (v1 instanceof Data_Maybe.Just) {
        return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
      }

      ;
      return v;
    };
  };

  var take = $foreign["_take"](takeFallback);

  var drop = function drop(n) {
    return function (s) {
      return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
    };
  };

  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["drop"] = drop;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.String"] = $PS["Text.Parsing.Parser.String"] || {};
  var exports = $PS["Text.Parsing.Parser.String"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = $PS["Text.Parsing.Parser.Pos"];

  var StringLike = function StringLike(drop, indexOf, $$null, uncons) {
    this.drop = drop;
    this.indexOf = indexOf;
    this["null"] = $$null;
    this.uncons = uncons;
  };

  var uncons = function uncons(dict) {
    return dict.uncons;
  };

  var stringLikeString = new StringLike(Data_String_CodePoints.drop, Data_String_CodePoints.indexOf, Data_String_Common["null"], Data_String_CodeUnits.uncons);

  var $$null = function $$null(dict) {
    return dict["null"];
  };

  var indexOf = function indexOf(dict) {
    return dict.indexOf;
  };

  var eof = function eof(dictStringLike) {
    return function (dictMonad) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
        return v.value0;
      }))(function (input) {
        return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(input))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
      });
    };
  };

  var drop = function drop(dict) {
    return dict.drop;
  };

  var string = function string(dictStringLike) {
    return function (dictMonad) {
      return function (str) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
          return v.value0;
        }))(function (input) {
          var v = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)(str))(input);

          if (v instanceof Data_Maybe.Just && v.value0 === 0) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
              return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String_CodePoints.length(str))(input), Text_Parsing_Parser_Pos.updatePosString(v1.value1)(str), true);
            }))(function () {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
            });
          }

          ;
          return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
        });
      };
    };
  };

  var anyChar = function anyChar(dictStringLike) {
    return function (dictMonad) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
        return v.value0;
      }))(function (input) {
        var v = uncons(dictStringLike)(input);

        if (v instanceof Data_Maybe.Nothing) {
          return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify_(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
            return new Text_Parsing_Parser.ParseState(v.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String_CodeUnits.singleton(v.value0.head)), true);
          }))(function () {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v.value0.head);
          });
        }

        ;
        throw new Error("Failed pattern match at Text.Parsing.Parser.String (line 56, column 3 - line 63, column 16): " + [v.constructor.name]);
      });
    };
  };

  var satisfy = function satisfy(dictStringLike) {
    return function (dictMonad) {
      return function (f) {
        return Text_Parsing_Parser_Combinators.tryRethrow(dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (c) {
          var $52 = f(c);

          if ($52) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(c);
          }

          ;
          return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String_CodeUnits.singleton(c) + "' did not satisfy predicate"));
        }));
      };
    };
  };

  var $$char = function $$char(dictStringLike) {
    return function (dictMonad) {
      return function (c) {
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
          return v === c;
        }))(Data_Show.show(Data_Show.showChar)(c));
      };
    };
  };

  var noneOf = function noneOf(dictStringLike) {
    return function (dictMonad) {
      return function (ss) {
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
      };
    };
  };

  var oneOf = function oneOf(dictStringLike) {
    return function (dictMonad) {
      return function (ss) {
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("one of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
      };
    };
  };

  exports["eof"] = eof;
  exports["string"] = string;
  exports["satisfy"] = satisfy;
  exports["char"] = $$char;
  exports["oneOf"] = oneOf;
  exports["noneOf"] = noneOf;
  exports["stringLikeString"] = stringLikeString;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.Token"] = $PS["Text.Parsing.Parser.Token"] || {};
  var exports = $PS["Text.Parsing.Parser.Token"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Char = $PS["Data.Char"];
  var Data_Char_Unicode = $PS["Data.Char.Unicode"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var $$Math = $PS["Math"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];

  var upper = function upper(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isUpper))("uppercase letter");
  };

  var unGenLanguageDef = function unGenLanguageDef(v) {
    return v;
  };

  var theReservedNames = function theReservedNames(dictMonad) {
    return function (v) {
      if (v.caseSensitive) {
        return Data_Array.sort(Data_Ord.ordString)(v.reservedNames);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Array.sort(Data_Ord.ordString)(Data_Functor.map(Data_Functor.functorArray)(Data_String_Common.toLower)(v.reservedNames));
      }

      ;
      throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 722, column 1 - line 722, column 82): " + [v.constructor.name]);
    };
  };

  var space = function space(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isSpace))("space");
  };

  var simpleSpace = function simpleSpace(dictMonad) {
    return Text_Parsing_Parser_Combinators.skipMany1(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isSpace));
  };

  var oneLineComment = function oneLineComment(dictMonad) {
    return function (v) {
      return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v.commentLine)))(Text_Parsing_Parser_Combinators.skipMany(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(function (v1) {
        return v1 !== "\x0a";
      })));
    };
  };

  var octDigit = function octDigit(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isOctDigit))("oct digit");
  };

  var letter = function letter(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isAlpha))("letter");
  };

  var isReserved = function isReserved($copy_names) {
    return function ($copy_name) {
      var $tco_var_names = $copy_names;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(names, name) {
        var v = Data_Array.uncons(names);

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return false;
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          var v1 = Data_Ord.compare(Data_Ord.ordString)(v.value0.head)(name);

          if (v1 instanceof Data_Ordering.LT) {
            $tco_var_names = v.value0.tail;
            $copy_name = name;
            return;
          }

          ;

          if (v1 instanceof Data_Ordering.EQ) {
            $tco_done = true;
            return true;
          }

          ;

          if (v1 instanceof Data_Ordering.GT) {
            $tco_done = true;
            return false;
          }

          ;
          throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 717, column 39 - line 720, column 53): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 715, column 5 - line 720, column 53): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_names, $copy_name);
      }

      ;
      return $tco_result;
    };
  };

  var isReservedName = function isReservedName(dictMonad) {
    return function (v) {
      return function (name) {
        var caseName = function () {
          if (v.caseSensitive) {
            return name;
          }

          ;

          if (Data_Boolean.otherwise) {
            return Data_String_Common.toLower(name);
          }

          ;
          throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 710, column 5 - line 711, column 57): " + []);
        }();

        return isReserved(theReservedNames(dictMonad)(v))(caseName);
      };
    };
  };

  var inCommentSingle = function inCommentSingle(dictMonad) {
    return function (v) {
      var startEnd = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_String_CodeUnits.toCharArray(v.commentEnd))(Data_String_CodeUnits.toCharArray(v.commentStart));
      return Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(function (p) {
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v.commentEnd))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_Combinators.skipMany1(dictMonad)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(startEnd)))(p)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(startEnd))(p)))("end of comment");
      });
    };
  };

  var multiLineComment = function multiLineComment(dictMonad) {
    return function (v) {
      return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v.commentStart)))(inComment(dictMonad)(v));
    };
  };

  var inCommentMulti = function inCommentMulti(dictMonad) {
    return function (v) {
      var startEnd = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_String_CodeUnits.toCharArray(v.commentEnd))(Data_String_CodeUnits.toCharArray(v.commentStart));
      return Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(function (p) {
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_Combinators["try"](dictMonad)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v.commentEnd))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(multiLineComment(dictMonad)(v))(p)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_Combinators.skipMany1(dictMonad)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(startEnd)))(p)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(startEnd))(p)))("end of comment");
      });
    };
  };

  var inComment = function inComment(dictMonad) {
    return function (v) {
      if (v.nestedComments) {
        return inCommentMulti(dictMonad)(v);
      }

      ;
      return inCommentSingle(dictMonad)(v);
    };
  };

  var whiteSpace$prime = function whiteSpace$prime(dictMonad) {
    return function (v) {
      if (Data_String_Common["null"](v.commentLine) && Data_String_Common["null"](v.commentStart)) {
        return Text_Parsing_Parser_Combinators.skipMany(dictMonad)(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(simpleSpace(dictMonad))(""));
      }

      ;

      if (Data_String_Common["null"](v.commentLine)) {
        return Text_Parsing_Parser_Combinators.skipMany(dictMonad)(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(simpleSpace(dictMonad))(multiLineComment(dictMonad)(v)))(""));
      }

      ;

      if (Data_String_Common["null"](v.commentStart)) {
        return Text_Parsing_Parser_Combinators.skipMany(dictMonad)(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(simpleSpace(dictMonad))(oneLineComment(dictMonad)(v)))(""));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Text_Parsing_Parser_Combinators.skipMany(dictMonad)(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(simpleSpace(dictMonad))(oneLineComment(dictMonad)(v)))(multiLineComment(dictMonad)(v)))(""));
      }

      ;
      throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 731, column 1 - line 731, column 86): " + [v.constructor.name]);
    };
  };

  var hexDigit = function hexDigit(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isHexDigit))("hex digit");
  };

  var digit = function digit(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isDigit))("digit");
  };

  var makeTokenParser = function makeTokenParser(dictMonad) {
    return function (v) {
      var stringLetter = Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(function (c) {
        return c !== "\"" && c !== "\\" && c > "\x1a";
      });

      var sign = function sign(dictRing) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("-"))(Data_Ring.negate(dictRing)))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("+"))(Control_Category.identity(Control_Category.categoryFn))))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Control_Category.identity(Control_Category.categoryFn)));
      };

      var oper = function () {
        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(v.opStart)(function (c) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(v.opLetter))(function (cs) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_CodeUnits.singleton(c) + Data_String_CodeUnits.fromCharArray(cs));
          });
        });
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(go)("operator");
      }();

      var number = function number(base) {
        return function (baseDigit) {
          var folder = function folder(v1) {
            return function (v2) {
              if (v1 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
              }

              ;

              if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                  return (base * v1.value0 | 0) + v3 | 0;
                })(Data_Char_Unicode.digitToInt(v2));
              }

              ;
              throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 600, column 9 - line 600, column 49): " + [v1.constructor.name, v2.constructor.name]);
            };
          };

          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(baseDigit))(function (digits) {
            return Data_Maybe.maybe(Text_Parsing_Parser.fail(dictMonad)("not digits"))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(Data_Foldable.foldl(Data_Foldable.foldableArray)(folder)(new Data_Maybe.Just(0))(digits));
          });
        };
      };

      var octal = Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(["o", "O"]))(number(8)(octDigit(dictMonad)));

      var lexeme = function lexeme(p) {
        return Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(dictMonad))(p)(whiteSpace$prime(dictMonad)(v));
      };

      var reservedOp = function reservedOp(name) {
        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(name))(function () {
          return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_Combinators.notFollowedBy(dictMonad)(v.opLetter))("end of " + name);
        });
        return lexeme(Text_Parsing_Parser_Combinators["try"](dictMonad)(go));
      };

      var symbol = function symbol(name) {
        return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(lexeme(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(name)))(name);
      };

      var parens = function parens(p) {
        return Text_Parsing_Parser_Combinators.between(dictMonad)(symbol("("))(symbol(")"))(p);
      };

      var semi = symbol(";");

      var semiSep = function semiSep(p) {
        return Text_Parsing_Parser_Combinators.sepBy(dictMonad)(p)(semi);
      };

      var semiSep1 = function semiSep1(p) {
        return Text_Parsing_Parser_Combinators.sepBy1(dictMonad)(p)(semi);
      };

      var isReservedOp = function isReservedOp(name) {
        return isReserved(Data_Array.sort(Data_Ord.ordString)(v.reservedOpNames))(name);
      };

      var operator = function () {
        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(oper)(function (name) {
          var $82 = isReservedOp(name);

          if ($82) {
            return Text_Parsing_Parser.fail(dictMonad)("reserved operator " + name);
          }

          ;
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(name);
        });
        return lexeme(Text_Parsing_Parser_Combinators["try"](dictMonad)(go));
      }();

      var ident = function () {
        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(v.identStart)(function (c) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(v.identLetter))(function (cs) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_CodeUnits.singleton(c) + Data_String_CodeUnits.fromCharArray(cs));
          });
        });
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(go)("identifier");
      }();

      var identifier = function () {
        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(ident)(function (name) {
          var $83 = isReservedName(dictMonad)(v)(name);

          if ($83) {
            return Text_Parsing_Parser.fail(dictMonad)("reserved word " + Data_Show.show(Data_Show.showString)(name));
          }

          ;
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(name);
        });
        return lexeme(Text_Parsing_Parser_Combinators["try"](dictMonad)(go));
      }();

      var hexadecimal = Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(["x", "X"]))(number(16)(hexDigit(dictMonad)));

      var fraction = function () {
        var op = function op(v1) {
          return function (v2) {
            if (v2 instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
            }

            ;

            if (v2 instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Char_Unicode.digitToInt(v1))(function (int$prime) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((v2.value0 + Data_Int.toNumber(int$prime)) / 10.0);
              });
            }

            ;
            throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 550, column 9 - line 550, column 51): " + [v1.constructor.name, v2.constructor.name]);
          };
        };

        return Text_Parsing_Parser_Combinators.asErrorMessage(dictMonad)("fraction")(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("."))(function () {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Data_Array.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(digit(dictMonad)))("fraction"))(function (digits) {
            return Data_Maybe.maybe(Text_Parsing_Parser.fail(dictMonad)("not digit"))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad)))(Data_Foldable.foldr(Data_Foldable.foldableArray)(op)(new Data_Maybe.Just(0.0))(digits));
          });
        }));
      }();

      var escapeGap = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Data_Array.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(space(dictMonad)))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("\\")))("end of string gap");
      var escapeEmpty = Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("&");
      var escMap = Data_Array.zip(["a", "b", "f", "n", "r", "t", "v", "\\", "\"", "'"])(["\x07", "\x08", "\x0c", "\x0a", "\x0d", "\x09", "\x0b", "\\", "\"", "'"]);
      var dot = symbol(".");
      var decimal = number(10)(digit(dictMonad));

      var exponent$prime = function () {
        var power = function power(e) {
          if (e < 0) {
            return 1.0 / power(-e | 0);
          }

          ;

          if (Data_Boolean.otherwise) {
            return $$Math.pow(10.0)(Data_Int.toNumber(e));
          }

          ;
          throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 563, column 9 - line 563, column 31): " + [e.constructor.name]);
        };

        return Text_Parsing_Parser_Combinators.asErrorMessage(dictMonad)("exponent")(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(["e", "E"]))(function () {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sign(Data_Ring.ringInt))(function (f) {
            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(decimal)("exponent"))(function (e) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(power(f(e)));
            });
          });
        }));
      }();

      var fractExponent = function fractExponent(n) {
        var justExponent = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(exponent$prime)(function (expo) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Int.toNumber(n) * expo);
        });
        var fractExponent$prime = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(fraction)(function (fract) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_Combinators.option(dictMonad)(1.0)(exponent$prime))(function (expo) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))((Data_Int.toNumber(n) + fract) * expo);
          });
        });
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(fractExponent$prime)(justExponent);
      };

      var fractFloat = function fractFloat(n) {
        return Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Either.Right.create)(fractExponent(n));
      };

      var decimalFloat = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(decimal)(function (n) {
        return Text_Parsing_Parser_Combinators.option(dictMonad)(new Data_Either.Left(n))(fractFloat(n));
      });
      var zeroNumFloat = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Either.Left.create)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(hexadecimal)(octal)))(decimalFloat))(fractFloat(0)))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_Either.Left(0)));
      var natFloat = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("0"))(zeroNumFloat))(decimalFloat);
      var naturalOrFloat = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(lexeme(natFloat))("number");
      var floating = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(decimal)(fractExponent);
      var $$float = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(lexeme(floating))("float");
      var zeroNumber = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("0"))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(hexadecimal)(octal))(decimal))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(0))))("");
      var nat = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(zeroNumber)(decimal);
      var $$int = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(lexeme(sign(Data_Ring.ringInt)))(function (f) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(nat)(function (n) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(f(n));
        });
      });
      var integer = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(lexeme($$int))("integer");
      var natural = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(lexeme(nat))("natural");
      var comma = symbol(",");

      var commaSep = function commaSep(p) {
        return Text_Parsing_Parser_Combinators.sepBy(dictMonad)(p)(comma);
      };

      var commaSep1 = function commaSep1(p) {
        return Text_Parsing_Parser_Combinators.sepBy1(dictMonad)(p)(comma);
      };

      var colon = symbol(":");
      var charNum = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(decimal)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("o"))(number(8)(octDigit(dictMonad)))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("x"))(number(16)(hexDigit(dictMonad)))))(function (code) {
        var $88 = code > 1114111;

        if ($88) {
          return Text_Parsing_Parser.fail(dictMonad)("invalid escape sequence");
        }

        ;
        var v1 = Data_Char.fromCharCode(code);

        if (v1 instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0);
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing) {
          return Text_Parsing_Parser.fail(dictMonad)("invalid character code (should not happen)");
        }

        ;
        throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 448, column 17 - line 450, column 81): " + [v1.constructor.name]);
      });
      var charLetter = Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(function (c) {
        return c !== "'" && c !== "\\" && c > "\x1a";
      });

      var charEsc = function () {
        var parseEsc = function parseEsc(v1) {
          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v1.value0))(v1.value1);
        };

        return Text_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(dictMonad)(Data_Functor.map(Data_Functor.functorArray)(parseEsc)(escMap));
      }();

      var charControl = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("^"))(function () {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(upper(dictMonad))(function (code) {
          var v1 = Data_Char.fromCharCode((Data_Char.toCharCode(code) - Data_Char.toCharCode("A") | 0) + 1 | 0);

          if (v1 instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v1.value0);
          }

          ;

          if (v1 instanceof Data_Maybe.Nothing) {
            return Text_Parsing_Parser.fail(dictMonad)("invalid character code (should not happen)");
          }

          ;
          throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 437, column 9 - line 439, column 73): " + [v1.constructor.name]);
        });
      });

      var caseString = function caseString(name) {
        if (v.caseSensitive) {
          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(name))(name);
        }

        ;

        if (Data_Boolean.otherwise) {
          var msg = Data_Show.show(Data_Show.showString)(name);

          var caseChar = function caseChar(c) {
            if (Data_Char_Unicode.isAlpha(c)) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.toLower(c)))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.toUpper(c)));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)(c);
            }

            ;
            throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 658, column 9 - line 658, column 50): " + [c.constructor.name]);
          };

          var walk = function walk(name$prime) {
            var v1 = Data_String_CodeUnits.uncons(name$prime);

            if (v1 instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
            }

            ;

            if (v1 instanceof Data_Maybe.Just) {
              return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(caseChar(v1.value0.head))(msg))(walk(v1.value0.tail));
            }

            ;
            throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 654, column 22 - line 656, column 86): " + [v1.constructor.name]);
          };

          return Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(walk(name))(name);
        }

        ;
        throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 649, column 5 - line 649, column 52): " + [name.constructor.name]);
      };

      var reserved = function reserved(name) {
        var go = Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(caseString(name))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_Combinators.notFollowedBy(dictMonad)(v.identLetter))("end of " + name));
        return lexeme(Text_Parsing_Parser_Combinators["try"](dictMonad)(go));
      };

      var brackets = function brackets(p) {
        return Text_Parsing_Parser_Combinators.between(dictMonad)(symbol("["))(symbol("]"))(p);
      };

      var braces = function braces(p) {
        return Text_Parsing_Parser_Combinators.between(dictMonad)(symbol("{"))(symbol("}"))(p);
      };

      var ascii3codes = ["NUL", "SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "SUB", "ESC", "DEL"];
      var ascii3 = ["\x00", "\x01", "\x02", "\x03", "\x04", "\x05", "\x06", "\x07", "\x10", "\x11", "\x12", "\x13", "\x14", "\x15", "\x16", "\x17", "\x18", "\x1a", "\x1b", "\x7f"];
      var ascii2codes = ["BS", "HT", "LF", "VT", "FF", "CR", "SO", "SI", "EM", "FS", "GS", "RS", "US", "SP"];
      var ascii2 = ["\x08", "\x09", "\x0a", "\x0b", "\x0c", "\x0d", "\x0e", "\x0f", "\x19", "\x1c", "\x1d", "\x1e", "\x1f", " "];
      var asciiMap = Data_Array.zip(Data_Semigroup.append(Data_Semigroup.semigroupArray)(ascii3codes)(ascii2codes))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(ascii3)(ascii2));

      var charAscii = function () {
        var parseAscii = function parseAscii(v1) {
          return Text_Parsing_Parser_Combinators["try"](dictMonad)(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(v1.value0))(v1.value1));
        };

        return Text_Parsing_Parser_Combinators.choice(Data_Foldable.foldableArray)(dictMonad)(Data_Functor.map(Data_Functor.functorArray)(parseAscii)(asciiMap));
      }();

      var escapeCode = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(charEsc)(charNum))(charAscii))(charControl))("escape code");
      var charEscape = Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("\\"))(escapeCode);
      var characterChar = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(charLetter)(charEscape))("literal character");

      var charLiteral = function () {
        var go = Text_Parsing_Parser_Combinators.between(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("'"))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("'"))("end of character"))(characterChar);
        return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(lexeme(go))("character");
      }();

      var stringEscape = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("\\"))(function () {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(escapeGap)(Data_Maybe.Nothing.value))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(escapeEmpty)(Data_Maybe.Nothing.value)))(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.Just.create)(escapeCode));
      });
      var stringChar = Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor.map(Text_Parsing_Parser.functorParserT(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.Just.create)(stringLetter))(stringEscape))("string character");

      var stringLiteral = function () {
        var folder = function folder(v1) {
          return function (chars) {
            if (v1 instanceof Data_Maybe.Nothing) {
              return chars;
            }

            ;

            if (v1 instanceof Data_Maybe.Just) {
              return new Data_List_Types.Cons(v1.value0, chars);
            }

            ;
            throw new Error("Failed pattern match at Text.Parsing.Parser.Token (line 404, column 9 - line 404, column 55): " + [v1.constructor.name, chars.constructor.name]);
          };
        };

        var go = Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Text_Parsing_Parser_Combinators.between(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("\""))(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(dictMonad)("\""))("end of string"))(Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(stringChar)))(function (maybeChars) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String_CodeUnits.fromCharArray(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Foldable.foldr(Data_List_Types.foldableList)(folder)(Data_List_Types.Nil.value)(maybeChars))));
        });
        return lexeme(Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(go)("literal string"));
      }();

      var angles = function angles(p) {
        return Text_Parsing_Parser_Combinators.between(dictMonad)(symbol("<"))(symbol(">"))(p);
      };

      return {
        identifier: identifier,
        reserved: reserved,
        operator: operator,
        reservedOp: reservedOp,
        charLiteral: charLiteral,
        stringLiteral: stringLiteral,
        natural: natural,
        integer: integer,
        "float": $$float,
        naturalOrFloat: naturalOrFloat,
        decimal: decimal,
        hexadecimal: hexadecimal,
        octal: octal,
        symbol: symbol,
        lexeme: lexeme,
        whiteSpace: whiteSpace$prime(dictMonad)(v),
        parens: parens,
        braces: braces,
        angles: angles,
        brackets: brackets,
        semi: semi,
        comma: comma,
        colon: colon,
        dot: dot,
        semiSep: semiSep,
        semiSep1: semiSep1,
        commaSep: commaSep,
        commaSep1: commaSep1
      };
    };
  };

  var alphaNum = function alphaNum(dictMonad) {
    return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isAlphaNum))("letter or digit");
  };

  exports["unGenLanguageDef"] = unGenLanguageDef;
  exports["makeTokenParser"] = makeTokenParser;
  exports["letter"] = letter;
  exports["alphaNum"] = alphaNum;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Parsing.Parser.Language"] = $PS["Text.Parsing.Parser.Language"] || {};
  var exports = $PS["Text.Parsing.Parser.Language"];
  var Control_Alt = $PS["Control.Alt"];
  var Data_Identity = $PS["Data.Identity"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Token = $PS["Text.Parsing.Parser.Token"];

  var emptyDef = function () {
    var op$prime = function op$prime(dictMonad) {
      return Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(dictMonad)([":", "!", "#", "$", "%", "&", "*", "+", ".", "/", "<", "=", ">", "?", "@", "\\", "^", "|", "-", "~"]);
    };

    return {
      commentStart: "",
      commentEnd: "",
      commentLine: "",
      nestedComments: true,
      identStart: Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.letter(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("_")),
      identLetter: Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.alphaNum(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(["_", "'"])),
      opStart: op$prime(Data_Identity.monadIdentity),
      opLetter: op$prime(Data_Identity.monadIdentity),
      reservedOpNames: [],
      reservedNames: [],
      caseSensitive: true
    };
  }();

  exports["emptyDef"] = emptyDef;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Util.Parse"] = $PS["Util.Parse"] || {};
  var exports = $PS["Util.Parse"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Util = $PS["Util"];

  var some = function some(p) {
    return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Util.fromJust(Util.absurd))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_List_NonEmpty.fromList)(Data_List.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(p)));
  };

  var sepBy1_try = function sepBy1_try(p) {
    return function (sep) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(p)(function (x) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_List.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(sep)(p))))(function (xs) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_List_Types.NonEmptyList(new Data_NonEmpty.NonEmpty(x, xs)));
        });
      });
    };
  };

  var sepBy_try = function sepBy_try(p) {
    return function (sep) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(sepBy1_try(p)(sep))(Data_List_NonEmpty.toList))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_List_Types.Nil.value));
    };
  };

  var sepBy1 = function sepBy1(p) {
    return function (sep) {
      return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Util.fromJust(Util.absurd))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_List_NonEmpty.fromList)(Text_Parsing_Parser_Combinators.sepBy1(Data_Identity.monadIdentity)(p)(sep)));
    };
  };

  exports["sepBy1"] = sepBy1;
  exports["sepBy_try"] = sepBy_try;
  exports["sepBy1_try"] = sepBy1_try;
  exports["some"] = some;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Parse"] = $PS["Parse"] || {};
  var exports = $PS["Parse"];
  var Bindings = $PS["Bindings"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Lazy = $PS["Control.Lazy"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Primitive_Parse = $PS["Primitive.Parse"];
  var SExpr = $PS["SExpr"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = $PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Expr = $PS["Text.Parsing.Parser.Expr"];
  var Text_Parsing_Parser_Language = $PS["Text.Parsing.Parser.Language"];
  var Text_Parsing_Parser_String = $PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Token = $PS["Text.Parsing.Parser.Token"];
  var Util = $PS["Util"];
  var Util_Parse = $PS["Util.Parse"];
  var Util_SnocList = $PS["Util.SnocList"];
  var str = {
    arrayLBracket: "[|",
    arrayRBracket: "|]",
    as: "as",
    backslash: "\\",
    backtick: "`",
    bar: "|",
    colon: ":",
    dot: ".",
    ellipsis: "..",
    else_: "else",
    equals: "=",
    fun: "fun",
    if_: "if",
    in_: "in",
    lArrow: "<-",
    lBracket: "[",
    let_: "let",
    match: "match",
    rArrow: "->",
    rBracket: "]",
    then_: "then"
  };
  var selState = false;

  var operators = function operators(binaryOp) {
    var ops = Data_List.groupBy(Data_Function.on(Data_Eq.eq(Data_Eq.eqInt))(function (v) {
      return v.prec;
    }))(Data_List.sortBy(function (x) {
      var $23 = Data_Ord.comparing(Data_Ord.ordInt)(function (v) {
        return v.prec;
      })(x);
      return function ($24) {
        return Data_Ordering.invert($23($24));
      };
    })(Data_Map_Internal.values(Primitive_Parse.opDefs)));
    return Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(Data_Functor.map(Data_List_Types.functorList)(Data_Array.fromFoldable(Data_List_Types.foldableNonEmptyList))(ops))(Data_Functor.map(Data_Functor.functorArray)(function (v) {
      return new Text_Parsing_Parser_Expr.Infix(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(binaryOp(v.op)), v.assoc);
    })));
  };

  var languageDef = function () {
    var opChar = Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([":", "!", "#", "$", "%", "&", "*", "+", ".", "/", "<", "=", ">", "?", "@", "\\", "^", "|", "-", "~"]);
    var v = Text_Parsing_Parser_Token.unGenLanguageDef(Text_Parsing_Parser_Language.emptyDef);
    return {
      commentStart: "{-",
      commentEnd: "-}",
      commentLine: "--",
      nestedComments: true,
      identStart: Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.letter(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("_")),
      identLetter: Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.alphaNum(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(["_", "'"])),
      opStart: opChar,
      opLetter: opChar,
      reservedNames: [str.as, str.else_, str.fun, str.if_, str.in_, str.let_, str.match, str.then_],
      reservedOpNames: [str.bar, str.ellipsis, str.equals, str.lArrow, str.rArrow],
      caseSensitive: true
    };
  }();

  var token = Text_Parsing_Parser_Token.makeTokenParser(Data_Identity.monadIdentity)(languageDef);
  var rArrow = token.reservedOp(str.rArrow);
  var rBracket = Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(token.symbol(str.rBracket));

  var topLevel = function topLevel(p) {
    return Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token.whiteSpace)(p))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity));
  };

  var lBracket = Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(token.symbol(str.lBracket));
  var lArrow = token.reservedOp(str.lArrow);

  var keyword = function keyword(str$prime) {
    var $10 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(str$prime)(Text_Parsing_Parser_Token.unGenLanguageDef(languageDef).reservedNames);

    if ($10) {
      return token.reserved(str$prime);
    }

    ;
    return Util.error(str$prime + " is not a reserved word");
  };

  var ident = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(token.identifier)(function (x) {
    return Util.onlyIf(!DataType.isCtrName(x))(Text_Parsing_Parser.monadPlusParserT(Data_Identity.monadIdentity))(x);
  });

  var field = function field(p) {
    return Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Bindings.Bind.create)(ident)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token.colon)(p));
  };

  var equals = token.reservedOp(str.equals);
  var patternDelim = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(rArrow)(equals);
  var ellipsis = token.reservedOp(str.ellipsis);
  var ctr = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(token.identifier)(function (x) {
    return Util.onlyIf(DataType.isCtrName(x))(Text_Parsing_Parser.monadPlusParserT(Data_Identity.monadIdentity))(x);
  });

  var simplePattern = function simplePattern(pattern$prime) {
    var $$var = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.PVar.create)(ident);
    var record = token.braces(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(field(pattern$prime))(token.comma))(function ($25) {
      return SExpr.PRecord.create(Util_SnocList.fromList(Data_List.reverse($25)));
    }));
    var pair = token.parens(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(pattern$prime)(token.comma))(function (π) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(pattern$prime)(function (π$prime) {
        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SExpr.PConstr(DataType.cPair, new Data_List_Types.Cons(π, new Data_List_Types.Cons(π$prime, Data_List_Types.Nil.value))));
      });
    }));

    var listNonEmpty = function () {
      var listRest = function listRest(listRest$prime) {
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(rBracket)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(SExpr.PEnd.value)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token.comma)(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.PNext.create)(pattern$prime))(listRest$prime)));
      };

      return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(lBracket)(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.PListNonEmpty.create)(pattern$prime))(Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(listRest)));
    }();

    var listEmpty = token.brackets(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(SExpr.PListEmpty.value));
    var constr = Data_Functor.flap(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.PConstr.create)(ctr))(Data_List_Types.Nil.value);
    return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(listEmpty))(listNonEmpty))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(constr)))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(record)))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)($$var)))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(token.parens(pattern$prime))))(pair);
  };

  var pattern = function () {
    var infixCtr = function infixCtr(op) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(token.operator)(function (op$prime) {
        return Util.onlyIf(DataType.isCtrOp(op$prime) && op === op$prime)(Text_Parsing_Parser.monadPlusParserT(Data_Identity.monadIdentity))(function (π) {
          return function (π$prime) {
            return new SExpr.PConstr(op$prime, new Data_List_Types.Cons(π, new Data_List_Types.Cons(π$prime, Data_List_Types.Nil.value)));
          };
        });
      });
    };

    var appChain_pattern = function appChain_pattern(pattern$prime) {
      var rest = function rest(v) {
        if (v instanceof SExpr.PConstr) {
          var ctrArgs = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(simplePattern(pattern$prime))(function (π$prime) {
            return rest(new SExpr.PConstr(v.value0, Data_List.snoc(v.value1)(π$prime)));
          });
          return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(ctrArgs)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v));
        }

        ;
        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v);
      };

      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(simplePattern(pattern$prime))(rest);
    };

    return Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(function () {
      var $26 = Text_Parsing_Parser_Expr.buildExprParser(Data_Identity.monadIdentity)(operators(infixCtr));
      return function ($27) {
        return $26(appChain_pattern($27));
      };
    }());
  }();

  var varDefs = function varDefs(expr$prime) {
    var clause = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.VarDef.create)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(pattern)(equals)))(expr$prime);
    return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.let_))(Util_Parse.sepBy1_try(clause)(token.semi));
  };

  var branch_uncurried = function branch_uncurried(expr$prime) {
    return function (delim) {
      return Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Tuple.Tuple.create)(pattern)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(delim)(expr$prime));
    };
  };

  var branch_curried = function branch_curried(expr$prime) {
    return function (delim) {
      return Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Tuple.Tuple.create)(Util_Parse.some(simplePattern(pattern)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(delim)(expr$prime));
    };
  };

  var recDefs = function recDefs(expr$prime) {
    var clause = Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Tuple.Tuple.create)(ident)(branch_curried(expr$prime)(equals));
    return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.let_))(Util_Parse.sepBy1_try(clause)(token.semi));
  };

  var defs = function defs(expr$prime) {
    return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_List.singleton)(Data_Either.choose(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(varDefs(expr$prime)))(recDefs(expr$prime)));
  };

  var branchMany = function branchMany(expr$prime) {
    return function (branch_) {
      return token.braces(Util_Parse.sepBy1(branch_(expr$prime)(rArrow))(token.semi));
    };
  };

  var branches = function branches(expr$prime) {
    return function (branch_) {
      return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList))(branch_(expr$prime)(patternDelim)))(branchMany(expr$prime)(branch_));
    };
  };

  var bar = token.reservedOp(str.bar);
  var backtick = Data_Functor["void"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(token.symbol(str.backtick));

  var expr_ = function () {
    var binaryOp = function binaryOp(op) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(token.operator)(function (op$prime) {
        return Util.onlyIf(op === op$prime)(Text_Parsing_Parser.monadPlusParserT(Data_Identity.monadIdentity))(function () {
          var $15 = op === str.dot;

          if ($15) {
            return function (e) {
              return function (e$prime) {
                if (e$prime instanceof SExpr.Var) {
                  return new SExpr.RecordLookup(e, e$prime.value0);
                }

                ;
                return Util.error("Field names are not first class.");
              };
            };
          }

          ;
          var $18 = DataType.isCtrOp(op$prime);

          if ($18) {
            return function (e) {
              return function (e$prime) {
                return new SExpr.Constr(selState, op$prime, new Data_List_Types.Cons(e, new Data_List_Types.Cons(e$prime, Control_Plus.empty(Data_List_Types.plusList))));
              };
            };
          }

          ;
          return function (e) {
            return function (e$prime) {
              return new SExpr.BinaryApp(e, op, e$prime);
            };
          };
        }());
      });
    };

    var backtickOp = Data_Function.flip(Text_Parsing_Parser_Expr.Infix.create)(Text_Parsing_Parser_Expr.AssocLeft.value)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.between(Data_Identity.monadIdentity)(backtick)(backtick)(ident))(function (x) {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(function (e) {
        return function (e$prime) {
          return new SExpr.BinaryApp(e, x, e$prime);
        };
      });
    }));

    var appChain = function appChain(expr$prime) {
      var simpleExpr = function () {
        var variable = Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(ident)(SExpr.Var.create);
        var string = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Str.create(selState))(token.stringLiteral);

        var signOpt = function signOpt(dictRing) {
          return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("-"))(Data_Ring.negate(dictRing)))(Data_Functor.voidLeft(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("+"))(Control_Category.identity(Control_Category.categoryFn))))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Control_Category.identity(Control_Category.categoryFn)));
        };

        var record = token.braces(Data_Functor.mapFlipped(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(field(expr$prime))(token.comma))(function () {
          var $28 = SExpr.Record.create(selState);
          return function ($29) {
            return $28(Util_SnocList.fromList(Data_List.reverse($29)));
          };
        }()));
        var parensOp = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Op.create)(token.parens(token.operator));
        var pair = token.parens(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(function (e) {
          return function (e$prime) {
            return new SExpr.Constr(selState, DataType.cPair, new Data_List_Types.Cons(e, new Data_List_Types.Cons(e$prime, Control_Plus.empty(Data_List_Types.plusList))));
          };
        }))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(expr$prime)(token.comma)))(expr$prime));
        var nil = token.brackets(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SExpr.ListEmpty(selState)));
        var matrix = Text_Parsing_Parser_Combinators.between(Data_Identity.monadIdentity)(token.symbol(str.arrayLBracket))(token.symbol(str.arrayRBracket))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Matrix.create(selState))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(expr$prime)(bar)))(token.parens(Control_Apply.lift2(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Tuple.Tuple.create)(ident)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token.comma)(ident)))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.in_))(expr$prime)));
        var matchAs = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.MatchAs.create)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.match))(expr$prime))(keyword(str.as))))(branches(expr$prime)(branch_uncurried));

        var listNonEmpty = function () {
          var listRest = function listRest(listRest$prime) {
            return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(rBracket)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SExpr.End(selState))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(token.comma)(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Next.create(selState))(expr$prime))(listRest$prime)));
          };

          return Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(lBracket)(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.ListNonEmpty.create(selState))(expr$prime))(Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(listRest)));
        }();

        var listEnum = token.brackets(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(SExpr.ListEnum.create))(expr$prime))(ellipsis))(expr$prime));

        var listComp = function () {
          var qualifier = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Generator.create)(pattern))(lArrow))(expr$prime))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Declaration.create)(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.VarDef.create)(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.let_))(pattern))(equals)))(expr$prime))))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Guard.create)(expr$prime));
          return token.brackets(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(SExpr.ListComp.create(selState)))(expr$prime))(bar))(Util_Parse.sepBy1(qualifier)(token.comma)));
        }();

        var lambda = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Lambda.create)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.fun))(branches(expr$prime)(branch_curried)));
        var $$int = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(signOpt(Data_Ring.ringInt))(function (sign) {
          return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function () {
            var $30 = SExpr.Int.create(selState);
            return function ($31) {
              return $30(sign($31));
            };
          }())(token.natural);
        });
        var ifElse = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(SExpr.IfElse.create))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.if_))(expr$prime)))(keyword(str.then_)))(expr$prime))(keyword(str.else_)))(expr$prime);
        var $$float = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(signOpt(Data_Ring.ringNumber))(function (sign) {
          return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function () {
            var $32 = SExpr.Float.create(selState);
            return function ($33) {
              return $32(sign($33));
            };
          }())(token["float"]);
        });
        var defsExpr = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($34) {
          return Data_List.concat(Data_List_NonEmpty.toList($34));
        })(Util_Parse.sepBy1(defs(expr$prime))(token.semi)))(function (defs$prime) {
          return Data_Functor.flap(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Foldable.foldr(Data_List_Types.foldableList)(function (def) {
            return Data_Profunctor_Choice.fanin(Control_Category.categoryFn)(Data_Profunctor_Choice.choiceFn)(SExpr.Let.create)(SExpr.LetRec.create)(def);
          }))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(keyword(str.in_))(expr$prime)))(defs$prime);
        });
        var constr = Data_Functor.flap(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.Constr.create(selState))(ctr))(Control_Plus.empty(Data_List_Types.plusList));
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(matrix)(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(nil)))(listNonEmpty))(listComp))(listEnum))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(constr)))(record))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(variable)))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)($$float)))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)($$int)))(string))(defsExpr))(matchAs))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(token.parens(expr$prime))))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(parensOp)))(pair))(lambda))(ifElse);
      }();

      var rest = function rest(v) {
        if (v instanceof SExpr.Constr) {
          var ctrArgs = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(simpleExpr)(function (e$prime) {
            return rest(new SExpr.Constr(v.value0, v.value1, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value2)(new Data_List_Types.Cons(e$prime, Control_Plus.empty(Data_List_Types.plusList)))));
          });
          return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(ctrArgs)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v));
        }

        ;
        return Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(SExpr.App.create(v))(simpleExpr))(rest))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v));
      };

      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(simpleExpr)(rest);
    };

    return Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(function () {
      var $35 = Text_Parsing_Parser_Expr.buildExprParser(Data_Identity.monadIdentity)(Data_Array.cons([backtickOp])(operators(binaryOp)));
      return function ($36) {
        return $35(appChain($36));
      };
    }());
  }();

  var module_ = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($37) {
    return SExpr.Module.create(Data_List.concat($37));
  })(topLevel(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Util_Parse.sepBy_try(defs(expr_))(token.semi))(token.semi)));
  var program = topLevel(expr_);
  exports["str"] = str;
  exports["program"] = program;
  exports["module_"] = module_;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Text.Pretty"] = $PS["Text.Pretty"] || {};
  var exports = $PS["Text.Pretty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_String_Pattern = $PS["Data.String.Pattern"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];

  var Columns = function Columns(x) {
    return x;
  };

  var width = function width(v) {
    return v.width;
  };

  var text = function text(s) {
    var lines = Data_String_Common.split(Data_Newtype.wrap(Data_String_Pattern.newtypePattern)("\x0a"))(s);
    return {
      width: Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Ord.max(Data_Ord.ordInt))(0)(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.length)(lines)),
      height: Data_Array.length(lines),
      lines: lines
    };
  };

  var render = function render(v) {
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")(v.lines);
  };

  var newtypeColumns = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Columns);

  var height = function height(v) {
    return v.height;
  };

  var empty = function empty(w) {
    return function (h) {
      return {
        width: w,
        height: h,
        lines: function () {
          if (h === 0) {
            return [];
          }

          ;
          return Data_Functor.voidLeft(Data_Functor.functorArray)(Data_Array.range(1)(h))("");
        }()
      };
    };
  };

  var beside = function beside(v) {
    return function (v1) {
      var height_ = Data_Ord.max(Data_Ord.ordInt)(v.height)(v1.height);

      var emptyLine = function emptyLine(w) {
        return Data_String_CodeUnits.fromCharArray(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(w)(" "));
      };

      var padRight = function padRight(w) {
        return function (s) {
          return s + emptyLine(w - Data_String_CodePoints.length(s) | 0);
        };
      };

      var adjust = function adjust(d) {
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(d.lines)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(height_ - d.height | 0)(emptyLine(d.width)));
      };

      return {
        width: v.width + v1.width | 0,
        height: height_,
        lines: Data_Array.take(height_)(Data_Array.zipWith(Data_Semigroup.append(Data_Semigroup.semigroupString))(Data_Functor.map(Data_Functor.functorArray)(padRight(v.width))(adjust(v)))(adjust(v1)))
      };
    };
  };

  var semigroupColumns = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return beside(v)(v1);
    };
  });
  var monoidColumns = new Data_Monoid.Monoid(function () {
    return semigroupColumns;
  }, empty(0)(0));

  var hcat = function hcat(dictFoldable) {
    return Data_Newtype.ala(Data_Functor.functorFn)(newtypeColumns)(newtypeColumns)(Columns)(Data_Foldable.foldMap(dictFoldable)(monoidColumns));
  };

  var atop = function atop(v) {
    return function (v1) {
      return {
        width: Data_Ord.max(Data_Ord.ordInt)(v.width)(v1.width),
        height: v.height + v1.height | 0,
        lines: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.lines)(v1.lines)
      };
    };
  };

  exports["render"] = render;
  exports["empty"] = empty;
  exports["text"] = text;
  exports["beside"] = beside;
  exports["atop"] = atop;
  exports["hcat"] = hcat;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Expr"] = $PS["Expr"] || {};
  var exports = $PS["Expr"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Lattice = $PS["Lattice"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];

  var ContHole = function () {
    function ContHole(value0) {
      this.value0 = value0;
    }

    ;

    ContHole.create = function (value0) {
      return new ContHole(value0);
    };

    return ContHole;
  }();

  var ContExpr = function () {
    function ContExpr(value0) {
      this.value0 = value0;
    }

    ;

    ContExpr.create = function (value0) {
      return new ContExpr(value0);
    };

    return ContExpr;
  }();

  var ContElim = function () {
    function ContElim(value0) {
      this.value0 = value0;
    }

    ;

    ContElim.create = function (value0) {
      return new ContElim(value0);
    };

    return ContElim;
  }();

  var Hole = function () {
    function Hole(value0) {
      this.value0 = value0;
    }

    ;

    Hole.create = function (value0) {
      return new Hole(value0);
    };

    return Hole;
  }();

  var Var = function () {
    function Var(value0) {
      this.value0 = value0;
    }

    ;

    Var.create = function (value0) {
      return new Var(value0);
    };

    return Var;
  }();

  var Op = function () {
    function Op(value0) {
      this.value0 = value0;
    }

    ;

    Op.create = function (value0) {
      return new Op(value0);
    };

    return Op;
  }();

  var Int = function () {
    function Int(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Int.create = function (value0) {
      return function (value1) {
        return new Int(value0, value1);
      };
    };

    return Int;
  }();

  var Float = function () {
    function Float(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Float.create = function (value0) {
      return function (value1) {
        return new Float(value0, value1);
      };
    };

    return Float;
  }();

  var Str = function () {
    function Str(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Str.create = function (value0) {
      return function (value1) {
        return new Str(value0, value1);
      };
    };

    return Str;
  }();

  var Record = function () {
    function Record(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Record.create = function (value0) {
      return function (value1) {
        return new Record(value0, value1);
      };
    };

    return Record;
  }();

  var Constr = function () {
    function Constr(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Constr.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Constr(value0, value1, value2);
        };
      };
    };

    return Constr;
  }();

  var Matrix = function () {
    function Matrix(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Matrix.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Matrix(value0, value1, value2, value3);
          };
        };
      };
    };

    return Matrix;
  }();

  var Lambda = function () {
    function Lambda(value0) {
      this.value0 = value0;
    }

    ;

    Lambda.create = function (value0) {
      return new Lambda(value0);
    };

    return Lambda;
  }();

  var RecordLookup = function () {
    function RecordLookup(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    RecordLookup.create = function (value0) {
      return function (value1) {
        return new RecordLookup(value0, value1);
      };
    };

    return RecordLookup;
  }();

  var App = function () {
    function App(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    App.create = function (value0) {
      return function (value1) {
        return new App(value0, value1);
      };
    };

    return App;
  }();

  var Let = function () {
    function Let(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Let.create = function (value0) {
      return function (value1) {
        return new Let(value0, value1);
      };
    };

    return Let;
  }();

  var LetRec = function () {
    function LetRec(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    LetRec.create = function (value0) {
      return function (value1) {
        return new LetRec(value0, value1);
      };
    };

    return LetRec;
  }();

  var ElimHole = function () {
    function ElimHole(value0) {
      this.value0 = value0;
    }

    ;

    ElimHole.create = function (value0) {
      return new ElimHole(value0);
    };

    return ElimHole;
  }();

  var ElimVar = function () {
    function ElimVar(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ElimVar.create = function (value0) {
      return function (value1) {
        return new ElimVar(value0, value1);
      };
    };

    return ElimVar;
  }();

  var ElimConstr = function () {
    function ElimConstr(value0) {
      this.value0 = value0;
    }

    ;

    ElimConstr.create = function (value0) {
      return new ElimConstr(value0);
    };

    return ElimConstr;
  }();

  var ElimRecord = function () {
    function ElimRecord(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ElimRecord.create = function (value0) {
      return function (value1) {
        return new ElimRecord(value0, value1);
      };
    };

    return ElimRecord;
  }();

  var VarDef = function () {
    function VarDef(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    VarDef.create = function (value0) {
      return function (value1) {
        return new VarDef(value0, value1);
      };
    };

    return VarDef;
  }();

  var Module = function () {
    function Module(value0) {
      this.value0 = value0;
    }

    ;

    Module.create = function (value0) {
      return new Module(value0);
    };

    return Module;
  }();

  var functorVarDef = new Data_Functor.Functor(function (f) {
    return function (m) {
      return new VarDef(Data_Functor.map(functorElim)(f)(m.value0), Data_Functor.map(functorExpr)(f)(m.value1));
    };
  });
  var functorExpr = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Hole) {
        return new Hole(f(m.value0));
      }

      ;

      if (m instanceof Var) {
        return new Var(m.value0);
      }

      ;

      if (m instanceof Op) {
        return new Op(m.value0);
      }

      ;

      if (m instanceof Int) {
        return new Int(f(m.value0), m.value1);
      }

      ;

      if (m instanceof Float) {
        return new Float(f(m.value0), m.value1);
      }

      ;

      if (m instanceof Str) {
        return new Str(f(m.value0), m.value1);
      }

      ;

      if (m instanceof Record) {
        return new Record(f(m.value0), Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Functor.map(functorExpr)(f)))(m.value1));
      }

      ;

      if (m instanceof Constr) {
        return new Constr(f(m.value0), m.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(functorExpr)(f))(m.value2));
      }

      ;

      if (m instanceof Matrix) {
        return new Matrix(f(m.value0), Data_Functor.map(functorExpr)(f)(m.value1), m.value2, Data_Functor.map(functorExpr)(f)(m.value3));
      }

      ;

      if (m instanceof Lambda) {
        return new Lambda(Data_Functor.map(functorElim)(f)(m.value0));
      }

      ;

      if (m instanceof RecordLookup) {
        return new RecordLookup(Data_Functor.map(functorExpr)(f)(m.value0), m.value1);
      }

      ;

      if (m instanceof App) {
        return new App(Data_Functor.map(functorExpr)(f)(m.value0), Data_Functor.map(functorExpr)(f)(m.value1));
      }

      ;

      if (m instanceof Let) {
        return new Let(Data_Functor.map(functorVarDef)(f)(m.value0), Data_Functor.map(functorExpr)(f)(m.value1));
      }

      ;

      if (m instanceof LetRec) {
        return new LetRec(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Functor.map(functorElim)(f)))(m.value0), Data_Functor.map(functorExpr)(f)(m.value1));
      }

      ;
      throw new Error("Failed pattern match at Expr (line 63, column 1 - line 63, column 44): " + [m.constructor.name]);
    };
  });
  var functorElim = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof ElimHole) {
        return new ElimHole(f(m.value0));
      }

      ;

      if (m instanceof ElimVar) {
        return new ElimVar(m.value0, Data_Functor.map(functorCont)(f)(m.value1));
      }

      ;

      if (m instanceof ElimConstr) {
        return new ElimConstr(Data_Functor.map(Data_Map_Internal.functorMap)(Data_Functor.map(functorCont)(f))(m.value0));
      }

      ;

      if (m instanceof ElimRecord) {
        return new ElimRecord(m.value0, Data_Functor.map(functorCont)(f)(m.value1));
      }

      ;
      throw new Error("Failed pattern match at Expr (line 65, column 1 - line 65, column 44): " + [m.constructor.name]);
    };
  });
  var functorCont = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof ContHole) {
        return new ContHole(f(m.value0));
      }

      ;

      if (m instanceof ContExpr) {
        return new ContExpr(Data_Functor.map(functorExpr)(f)(m.value0));
      }

      ;

      if (m instanceof ContElim) {
        return new ContElim(Data_Functor.map(functorElim)(f)(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Expr (line 64, column 1 - line 64, column 44): " + [m.constructor.name]);
    };
  });
  var slicesVarDef = new Lattice.Slices(function () {
    return joinSemilatticeVarDef;
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(VarDef.create)(Lattice.maybeJoin(slicesElim)(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesExpr)(v.value1)(v1.value1));
    };
  });
  var slicesExpr = new Lattice.Slices(function () {
    return joinSemilatticeExpr;
  }, function (v) {
    return function (v1) {
      if (v instanceof Hole && !v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
      }

      ;

      if (v instanceof Hole && v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Hole(true));
      }

      ;

      if (v1 instanceof Hole && !v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v);
      }

      ;

      if (v1 instanceof Hole && v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Hole(true));
      }

      ;

      if (v instanceof Var && v1 instanceof Var) {
        return Data_Functor.map(Data_Either.functorEither)(Var.create)(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Op && v1 instanceof Op) {
        return Data_Functor.map(Data_Either.functorEither)(Op.create)(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Int && v1 instanceof Int) {
        return Data_Functor.map(Data_Either.functorEither)(Int.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showInt)(Data_Eq.eqInt)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Str && v1 instanceof Str) {
        return Data_Functor.map(Data_Either.functorEither)(Str.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Float && v1 instanceof Float) {
        return Data_Functor.map(Data_Either.functorEither)(Float.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showNumber)(Data_Eq.eqNumber)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Record && v1 instanceof Record) {
        return Data_Functor.map(Data_Either.functorEither)(Record.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Lattice.maybeJoin(Lattice.slicesSnocList(Bindings.slicesBind(slicesExpr)))(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Constr && v1 instanceof Constr) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Constr.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(DataType.showCtr)(DataType.eqCtr)(v.value1)(v1.value1)))(Lattice.maybeJoin(Lattice.slicesList(slicesExpr))(v.value2)(v1.value2));
      }

      ;

      if (v instanceof Matrix && v1 instanceof Matrix) {
        return Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Matrix.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesExpr)(v.value1)(v1.value1)))(Control_Apply.lift2(Data_Either.applyEither)(Data_Tuple.Tuple.create)(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value2.value0)(v1.value2.value0))(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value2.value1)(v1.value2.value1))))(Lattice.maybeJoin(slicesExpr)(v.value3)(v1.value3));
      }

      ;

      if (v instanceof Lambda && v1 instanceof Lambda) {
        return Data_Functor.map(Data_Either.functorEither)(Lambda.create)(Lattice.maybeJoin(slicesElim)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof RecordLookup && v1 instanceof RecordLookup) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(RecordLookup.create)(Lattice.maybeJoin(slicesExpr)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof App && v1 instanceof App) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(App.create)(Lattice.maybeJoin(slicesExpr)(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesExpr)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Let && v1 instanceof Let) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Let.create)(Lattice.maybeJoin(slicesVarDef)(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesExpr)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof LetRec && v1 instanceof LetRec) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(LetRec.create)(Lattice.maybeJoin(Lattice.slicesSnocList(Bindings.slicesBind(slicesElim)))(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesExpr)(v.value1)(v1.value1));
      }

      ;
      return Util.report("Incompatible expressions");
    };
  });
  var slicesElim = new Lattice.Slices(function () {
    return joinSemilatticeElim;
  }, function (v) {
    return function (v1) {
      if (v instanceof ElimHole && !v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
      }

      ;

      if (v instanceof ElimHole && v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new ElimHole(true));
      }

      ;

      if (v1 instanceof ElimHole && !v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v);
      }

      ;

      if (v1 instanceof ElimHole && v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new ElimHole(true));
      }

      ;

      if (v instanceof ElimVar && v1 instanceof ElimVar) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(ElimVar.create)(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesCont)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof ElimConstr && v1 instanceof ElimConstr) {
        return Data_Functor.map(Data_Either.functorEither)(ElimConstr.create)(Lattice.maybeJoin(Lattice.slicesMap(DataType.keyCtr)(slicesCont))(v.value0)(v1.value0));
      }

      ;

      if (v instanceof ElimRecord && v1 instanceof ElimRecord) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(ElimRecord.create)(Util.mayFailEq(Util_SnocList.showSnocList(Data_Show.showString))(Util_SnocList.eqSnocList(Data_Eq.eqString))(v.value0)(v1.value0)))(Lattice.maybeJoin(slicesCont)(v.value1)(v1.value1));
      }

      ;
      return Util.report("Incompatible eliminators");
    };
  });
  var slicesCont = new Lattice.Slices(function () {
    return joinSemilatticeCont;
  }, function (v) {
    return function (v1) {
      if (v instanceof ContHole && !v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
      }

      ;

      if (v instanceof ContHole && v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new ContHole(true));
      }

      ;

      if (v1 instanceof ContHole && !v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v);
      }

      ;

      if (v1 instanceof ContHole && v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new ContHole(true));
      }

      ;

      if (v instanceof ContExpr && v1 instanceof ContExpr) {
        return Data_Functor.map(Data_Either.functorEither)(ContExpr.create)(Lattice.maybeJoin(slicesExpr)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof ContElim && v1 instanceof ContElim) {
        return Data_Functor.map(Data_Either.functorEither)(ContElim.create)(Lattice.maybeJoin(slicesElim)(v.value0)(v1.value0));
      }

      ;
      return Util.report("Incompatible continuations");
    };
  });
  var joinSemilatticeVarDef = new Lattice.JoinSemilattice(Lattice.definedJoin(slicesVarDef), Data_Functor.map(functorVarDef)(Lattice.neg(Lattice.joinSemilatticeBoolean)));
  var joinSemilatticeExpr = new Lattice.JoinSemilattice(Lattice.definedJoin(slicesExpr), Data_Functor.map(functorExpr)(Lattice.neg(Lattice.joinSemilatticeBoolean)));
  var joinSemilatticeElim = new Lattice.JoinSemilattice(Lattice.definedJoin(slicesElim), Data_Functor.map(functorElim)(Lattice.neg(Lattice.joinSemilatticeBoolean)));
  var joinSemilatticeCont = new Lattice.JoinSemilattice(Lattice.definedJoin(slicesCont), Data_Functor.map(functorCont)(Lattice.neg(Lattice.joinSemilatticeBoolean)));
  var exprExpandable = new Lattice.Expandable(function (v) {
    return function (v1) {
      if (v1 instanceof Hole && !v1.value0) {
        return v;
      }

      ;

      if (v instanceof Hole && v1 instanceof Var) {
        return v1;
      }

      ;

      if (v instanceof Hole && v1 instanceof Op) {
        return v1;
      }

      ;

      if (v instanceof Hole && v1 instanceof Int) {
        return new Int(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Float) {
        return new Float(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Str) {
        return new Str(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Record) {
        return new Record(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(exprExpandable)))(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Hole(v.value0))))(v1.value1))(v1.value1));
      }

      ;

      if (v instanceof Hole && v1 instanceof Constr) {
        return new Constr(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1, Data_Functor.map(Data_List_Types.functorList)(Lattice.expand(exprExpandable)(new Hole(v.value0)))(v1.value2));
      }

      ;

      if (v instanceof Hole && v1 instanceof Matrix) {
        return new Matrix(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value1), new Data_Tuple.Tuple(v1.value2.value0, v1.value2.value1), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value3));
      }

      ;

      if (v instanceof Hole && v1 instanceof Lambda) {
        return new Lambda(Lattice.expand(elimExpandable)(new ElimHole(v.value0))(v1.value0));
      }

      ;

      if (v instanceof Hole && v1 instanceof RecordLookup) {
        return new RecordLookup(Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof App) {
        return new App(Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value0), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value1));
      }

      ;

      if (v instanceof Hole && v1 instanceof Let) {
        return new Let(new VarDef(Lattice.expand(elimExpandable)(new ElimHole(v.value0))(v1.value0.value0), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value0.value1)), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value1));
      }

      ;

      if (v instanceof Hole && v1 instanceof LetRec) {
        return new LetRec(Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(elimExpandable)))(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new ElimHole(v.value0))))(v1.value0))(v1.value0), Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value1));
      }

      ;

      if (v instanceof Var && v1 instanceof Var) {
        return new Var(Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Op && v1 instanceof Op) {
        return new Op(Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof Int && v1 instanceof Int) {
        return new Int(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqInt)(Data_Show.showInt)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Float && v1 instanceof Float) {
        return new Float(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqNumber)(Data_Show.showNumber)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Str && v1 instanceof Str) {
        return new Str(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Record && v1 instanceof Record) {
        return new Record(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(exprExpandable)))(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Constr && v1 instanceof Constr) {
        return new Constr(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(DataType.eqCtr)(DataType.showCtr)(v.value1)(v1.value1), Lattice.expand(Lattice.expandableList(exprExpandable))(v.value2)(v1.value2));
      }

      ;

      if (v instanceof Matrix && v1 instanceof Matrix) {
        return new Matrix(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(exprExpandable)(v.value1)(v1.value1), new Data_Tuple.Tuple(Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value2.value0)(v1.value2.value0), Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value2.value1)(v1.value2.value1)), Lattice.expand(exprExpandable)(v.value3)(v1.value3));
      }

      ;

      if (v instanceof Lambda && v1 instanceof Lambda) {
        return new Lambda(Lattice.expand(elimExpandable)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof RecordLookup && v1 instanceof RecordLookup) {
        return new RecordLookup(Lattice.expand(exprExpandable)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof App && v1 instanceof App) {
        return new App(Lattice.expand(exprExpandable)(v.value0)(v1.value0), Lattice.expand(exprExpandable)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Let && v1 instanceof Let) {
        return new Let(new VarDef(Lattice.expand(elimExpandable)(v.value0.value0)(v1.value0.value0), Lattice.expand(exprExpandable)(v.value0.value1)(v1.value0.value1)), Lattice.expand(exprExpandable)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof LetRec && v1 instanceof LetRec) {
        return new LetRec(Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(elimExpandable)))(v.value0)(v1.value0), Lattice.expand(exprExpandable)(v.value1)(v1.value1));
      }

      ;
      return Util.error(Util.absurd);
    };
  });
  var elimExpandable = new Lattice.Expandable(function (v) {
    return function (v1) {
      if (v1 instanceof ElimHole && !v1.value0) {
        return v;
      }

      ;

      if (v instanceof ElimHole && v1 instanceof ElimVar) {
        return new ElimVar(v1.value0, Lattice.expand(contExpandable)(new ContHole(v.value0))(v1.value1));
      }

      ;

      if (v instanceof ElimHole && v1 instanceof ElimConstr) {
        return new ElimConstr(Data_Functor.map(Data_Map_Internal.functorMap)(Lattice.expand(contExpandable)(new ContHole(v.value0)))(v1.value0));
      }

      ;

      if (v instanceof ElimHole && v1 instanceof ElimRecord) {
        return new ElimRecord(v1.value0, Lattice.expand(contExpandable)(new ContHole(v.value0))(v1.value1));
      }

      ;

      if (v instanceof ElimVar && v1 instanceof ElimVar) {
        return new ElimVar(Bindings.mustGeq(v.value0)(v1.value0), Lattice.expand(contExpandable)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof ElimConstr && v1 instanceof ElimConstr) {
        return new ElimConstr(Lattice.expand(Lattice.expandableMap(DataType.ordCtr)(contExpandable))(v.value0)(v1.value0));
      }

      ;

      if (v instanceof ElimRecord && v1 instanceof ElimRecord) {
        return new ElimRecord(Util.mustGeq(Util_SnocList.ordSnocList(Data_Ord.ordString))(Util_SnocList.showSnocList(Data_Show.showString))(v.value0)(v1.value0), Lattice.expand(contExpandable)(v.value1)(v1.value1));
      }

      ;
      return Util.error(Util.absurd);
    };
  });
  var contExpandable = new Lattice.Expandable(function (v) {
    return function (v1) {
      if (v1 instanceof ContHole && !v1.value0) {
        return v;
      }

      ;

      if (v instanceof ContHole && v1 instanceof ContExpr) {
        return new ContExpr(Lattice.expand(exprExpandable)(new Hole(v.value0))(v1.value0));
      }

      ;

      if (v instanceof ContHole && v1 instanceof ContElim) {
        return new ContElim(Lattice.expand(elimExpandable)(new ElimHole(v.value0))(v1.value0));
      }

      ;

      if (v instanceof ContExpr && v1 instanceof ContExpr) {
        return new ContExpr(Lattice.expand(exprExpandable)(v.value0)(v1.value0));
      }

      ;

      if (v instanceof ContElim && v1 instanceof ContElim) {
        return new ContElim(Lattice.expand(elimExpandable)(v.value0)(v1.value0));
      }

      ;
      return Util.error(Util.absurd);
    };
  });
  var boundedSlicesElim = new Lattice.BoundedSlices(function () {
    return slicesElim;
  }, Data_Function["const"](new ElimHole(false)));

  var asExpr = function asExpr(v) {
    if (v instanceof ContHole) {
      return new Hole(v.value0);
    }

    ;

    if (v instanceof ContElim) {
      return Util.error("Expression expected");
    }

    ;

    if (v instanceof ContExpr) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Expr (line 52, column 1 - line 52, column 38): " + [v.constructor.name]);
  };

  var asElim = function asElim(v) {
    if (v instanceof ContHole) {
      return new ElimHole(v.value0);
    }

    ;

    if (v instanceof ContElim) {
      return v.value0;
    }

    ;

    if (v instanceof ContExpr) {
      return Util.error("Eliminator expected");
    }

    ;
    throw new Error("Failed pattern match at Expr (line 47, column 1 - line 47, column 38): " + [v.constructor.name]);
  };

  exports["Hole"] = Hole;
  exports["Var"] = Var;
  exports["Op"] = Op;
  exports["Int"] = Int;
  exports["Float"] = Float;
  exports["Str"] = Str;
  exports["Record"] = Record;
  exports["Constr"] = Constr;
  exports["Matrix"] = Matrix;
  exports["Lambda"] = Lambda;
  exports["RecordLookup"] = RecordLookup;
  exports["App"] = App;
  exports["Let"] = Let;
  exports["LetRec"] = LetRec;
  exports["VarDef"] = VarDef;
  exports["ElimHole"] = ElimHole;
  exports["ElimVar"] = ElimVar;
  exports["ElimConstr"] = ElimConstr;
  exports["ElimRecord"] = ElimRecord;
  exports["ContHole"] = ContHole;
  exports["ContExpr"] = ContExpr;
  exports["ContElim"] = ContElim;
  exports["asElim"] = asElim;
  exports["asExpr"] = asExpr;
  exports["Module"] = Module;
  exports["functorExpr"] = functorExpr;
  exports["functorElim"] = functorElim;
  exports["slicesElim"] = slicesElim;
  exports["boundedSlicesElim"] = boundedSlicesElim;
  exports["joinSemilatticeExpr"] = joinSemilatticeExpr;
  exports["exprExpandable"] = exprExpandable;
  exports["elimExpandable"] = elimExpandable;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Val"] = $PS["Val"] || {};
  var exports = $PS["Val"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];

  var Hole = function () {
    function Hole(value0) {
      this.value0 = value0;
    }

    ;

    Hole.create = function (value0) {
      return new Hole(value0);
    };

    return Hole;
  }();

  var Int = function () {
    function Int(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Int.create = function (value0) {
      return function (value1) {
        return new Int(value0, value1);
      };
    };

    return Int;
  }();

  var Float = function () {
    function Float(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Float.create = function (value0) {
      return function (value1) {
        return new Float(value0, value1);
      };
    };

    return Float;
  }();

  var Str = function () {
    function Str(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Str.create = function (value0) {
      return function (value1) {
        return new Str(value0, value1);
      };
    };

    return Str;
  }();

  var Record = function () {
    function Record(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Record.create = function (value0) {
      return function (value1) {
        return new Record(value0, value1);
      };
    };

    return Record;
  }();

  var Constr = function () {
    function Constr(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Constr.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Constr(value0, value1, value2);
        };
      };
    };

    return Constr;
  }();

  var Matrix = function () {
    function Matrix(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Matrix.create = function (value0) {
      return function (value1) {
        return new Matrix(value0, value1);
      };
    };

    return Matrix;
  }();

  var Primitive = function () {
    function Primitive(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Primitive.create = function (value0) {
      return function (value1) {
        return new Primitive(value0, value1);
      };
    };

    return Primitive;
  }();

  var Closure = function () {
    function Closure(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Closure.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Closure(value0, value1, value2, value3);
          };
        };
      };
    };

    return Closure;
  }();

  var valExpandable = new Lattice.Expandable(function (v) {
    return function (v1) {
      if (v1 instanceof Hole && !v1.value0) {
        return v;
      }

      ;

      if (v instanceof Hole && v1 instanceof Int) {
        return new Int(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Float) {
        return new Float(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Str) {
        return new Str(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1);
      }

      ;

      if (v instanceof Hole && v1 instanceof Primitive) {
        return new Primitive(v1.value0, Data_Functor.map(Data_List_Types.functorList)(Lattice.expand(valExpandable)(new Hole(v.value0)))(v1.value1));
      }

      ;

      if (v instanceof Hole && v1 instanceof Record) {
        return new Record(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(valExpandable)))(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Hole(v.value0))))(v1.value1))(v1.value1));
      }

      ;

      if (v instanceof Hole && v1 instanceof Constr) {
        return new Constr(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), v1.value1, Data_Functor.map(Data_List_Types.functorList)(Lattice.expand(valExpandable)(new Hole(v.value0)))(v1.value2));
      }

      ;

      if (v instanceof Hole && v1 instanceof Matrix) {
        return new Matrix(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorArray)(Lattice.expand(valExpandable)(new Hole(v.value0))))(v1.value1.value0.value0), new Data_Tuple.Tuple(v1.value1.value0.value1.value0, Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value1.value0.value1.value1))), new Data_Tuple.Tuple(v1.value1.value1.value0, Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value1.value1.value1))));
      }

      ;

      if (v instanceof Hole && v1 instanceof Closure) {
        return new Closure(Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(valExpandable)))(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Hole(v.value0))))(v1.value0))(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(Expr.elimExpandable)))(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Expr.ElimHole(v.value0))))(v1.value1))(v1.value1), Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value2), Lattice.expand(Expr.elimExpandable)(new Expr.ElimHole(v.value0))(v1.value3));
      }

      ;

      if (v instanceof Int && v1 instanceof Int) {
        return new Int(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqInt)(Data_Show.showInt)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Float && v1 instanceof Float) {
        return new Float(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqNumber)(Data_Show.showNumber)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Str && v1 instanceof Str) {
        return new Str(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Record && v1 instanceof Record) {
        return new Record(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(valExpandable)))(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Constr && v1 instanceof Constr) {
        return new Constr(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), Util.mustEq(DataType.eqCtr)(DataType.showCtr)(v.value1)(v1.value1), Lattice.expand(Lattice.expandableList(valExpandable))(v.value2)(v1.value2));
      }

      ;

      if (v instanceof Matrix && v1 instanceof Matrix) {
        return new Matrix(Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value0)(v1.value0), new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.expand(Lattice.expandableArray(Lattice.expandableArray(valExpandable)))(v.value1.value0.value0)(v1.value1.value0.value0), new Data_Tuple.Tuple(Util.mustEq(Data_Eq.eqInt)(Data_Show.showInt)(v.value1.value0.value1.value0)(v1.value1.value0.value1.value0), Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value1.value0.value1.value1)(v1.value1.value0.value1.value1))), new Data_Tuple.Tuple(Util.mustEq(Data_Eq.eqInt)(Data_Show.showInt)(v.value1.value1.value0)(v1.value1.value1.value0), Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value1.value1.value1)(v1.value1.value1.value1))));
      }

      ;

      if (v instanceof Closure && v1 instanceof Closure) {
        return new Closure(Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(valExpandable)))(v.value0)(v1.value0), Lattice.expand(Lattice.expandableSnocList(Bindings.expandableBind(Expr.elimExpandable)))(v.value1)(v1.value1), Util.mustGeq(Data_Ord.ordBoolean)(Data_Show.showBoolean)(v.value2)(v1.value2), Lattice.expand(Expr.elimExpandable)(v.value3)(v1.value3));
      }

      ;

      if (v instanceof Primitive && v1 instanceof Primitive) {
        return new Primitive(v.value0, Lattice.expand(Lattice.expandableList(valExpandable))(v.value1)(v1.value1));
      }

      ;
      return Util.error(Util.absurd);
    };
  });

  var insertMatrix = function insertMatrix(i) {
    return function (j) {
      return function (v) {
        return function (v1) {
          var vs_i = Util.unsafeIndex(v1.value0.value0)(i - 1 | 0);
          var vss$prime = Util.unsafeUpdateAt(i - 1 | 0)(Util.unsafeUpdateAt(j - 1 | 0)(v)(vs_i))(v1.value0.value0);
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(vss$prime, v1.value0.value1), v1.value1);
        };
      };
    };
  };

  var holeMatrix = function holeMatrix(i) {
    return function (j) {
      return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Array.replicate(i)(Data_Array.replicate(j)(new Hole(false))), new Data_Tuple.Tuple(i, false)), new Data_Tuple.Tuple(j, false));
    };
  };

  var functorVal = new Data_Functor.Functor(function (f) {
    return function (v) {
      if (v instanceof Hole) {
        return new Hole(f(v.value0));
      }

      ;

      if (v instanceof Int) {
        return new Int(f(v.value0), v.value1);
      }

      ;

      if (v instanceof Float) {
        return new Float(f(v.value0), v.value1);
      }

      ;

      if (v instanceof Str) {
        return new Str(f(v.value0), v.value1);
      }

      ;

      if (v instanceof Record) {
        return new Record(f(v.value0), Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Functor.map(functorVal)(f)))(v.value1));
      }

      ;

      if (v instanceof Constr) {
        return new Constr(f(v.value0), v.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(functorVal)(f))(v.value2));
      }

      ;

      if (v instanceof Matrix) {
        return new Matrix(f(v.value0), new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorVal)(f)))(v.value1.value0.value0), Data_Functor.map(Data_Tuple.functorTuple)(f)(v.value1.value0.value1)), Data_Functor.map(Data_Tuple.functorTuple)(f)(v.value1.value1)));
      }

      ;

      if (v instanceof Primitive) {
        return new Primitive(v.value0, Data_Functor.map(Data_List_Types.functorList)(Data_Functor.map(functorVal)(f))(v.value1));
      }

      ;

      if (v instanceof Closure) {
        return new Closure(Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Functor.map(functorVal)(f)))(v.value0), Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Functor.map(Expr.functorElim)(f)))(v.value1), f(v.value2), Data_Functor.map(Expr.functorElim)(f)(v.value3));
      }

      ;
      throw new Error("Failed pattern match at Val (line 55, column 1 - line 65, column 102): " + [f.constructor.name, v.constructor.name]);
    };
  });
  var slicesVal = new Lattice.Slices(function () {
    return joinSemilatticeVal;
  }, function (v) {
    return function (v1) {
      if (v instanceof Hole && !v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
      }

      ;

      if (v instanceof Hole && v.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Hole(true));
      }

      ;

      if (v1 instanceof Hole && !v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(v);
      }

      ;

      if (v1 instanceof Hole && v1.value0) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Hole(true));
      }

      ;

      if (v instanceof Int && v1 instanceof Int) {
        return Data_Functor.map(Data_Either.functorEither)(Int.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showInt)(Data_Eq.eqInt)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Float && v1 instanceof Float) {
        return Data_Functor.map(Data_Either.functorEither)(Float.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showNumber)(Data_Eq.eqNumber)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Str && v1 instanceof Str) {
        return Data_Functor.map(Data_Either.functorEither)(Str.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(Data_Show.showString)(Data_Eq.eqString)(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Record && v1 instanceof Record) {
        return Data_Functor.map(Data_Either.functorEither)(Record.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Lattice.maybeJoin(Lattice.slicesSnocList(Bindings.slicesBind(slicesVal)))(v.value1)(v1.value1));
      }

      ;

      if (v instanceof Constr && v1 instanceof Constr) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Constr.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Util.mayFailEq(DataType.showCtr)(DataType.eqCtr)(v.value1)(v1.value1)))(Lattice.maybeJoin(Lattice.slicesList(slicesVal))(v.value2)(v1.value2));
      }

      ;

      if (v instanceof Matrix && v1 instanceof Matrix) {
        return Data_Functor.map(Data_Either.functorEither)(Matrix.create(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value0)(v1.value0)))(Control_Apply.lift2(Data_Either.applyEither)(Data_Tuple.Tuple.create)(Control_Apply.lift2(Data_Either.applyEither)(Data_Tuple.Tuple.create)(Lattice.maybeJoin(Lattice.slicesArray(Lattice.slicesArray(slicesVal)))(v.value1.value0.value0)(v1.value1.value0.value0))(Data_Functor.map(Data_Either.functorEither)(Data_Function.flip(Data_Tuple.Tuple.create)(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value1.value0.value1.value1)(v1.value1.value0.value1.value1)))(Util.mayFailEq(Data_Show.showInt)(Data_Eq.eqInt)(v.value1.value0.value1.value0)(v1.value1.value0.value1.value0))))(Data_Functor.map(Data_Either.functorEither)(Data_Function.flip(Data_Tuple.Tuple.create)(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value1.value1.value1)(v1.value1.value1.value1)))(Util.mayFailEq(Data_Show.showInt)(Data_Eq.eqInt)(v.value1.value1.value0)(v1.value1.value1.value0))));
      }

      ;

      if (v instanceof Closure && v1 instanceof Closure) {
        return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.flap(Data_Either.functorEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Closure.create)(Lattice.maybeJoin(Lattice.slicesSnocList(Bindings.slicesBind(slicesVal)))(v.value0)(v1.value0)))(Lattice.maybeJoin(Lattice.slicesSnocList(Bindings.slicesBind(Expr.slicesElim)))(v.value1)(v1.value1)))(Lattice.join(Lattice.joinSemilatticeBoolean)(v.value2)(v1.value2)))(Lattice.maybeJoin(Expr.slicesElim)(v.value3)(v1.value3));
      }

      ;

      if (v instanceof Primitive && v1 instanceof Primitive) {
        return Data_Functor.map(Data_Either.functorEither)(Primitive.create(v.value0))(Lattice.maybeJoin(Lattice.slicesList(slicesVal))(v.value1)(v1.value1));
      }

      ;
      return Util.report("Incompatible values");
    };
  });
  var joinSemilatticeVal = new Lattice.JoinSemilattice(Lattice.definedJoin(slicesVal), Data_Functor.map(functorVal)(Lattice.neg(Lattice.joinSemilatticeBoolean)));
  var boundedSlices = new Lattice.BoundedSlices(function () {
    return slicesVal;
  }, Data_Function["const"](new Hole(Lattice.bot(Lattice.boundedJoinSemilatticeBoolean))));
  exports["Hole"] = Hole;
  exports["Int"] = Int;
  exports["Float"] = Float;
  exports["Str"] = Str;
  exports["Record"] = Record;
  exports["Constr"] = Constr;
  exports["Matrix"] = Matrix;
  exports["Primitive"] = Primitive;
  exports["Closure"] = Closure;
  exports["insertMatrix"] = insertMatrix;
  exports["holeMatrix"] = holeMatrix;
  exports["joinSemilatticeVal"] = joinSemilatticeVal;
  exports["slicesVal"] = slicesVal;
  exports["boundedSlices"] = boundedSlices;
  exports["valExpandable"] = valExpandable;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Pretty"] = $PS["Pretty"] || {};
  var exports = $PS["Pretty"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var DataType = $PS["DataType"];
  var Parse = $PS["Parse"];
  var Text_Pretty = $PS["Text.Pretty"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];

  var Pretty = function Pretty(pretty) {
    this.pretty = pretty;
  };

  var space = Text_Pretty.text(" ");
  var prettyString = new Pretty(Text_Pretty.text);
  var prettyPrimOp = new Pretty(function (v) {
    return Text_Pretty.text("<prim op>");
  });

  var pretty = function pretty(dict) {
    return dict.pretty;
  };

  var prettyCtr = new Pretty(function () {
    var $266 = pretty(prettyString);
    var $267 = Data_Show.show(DataType.showCtr);
    return function ($268) {
      return $266($267($268));
    };
  }());

  var prettyP = function prettyP(dictPretty) {
    var $269 = pretty(dictPretty);
    return function ($270) {
      return Text_Pretty.render($269($270));
    };
  };

  var $$null = Text_Pretty.empty(0)(0);

  var vert = function vert(dictFoldable) {
    return function (delim) {
      var vert$prime = function vert$prime(v) {
        if (v instanceof Data_List_Types.Nil) {
          return $$null;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          return v.value0;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
          return Text_Pretty.atop(Text_Pretty.beside(v.value0)(delim))(vert$prime(new Data_List_Types.Cons(v.value1.value0, v.value1.value1)));
        }

        ;
        throw new Error("Failed pattern match at Pretty (line 94, column 10 - line 94, column 34): " + [v.constructor.name]);
      };

      var $271 = Data_List.fromFoldable(dictFoldable);
      return function ($272) {
        return vert$prime($271($272));
      };
    };
  };

  var nil = Text_Pretty.text(Parse.str.lBracket + Parse.str.rBracket);

  var hspace = function hspace(dictFoldable) {
    var $273 = Text_Pretty.hcat(Data_List_Types.foldableList);
    var $274 = Util.intersperse(space);
    var $275 = Data_List.fromFoldable(dictFoldable);
    return function ($276) {
      return $273($274($275($276)));
    };
  };

  var hole = function hole(v) {
    if (!v) {
      return Text_Pretty.text("\u25A1");
    }

    ;

    if (v) {
      return Text_Pretty.text("\u25A0");
    }

    ;
    throw new Error("Failed pattern match at Pretty (line 62, column 1 - line 62, column 17): " + [v.constructor.name]);
  };

  var comma = Text_Pretty.text(",");

  var hcomma = function hcomma(dictFoldable) {
    var $277 = Text_Pretty.hcat(Data_List_Types.foldableList);
    var $278 = Util.intersperse(Text_Pretty.beside(comma)(space));
    var $279 = Data_List.fromFoldable(dictFoldable);
    return function ($280) {
      return $277($278($279($280)));
    };
  };

  var colon = Text_Pretty.text(Parse.str.colon);

  var between = function between(l) {
    return function (r) {
      return function (doc) {
        return Text_Pretty.beside(Text_Pretty.beside(l)(doc))(r);
      };
    };
  };

  var highlightIf = function highlightIf(v) {
    if (!v) {
      return Control_Category.identity(Control_Category.categoryFn);
    }

    ;

    if (v) {
      return between(Text_Pretty.text("_"))(Text_Pretty.text("_"));
    }

    ;
    throw new Error("Failed pattern match at Pretty (line 37, column 1 - line 37, column 35): " + [v.constructor.name]);
  };

  var parens = between(Text_Pretty.text("("))(Text_Pretty.text(")"));

  var prettyParensOpt = function prettyParensOpt(dictPretty) {
    return function (x) {
      var doc = pretty(dictPretty)(x);
      var $83 = Data_String_CodeUnits.contains(" ")(Text_Pretty.render(doc));

      if ($83) {
        return parens(doc);
      }

      ;
      return doc;
    };
  };

  var prettyConstr = function prettyConstr(dictPretty) {
    return function (α) {
      return function (c) {
        return function (v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons && v.value1.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(c)(DataType.cPair)) {
            return highlightIf(α)(parens(hcomma(Data_Foldable.foldableArray)([pretty(dictPretty)(v.value0), pretty(dictPretty)(v.value1.value0)])));
          }

          ;

          if (v instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(c)(DataType.cNil)) {
            return highlightIf(α)(nil);
          }

          ;

          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons && v.value1.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(c)(DataType.cCons)) {
            return parens(hspace(Data_Foldable.foldableArray)([pretty(dictPretty)(v.value0), highlightIf(α)(Text_Pretty.text(":")), pretty(dictPretty)(v.value1.value0)]));
          }

          ;
          return hspace(Data_List_Types.foldableList)(new Data_List_Types.Cons(highlightIf(α)(pretty(prettyCtr)(c)), Data_Functor.map(Data_List_Types.functorList)(prettyParensOpt(dictPretty))(v)));
        };
      };
    };
  };

  var prettyRecord = function prettyRecord(dictPretty) {
    return function (α) {
      return function (xvs) {
        return function () {
          var $281 = highlightIf(α);
          var $282 = between(Text_Pretty.text("{"))(Text_Pretty.text("}"));
          var $283 = hcomma(Util_SnocList.foldableSnocList);
          return function ($284) {
            return $281($282($283($284)));
          };
        }()(Util_SnocList.reverse(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(xvs)(function (v) {
          return hspace(Data_Foldable.foldableArray)([Text_Pretty.beside(Text_Pretty.text(v.value0))(colon), pretty(dictPretty)(v.value1)]);
        })));
      };
    };
  };

  var prettyVal = new Pretty(function (v) {
    if (v instanceof Val.Hole) {
      return hole(v.value0);
    }

    ;

    if (v instanceof Val.Int) {
      return highlightIf(v.value0)(Text_Pretty.text(Data_Show.show(Data_Show.showInt)(v.value1)));
    }

    ;

    if (v instanceof Val.Float) {
      return highlightIf(v.value0)(Text_Pretty.text(Data_Show.show(Data_Show.showNumber)(v.value1)));
    }

    ;

    if (v instanceof Val.Str) {
      return highlightIf(v.value0)(Text_Pretty.text(Data_Show.show(Data_Show.showString)(v.value1)));
    }

    ;

    if (v instanceof Val.Record) {
      return prettyRecord(prettyVal)(v.value0)(v.value1);
    }

    ;

    if (v instanceof Val.Constr) {
      return prettyConstr(prettyVal)(v.value0)(v.value1)(v.value2);
    }

    ;

    if (v instanceof Val.Matrix) {
      return vert(Data_Foldable.foldableArray)(comma)(Data_Functor.map(Data_Functor.functorArray)(function () {
        var $285 = hcomma(Data_Foldable.foldableArray);
        var $286 = Data_Functor.map(Data_Functor.functorArray)(pretty(prettyVal));
        return function ($287) {
          return $285($286($287));
        };
      }())(v.value1.value0.value0));
    }

    ;

    if (v instanceof Val.Closure) {
      return Text_Pretty.text("<closure>");
    }

    ;

    if (v instanceof Val.Primitive) {
      return parens(pretty(prettyPrimOp)(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Pretty (line 172, column 1 - line 181, column 59): " + [v.constructor.name]);
  });
  exports["prettyP"] = prettyP;
  exports["prettyVal"] = prettyVal;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Primitive"] = $PS["Primitive"] || {};
  var exports = $PS["Primitive"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Lattice = $PS["Lattice"];
  var Pretty = $PS["Pretty"];
  var Util = $PS["Util"];
  var Val = $PS["Val"];

  var ToFrom = function ToFrom(constr, constr_bwd, match) {
    this.constr = constr;
    this.constr_bwd = constr_bwd;
    this.match = match;
  };

  var IsZero = function IsZero(isZero) {
    this.isZero = isZero;
  };

  var As = function As(as) {
    this.as = as;
  };

  var withInverse2 = function withInverse2(fwd) {
    return {
      fwd: fwd,
      bwd: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))
    };
  };

  var withInverse1 = function withInverse1(fwd) {
    return {
      fwd: fwd,
      bwd: Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))
    };
  };

  var union1 = function union1(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Primitive (line 226, column 1 - line 226, column 71): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var toFromVal = new ToFrom(Data_Tuple.fst, function (v) {
    return new Data_Tuple.Tuple(v.value0, false);
  }, function (v) {
    return new Data_Tuple.Tuple(v, true);
  });

  var match = function match(dict) {
    return dict.match;
  };

  var match_fwd = function match_fwd(dictToFrom) {
    return function (v) {
      return match(dictToFrom)(Lattice.expand(Val.valExpandable)(v.value0)(v.value1));
    };
  };

  var toFromBindings = new ToFrom(function (v) {
    return new Val.Record(v.value1, v.value0);
  }, function (v) {
    return match_fwd(toFromBindings)(v);
  }, function (v) {
    if (v instanceof Val.Record) {
      return new Data_Tuple.Tuple(v.value1, v.value0);
    }

    ;
    return Util.error("Record expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromBoolean = new ToFrom(function (v) {
    if (v.value0) {
      return new Val.Constr(v.value1, DataType.cTrue, Data_List_Types.Nil.value);
    }

    ;

    if (!v.value0) {
      return new Val.Constr(v.value1, DataType.cFalse, Data_List_Types.Nil.value);
    }

    ;
    throw new Error("Failed pattern match at Primitive (line 114, column 1 - line 123, column 30): " + [v.constructor.name]);
  }, function (v) {
    return match_fwd(toFromBoolean)(v);
  }, function (v) {
    if (v instanceof Val.Constr && v.value2 instanceof Data_List_Types.Nil) {
      if (Data_Eq.eq(DataType.eqCtr)(v.value1)(DataType.cTrue)) {
        return new Data_Tuple.Tuple(true, v.value0);
      }

      ;

      if (Data_Eq.eq(DataType.eqCtr)(v.value1)(DataType.cFalse)) {
        return new Data_Tuple.Tuple(false, v.value0);
      }

      ;
    }

    ;
    return Util.error("Boolean expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromInt = new ToFrom(function (v) {
    return new Val.Int(v.value1, v.value0);
  }, function (v) {
    return match_fwd(toFromInt)(v);
  }, function (v) {
    if (v instanceof Val.Int) {
      return new Data_Tuple.Tuple(v.value1, v.value0);
    }

    ;
    return Util.error("Int expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromIntOrNumber = new ToFrom(function (v) {
    if (v.value0 instanceof Data_Either.Left) {
      return new Val.Int(v.value1, v.value0.value0);
    }

    ;

    if (v.value0 instanceof Data_Either.Right) {
      return new Val.Float(v.value1, v.value0.value0);
    }

    ;
    throw new Error("Failed pattern match at Primitive (line 64, column 1 - line 72, column 75): " + [v.constructor.name]);
  }, function (v) {
    return match_fwd(toFromIntOrNumber)(v);
  }, function (v) {
    if (v instanceof Val.Int) {
      return new Data_Tuple.Tuple(new Data_Either.Left(v.value1), v.value0);
    }

    ;

    if (v instanceof Val.Float) {
      return new Data_Tuple.Tuple(new Data_Either.Right(v.value1), v.value0);
    }

    ;
    return Util.error("Int or Float expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromIntOrNumberOrString = new ToFrom(function (v) {
    if (v.value0 instanceof Data_Either.Left && v.value0.value0 instanceof Data_Either.Left) {
      return new Val.Int(v.value1, v.value0.value0.value0);
    }

    ;

    if (v.value0 instanceof Data_Either.Left && v.value0.value0 instanceof Data_Either.Right) {
      return new Val.Float(v.value1, v.value0.value0.value0);
    }

    ;

    if (v.value0 instanceof Data_Either.Right) {
      return new Val.Str(v.value1, v.value0.value0);
    }

    ;
    throw new Error("Failed pattern match at Primitive (line 74, column 1 - line 84, column 79): " + [v.constructor.name]);
  }, function (v) {
    return match_fwd(toFromIntOrNumberOrString)(v);
  }, function (v) {
    if (v instanceof Val.Int) {
      return new Data_Tuple.Tuple(new Data_Either.Left(new Data_Either.Left(v.value1)), v.value0);
    }

    ;

    if (v instanceof Val.Float) {
      return new Data_Tuple.Tuple(new Data_Either.Left(new Data_Either.Right(v.value1)), v.value0);
    }

    ;

    if (v instanceof Val.Str) {
      return new Data_Tuple.Tuple(new Data_Either.Right(v.value1), v.value0);
    }

    ;
    return Util.error("Int, Float or Str expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromMatrixRep = new ToFrom(function (v) {
    return new Val.Matrix(v.value1, v.value0);
  }, function (v) {
    return match_fwd(toFromMatrixRep)(v);
  }, function (v) {
    if (v instanceof Val.Matrix) {
      return new Data_Tuple.Tuple(v.value1, v.value0);
    }

    ;
    return Util.error("Matrix expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromNumber = new ToFrom(function (v) {
    return new Val.Float(v.value1, v.value0);
  }, function (v) {
    return match_fwd(toFromNumber)(v);
  }, function (v) {
    if (v instanceof Val.Float) {
      return new Data_Tuple.Tuple(v.value1, v.value0);
    }

    ;
    return Util.error("Float expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });
  var toFromString = new ToFrom(function (v) {
    return new Val.Str(v.value1, v.value0);
  }, function (v) {
    return match_fwd(toFromString)(v);
  }, function (v) {
    if (v instanceof Val.Str) {
      return new Data_Tuple.Tuple(v.value1, v.value0);
    }

    ;
    return Util.error("Str expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });

  var unwrap = function unwrap(dictToFrom) {
    var $329 = match(dictToFrom);
    return function ($330) {
      return Data_Tuple.fst($329($330));
    };
  };

  var isZeroNumber = new IsZero(Data_Eq.eq(Data_Eq.eqNumber)(0.0));
  var isZeroInt = new IsZero(Data_Eq.eq(Data_Eq.eqInt)(0));

  var isZero = function isZero(dict) {
    return dict.isZero;
  };

  var isZeroEither = function isZeroEither(dictIsZero) {
    return function (dictIsZero1) {
      return new IsZero(Data_Profunctor_Choice.fanin(Control_Category.categoryFn)(Data_Profunctor_Choice.choiceFn)(isZero(dictIsZero))(isZero(dictIsZero1)));
    };
  };

  var constr_bwd = function constr_bwd(dict) {
    return dict.constr_bwd;
  };

  var constr = function constr(dict) {
    return dict.constr;
  };

  var match_bwd = function match_bwd(dictToFrom) {
    return constr(dictToFrom);
  };

  var toFromIntAndInt = new ToFrom(function (v) {
    return new Val.Constr(v.value1, DataType.cPair, new Data_List_Types.Cons(constr(toFromInt)(v.value0.value0), new Data_List_Types.Cons(constr(toFromInt)(v.value0.value1), Data_List_Types.Nil.value)));
  }, function (v) {
    return match_fwd(toFromIntAndInt)(v);
  }, function (v) {
    if (v instanceof Val.Constr && v.value2 instanceof Data_List_Types.Cons && v.value2.value1 instanceof Data_List_Types.Cons && v.value2.value1.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.value1)(DataType.cPair)) {
      return new Data_Tuple.Tuple(new Data_Tuple.Tuple(match(toFromInt)(v.value2.value0), match(toFromInt)(v.value2.value1.value0)), v.value0);
    }

    ;
    return Util.error("Pair expected; got " + Pretty.prettyP(Pretty.prettyVal)(v));
  });

  var unary_ = function unary_(dictToFrom) {
    return function (dictToFrom1) {
      return function (v) {
        var apply_fwd = function apply_fwd(dictPartial) {
          return function (v1) {
            if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
              return constr(dictToFrom1)(v.fwd(match_fwd(dictToFrom)(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1))));
            }

            ;
            throw new Error("Failed pattern match at Primitive (line 168, column 4 - line 168, column 70): " + [v1.constructor.name]);
          };
        };

        var apply_bwd = function apply_bwd(dictPartial) {
          return function (v1) {
            return function (v2) {
              if (v2 instanceof Data_List_Types.Cons && v2.value1 instanceof Data_List_Types.Nil) {
                var v11 = v.bwd(constr_bwd(dictToFrom1)(new Data_Tuple.Tuple(v1.value0, v1.value1)))(unwrap(dictToFrom)(v2.value0));
                return new Data_List_Types.Cons(match_bwd(dictToFrom)(v11), Data_List_Types.Nil.value);
              }

              ;
              throw new Error("Failed pattern match at Primitive (line 171, column 4 - line 171, column 92): " + [v1.constructor.name, v2.constructor.name]);
            };
          };
        };

        var apply = function apply(dictPartial) {
          return function (v1) {
            if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
              return constr(dictToFrom1)(v.fwd(match(dictToFrom)(v1.value0)));
            }

            ;
            throw new Error("Failed pattern match at Primitive (line 165, column 4 - line 165, column 53): " + [v1.constructor.name]);
          };
        };

        return Data_Function.flip(Val.Primitive.create)(Data_List_Types.Nil.value)({
          arity: 1,
          op: apply(),
          op_fwd: apply_fwd(),
          op_bwd: apply_bwd()
        });
      };
    };
  };

  var unary = function unary(dictToFrom) {
    return function (dictToFrom1) {
      return function (v) {
        var fwd$prime = function fwd$prime(v1) {
          return new Data_Tuple.Tuple(v.fwd(v1.value0), v1.value1);
        };

        var bwd$prime = function bwd$prime(v1) {
          return function (x) {
            return new Data_Tuple.Tuple(v.bwd(v1.value0)(x), v1.value1);
          };
        };

        return unary_(dictToFrom)(dictToFrom1)({
          fwd: fwd$prime,
          bwd: bwd$prime
        });
      };
    };
  };

  var binary_ = function binary_(dictToFrom) {
    return function (dictToFrom1) {
      return function (dictToFrom2) {
        return function (v) {
          var apply_fwd = function apply_fwd(dictPartial) {
            return function (v1) {
              if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Cons && v1.value1.value1 instanceof Data_List_Types.Nil) {
                return constr(dictToFrom2)(v.fwd(match_fwd(dictToFrom)(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1)))(match_fwd(dictToFrom1)(new Data_Tuple.Tuple(v1.value1.value0.value0, v1.value1.value0.value1))));
              }

              ;
              throw new Error("Failed pattern match at Primitive (line 186, column 4 - line 186, column 78): " + [v1.constructor.name]);
            };
          };

          var apply_bwd = function apply_bwd(dictPartial) {
            return function (v1) {
              return function (v2) {
                if (v2 instanceof Data_List_Types.Cons && v2.value1 instanceof Data_List_Types.Cons && v2.value1.value1 instanceof Data_List_Types.Nil) {
                  var v4 = v.bwd(constr_bwd(dictToFrom2)(new Data_Tuple.Tuple(v1.value0, v1.value1)))(new Data_Tuple.Tuple(unwrap(dictToFrom)(v2.value0), unwrap(dictToFrom1)(v2.value1.value0)));
                  return new Data_List_Types.Cons(match_bwd(dictToFrom)(v4.value0), new Data_List_Types.Cons(match_bwd(dictToFrom1)(v4.value1), Data_List_Types.Nil.value));
                }

                ;
                throw new Error("Failed pattern match at Primitive (line 189, column 4 - line 189, column 95): " + [v1.constructor.name, v2.constructor.name]);
              };
            };
          };

          var apply = function apply(dictPartial) {
            return function (v1) {
              if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Cons && v1.value1.value1 instanceof Data_List_Types.Nil) {
                return constr(dictToFrom2)(v.fwd(match(dictToFrom)(v1.value0))(match(dictToFrom1)(v1.value1.value0)));
              }

              ;
              throw new Error("Failed pattern match at Primitive (line 183, column 4 - line 183, column 56): " + [v1.constructor.name]);
            };
          };

          return Data_Function.flip(Val.Primitive.create)(Data_List_Types.Nil.value)({
            arity: 2,
            op: apply(),
            op_fwd: apply_fwd(),
            op_bwd: apply_bwd()
          });
        };
      };
    };
  };

  var binaryZero = function binaryZero(dictIsZero) {
    return function (dictToFrom) {
      return function (dictToFrom1) {
        return function (v) {
          var fwd$prime = function fwd$prime(v1) {
            return function (v2) {
              return new Data_Tuple.Tuple(v.fwd(v1.value0)(v2.value0), function () {
                var $277 = isZero(dictIsZero)(v1.value0);

                if ($277) {
                  return v1.value1;
                }

                ;
                var $278 = isZero(dictIsZero)(v2.value0);

                if ($278) {
                  return v2.value1;
                }

                ;
                return Lattice.meet(v1.value1)(v2.value1);
              }());
            };
          };

          var bwd$prime = function bwd$prime(v1) {
            return function (v2) {
              var v3 = v.bwd(v1.value0)(new Data_Tuple.Tuple(v2.value0, v2.value1));
              var $286 = isZero(dictIsZero)(v2.value0);

              if ($286) {
                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0, v1.value1), new Data_Tuple.Tuple(v3.value1, false));
              }

              ;
              var $287 = isZero(dictIsZero)(v2.value1);

              if ($287) {
                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0, false), new Data_Tuple.Tuple(v3.value1, v1.value1));
              }

              ;
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0, v1.value1), new Data_Tuple.Tuple(v3.value1, v1.value1));
            };
          };

          return binary_(dictToFrom)(dictToFrom)(dictToFrom1)({
            fwd: fwd$prime,
            bwd: bwd$prime
          });
        };
      };
    };
  };

  var binary = function binary(dictToFrom) {
    return function (dictToFrom1) {
      return function (dictToFrom2) {
        return function (v) {
          var fwd$prime = function fwd$prime(v1) {
            return function (v2) {
              return new Data_Tuple.Tuple(v.fwd(v1.value0)(v2.value0), Lattice.meet(v1.value1)(v2.value1));
            };
          };

          var bwd$prime = function bwd$prime(v1) {
            return function (v2) {
              var v3 = v.bwd(v1.value0)(new Data_Tuple.Tuple(v2.value0, v2.value1));
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0, v1.value1), new Data_Tuple.Tuple(v3.value1, v1.value1));
            };
          };

          return binary_(dictToFrom)(dictToFrom1)(dictToFrom2)({
            fwd: fwd$prime,
            bwd: bwd$prime
          });
        };
      };
    };
  };

  var asNumberIntOrNumber = new As(Data_Either.Right.create);
  var asIntOrNumberString = new As(function (v) {
    return Util.error("Non-uniform argument types");
  });
  var asIntNumber = new As(Data_Int.toNumber);
  var asIntIntOrNumber = new As(Data_Either.Left.create);
  var asBooleanBoolean = new As(Control_Category.identity(Control_Category.categoryFn));

  var as = function as(dict) {
    return dict.as;
  };

  var asEither = new As(function (v) {
    if (v instanceof Data_Either.Left) {
      return as(asIntNumber)(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Primitive (line 257, column 1 - line 259, column 22): " + [v.constructor.name]);
  });

  var union = function union(dictAs) {
    return function (dictAs1) {
      return function (dictAs2) {
        return function (dictAs3) {
          return function (v) {
            return function (v1) {
              return function (v2) {
                return function (v3) {
                  if (v2 instanceof Data_Either.Left && v3 instanceof Data_Either.Left) {
                    return as(dictAs)(v(v2.value0)(v3.value0));
                  }

                  ;

                  if (v2 instanceof Data_Either.Left && v3 instanceof Data_Either.Right) {
                    return as(dictAs1)(v1(as(dictAs2)(v2.value0))(v3.value0));
                  }

                  ;

                  if (v2 instanceof Data_Either.Right && v3 instanceof Data_Either.Right) {
                    return as(dictAs1)(v1(v2.value0)(v3.value0));
                  }

                  ;

                  if (v2 instanceof Data_Either.Right && v3 instanceof Data_Either.Left) {
                    return as(dictAs1)(v1(v2.value0)(as(dictAs3)(v3.value0)));
                  }

                  ;
                  throw new Error("Failed pattern match at Primitive (line 231, column 1 - line 232, column 73): " + [v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name]);
                };
              };
            };
          };
        };
      };
    };
  };

  var unionStr = function unionStr(dictAs) {
    return function (dictAs1) {
      return union(dictAs)(dictAs)(dictAs1)(dictAs1);
    };
  };

  exports["as"] = as;
  exports["match"] = match;
  exports["match_fwd"] = match_fwd;
  exports["withInverse1"] = withInverse1;
  exports["withInverse2"] = withInverse2;
  exports["unary"] = unary;
  exports["binary"] = binary;
  exports["binaryZero"] = binaryZero;
  exports["union1"] = union1;
  exports["union"] = union;
  exports["unionStr"] = unionStr;
  exports["toFromVal"] = toFromVal;
  exports["toFromInt"] = toFromInt;
  exports["toFromNumber"] = toFromNumber;
  exports["toFromString"] = toFromString;
  exports["toFromIntOrNumber"] = toFromIntOrNumber;
  exports["toFromIntOrNumberOrString"] = toFromIntOrNumberOrString;
  exports["toFromIntAndInt"] = toFromIntAndInt;
  exports["toFromMatrixRep"] = toFromMatrixRep;
  exports["toFromBindings"] = toFromBindings;
  exports["toFromBoolean"] = toFromBoolean;
  exports["isZeroInt"] = isZeroInt;
  exports["isZeroNumber"] = isZeroNumber;
  exports["isZeroEither"] = isZeroEither;
  exports["asIntIntOrNumber"] = asIntIntOrNumber;
  exports["asNumberIntOrNumber"] = asNumberIntOrNumber;
  exports["asIntNumber"] = asIntNumber;
  exports["asBooleanBoolean"] = asBooleanBoolean;
  exports["asIntOrNumberString"] = asIntOrNumberString;
  exports["asEither"] = asEither;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["App.Renderer"] = $PS["App.Renderer"] || {};
  var exports = $PS["App.Renderer"];
  var $foreign = $PS["App.Renderer"];
  var Bindings = $PS["Bindings"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Lattice = $PS["Lattice"];
  var Primitive = $PS["Primitive"];
  var Util = $PS["Util"];
  var Val = $PS["Val"];

  var MatrixFig = function () {
    function MatrixFig(value0) {
      this.value0 = value0;
    }

    ;

    MatrixFig.create = function (value0) {
      return new MatrixFig(value0);
    };

    return MatrixFig;
  }();

  var EnergyTable = function () {
    function EnergyTable(value0) {
      this.value0 = value0;
    }

    ;

    EnergyTable.create = function (value0) {
      return new EnergyTable(value0);
    };

    return EnergyTable;
  }();

  var LineChartFig = function () {
    function LineChartFig(value0) {
      this.value0 = value0;
    }

    ;

    LineChartFig.create = function (value0) {
      return new LineChartFig(value0);
    };

    return LineChartFig;
  }();

  var BarChartFig = function () {
    function BarChartFig(value0) {
      this.value0 = value0;
    }

    ;

    BarChartFig.create = function (value0) {
      return new BarChartFig(value0);
    };

    return BarChartFig;
  }();

  var $$Reflect = function $$Reflect(from) {
    this.from = from;
  };

  var record = function record(toRecord) {
    return function (v) {
      return toRecord(new Data_Tuple.Tuple(Data_Tuple.fst(Primitive.match_fwd(Primitive.toFromBindings)(new Data_Tuple.Tuple(v.value0, v.value1))), Data_Tuple.fst(Primitive.match(Primitive.toFromBindings)(v.value1))));
    };
  };

  var matrixRep = function matrixRep(v) {
    return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorArray)(Primitive.match_fwd(Primitive.toFromInt)))(Data_Array.zipWith(Data_Array.zip)(v.value0.value0.value0)(v.value1.value0.value0)), v.value1.value0.value1.value0), v.value1.value1.value0);
  };

  var matrixFig = function matrixFig(selColour) {
    return function (v) {
      var vss2 = new Data_Tuple.Tuple(Data_Tuple.fst(Primitive.match_fwd(Primitive.toFromMatrixRep)(new Data_Tuple.Tuple(v.uv.value0, v.uv.value1))), Data_Tuple.fst(Primitive.match(Primitive.toFromMatrixRep)(v.uv.value1)));
      return new MatrixFig({
        title: v.title,
        selColour: selColour,
        matrix: matrixRep(vss2)
      });
    };
  };

  var get = function get(x) {
    return function (v) {
      return Util.successful(Control_Apply.lift2(Data_Either.applyEither)(Data_Tuple.Tuple.create)(Bindings.find(x)(v.value0))(Bindings.find(x)(v.value1)));
    };
  };

  var get_prim = function get_prim(dictToFrom) {
    return function (x) {
      var $162 = Primitive.match_fwd(dictToFrom);
      var $163 = get(x);
      return function ($164) {
        return $162($163($164));
      };
    };
  };

  var get_intOrNumber = function get_intOrNumber(x) {
    return function (r) {
      return Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(Primitive.as(Primitive.asEither))(get_prim(Primitive.toFromIntOrNumber)(x)(r));
    };
  };

  var reflectPoint = new $$Reflect(function (dictPartial) {
    return function (r) {
      return {
        x: get_intOrNumber("x")(r),
        y: get_intOrNumber("y")(r)
      };
    };
  });
  var reflectBarChartRecord = new $$Reflect(function (dictPartial) {
    return function (r) {
      return {
        x: get_prim(Primitive.toFromString)("x")(r),
        y: get_intOrNumber("y")(r)
      };
    };
  });

  var from = function from(dict) {
    return dict.from;
  };

  var reflectArray = new $$Reflect(function (dictPartial) {
    return function (v) {
      if (v.value1 instanceof Val.Constr && v.value1.value2 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.value1.value1)(DataType.cNil)) {
        var v1 = Lattice.expand(Val.valExpandable)(v.value0)(new Val.Constr(false, DataType.cNil, Data_List_Types.Nil.value));

        if (v1 instanceof Val.Constr && v1.value2 instanceof Data_List_Types.Nil) {
          return [];
        }

        ;
        throw new Error("Failed pattern match at App.Renderer (line 131, column 7 - line 132, column 32): " + [v1.constructor.name]);
      }

      ;

      if (v.value1 instanceof Val.Constr && v.value1.value2 instanceof Data_List_Types.Cons && v.value1.value2.value1 instanceof Data_List_Types.Cons && v.value1.value2.value1.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.value1.value1)(DataType.cCons)) {
        var v3 = Lattice.expand(Val.valExpandable)(v.value0)(new Val.Constr(false, DataType.cCons, new Data_List_Types.Cons(new Val.Hole(false), new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value))));

        if (v3 instanceof Val.Constr && v3.value2 instanceof Data_List_Types.Cons && v3.value2.value1 instanceof Data_List_Types.Cons && v3.value2.value1.value1 instanceof Data_List_Types.Nil) {
          return Data_Array.cons(new Data_Tuple.Tuple(v3.value2.value0, v.value1.value2.value0))(from(reflectArray)()(new Data_Tuple.Tuple(v3.value2.value1.value0, v.value1.value2.value1.value0)));
        }

        ;
        throw new Error("Failed pattern match at App.Renderer (line 134, column 7 - line 135, column 70): " + [v3.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at App.Renderer (line 129, column 1 - line 135, column 70): " + [v.constructor.name]);
    };
  });
  var reflectBarChart = new $$Reflect(function (dictPartial) {
    return function (r) {
      return {
        caption: get_prim(Primitive.toFromString)("caption")(r),
        data_: Data_Functor.map(Data_Functor.functorArray)(record(from(reflectBarChartRecord)()))(from(reflectArray)()(get("data")(r)))
      };
    };
  });

  var makeBarChart = function makeBarChart(dictPartial) {
    return function (v) {
      if (v.uv.value1 instanceof Val.Constr && v.uv.value1.value2 instanceof Data_List_Types.Cons && v.uv.value1.value2.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.uv.value1.value1)(DataType.cBarChart)) {
        var v2 = Lattice.expand(Val.valExpandable)(v.uv.value0)(new Val.Constr(false, DataType.cBarChart, new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value)));

        if (v2 instanceof Val.Constr && v2.value2 instanceof Data_List_Types.Cons && v2.value2.value1 instanceof Data_List_Types.Nil) {
          return new BarChartFig(record(from(reflectBarChart)())(new Data_Tuple.Tuple(v2.value2.value0, v.uv.value1.value2.value0)));
        }

        ;
        throw new Error("Failed pattern match at App.Renderer (line 57, column 4 - line 58, column 69): " + [v2.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at App.Renderer (line 55, column 1 - line 55, column 38): " + [v.constructor.name]);
    };
  };

  var reflectLinePlot = new $$Reflect(function (dictPartial) {
    return function (r) {
      return {
        name: get_prim(Primitive.toFromString)("name")(r),
        data_: Data_Functor.map(Data_Functor.functorArray)(record(from(reflectPoint)()))(from(reflectArray)()(get("data")(r)))
      };
    };
  });
  var reflectLinePlot$prime = new $$Reflect(function (dictPartial) {
    return function (v) {
      if (v.value1 instanceof Val.Constr && v.value1.value2 instanceof Data_List_Types.Cons && v.value1.value2.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.value1.value1)(DataType.cLinePlot)) {
        var v2 = Lattice.expand(Val.valExpandable)(v.value0)(new Val.Constr(false, DataType.cLinePlot, new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value)));

        if (v2 instanceof Val.Constr && v2.value2 instanceof Data_List_Types.Cons && v2.value2.value1 instanceof Data_List_Types.Nil) {
          return record(from(reflectLinePlot)())(new Data_Tuple.Tuple(v2.value2.value0, v.value1.value2.value0));
        }

        ;
        throw new Error("Failed pattern match at App.Renderer (line 125, column 7 - line 126, column 58): " + [v2.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at App.Renderer (line 123, column 1 - line 126, column 58): " + [v.constructor.name]);
    };
  });
  var reflectLineChart = new $$Reflect(function (dictPartial) {
    return function (r) {
      return {
        caption: get_prim(Primitive.toFromString)("caption")(r),
        plots: Data_Functor.map(Data_Functor.functorArray)(from(reflectLinePlot$prime)())(from(reflectArray)()(get("plots")(r)))
      };
    };
  });

  var makeLineChart = function makeLineChart(dictPartial) {
    return function (v) {
      if (v.uv.value1 instanceof Val.Constr && v.uv.value1.value2 instanceof Data_List_Types.Cons && v.uv.value1.value2.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.uv.value1.value1)(DataType.cLineChart)) {
        var v2 = Lattice.expand(Val.valExpandable)(v.uv.value0)(new Val.Constr(false, DataType.cLineChart, new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value)));

        if (v2 instanceof Val.Constr && v2.value2 instanceof Data_List_Types.Cons && v2.value2.value1 instanceof Data_List_Types.Nil) {
          return new LineChartFig(record(from(reflectLineChart)())(new Data_Tuple.Tuple(v2.value2.value0, v.uv.value1.value2.value0)));
        }

        ;
        throw new Error("Failed pattern match at App.Renderer (line 62, column 4 - line 63, column 70): " + [v2.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at App.Renderer (line 60, column 1 - line 60, column 39): " + [v.constructor.name]);
    };
  };

  var energyRecord = function energyRecord(r) {
    return {
      year: get_prim(Primitive.toFromInt)("year")(r),
      country: get_prim(Primitive.toFromString)("country")(r),
      energyType: get_prim(Primitive.toFromString)("energyType")(r),
      output: get_intOrNumber("output")(r)
    };
  };

  var makeEnergyTable = function makeEnergyTable(dictPartial) {
    return function (v) {
      return new EnergyTable({
        title: v.title,
        table: Data_Functor.map(Data_Functor.functorArray)(record(energyRecord))(from(reflectArray)()(new Data_Tuple.Tuple(v.uv.value0, v.uv.value1)))
      });
    };
  };

  exports["matrixFig"] = matrixFig;
  exports["makeEnergyTable"] = makeEnergyTable;
  exports["makeBarChart"] = makeBarChart;
  exports["makeLineChart"] = makeLineChart;
  exports["drawFig"] = $foreign.drawFig;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["DesugarFwd"] = $PS["DesugarFwd"] || {};
  var exports = $PS["DesugarFwd"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var SExpr = $PS["SExpr"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];

  var enil = function enil(α) {
    return new Expr.Constr(α, DataType.cNil, Data_List_Types.Nil.value);
  };

  var totaliseConstrFwd = function totaliseConstrFwd(v) {
    return function (α) {
      var defaultBranch = function defaultBranch(c$prime) {
        return new Data_Tuple.Tuple(c$prime, Data_Function.applyN(function () {
          var $194 = Expr.ElimVar.create(Bindings.varAnon);
          return function ($195) {
            return Expr.ContElim.create($194($195));
          };
        }())(Util.successful(DataType.arity(c$prime)))(new Expr.ContExpr(enil(α))));
      };

      var cκs = Data_Functor.map(Data_List_Types.functorList)(defaultBranch)(Data_List.difference(DataType.eqCtr)(DataType.ctrs(Util.successful(DataType.dataTypeFor(DataType.dataTypeForCtr)(v.value0))))(Data_List.singleton(v.value0)));
      return Data_Map_Internal.fromFoldable(DataType.ordCtr)(Data_List_Types.foldableList)(new Data_List_Types.Cons(new Data_Tuple.Tuple(v.value0, v.value1), cκs));
    };
  };

  var totaliseFwd = function totaliseFwd(v) {
    return function (v1) {
      if (v instanceof Expr.ContHole) {
        return Util.error(Util.absurd);
      }

      ;

      if (v instanceof Expr.ContExpr) {
        return new Expr.ContExpr(v.value0);
      }

      ;

      if (v instanceof Expr.ContElim && v.value0 instanceof Expr.ElimHole) {
        return Util.error(Util.absurd);
      }

      ;

      if (v instanceof Expr.ContElim && v.value0 instanceof Expr.ElimConstr) {
        var v2 = Util.assert(Data_Map_Internal.size(v.value0.value0) === 1)(Util.fromJust(Util.absurd)(Data_List.head(Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList)(v.value0.value0))));
        return new Expr.ContElim(new Expr.ElimConstr(totaliseConstrFwd(new Data_Tuple.Tuple(v2.value0, totaliseFwd(v2.value1)(v1)))(v1)));
      }

      ;

      if (v instanceof Expr.ContElim && v.value0 instanceof Expr.ElimRecord) {
        return new Expr.ContElim(new Expr.ElimRecord(v.value0.value0, totaliseFwd(v.value0.value1)(v1)));
      }

      ;

      if (v instanceof Expr.ContElim && v.value0 instanceof Expr.ElimVar) {
        return new Expr.ContElim(new Expr.ElimVar(v.value0.value0, totaliseFwd(v.value0.value1)(v1)));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 162, column 1 - line 162, column 37): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var elimBool = function elimBool(κ) {
    return function (κ$prime) {
      return new Expr.ElimConstr(Data_Map_Internal.fromFoldable(DataType.ordCtr)(Data_Foldable.foldableArray)([new Data_Tuple.Tuple(DataType.cTrue, κ), new Data_Tuple.Tuple(DataType.cFalse, κ$prime)]));
    };
  };

  var econs = function econs(α) {
    return function (e) {
      return function (e$prime) {
        return new Expr.Constr(α, DataType.cCons, new Data_List_Types.Cons(e, new Data_List_Types.Cons(e$prime, Data_List_Types.Nil.value)));
      };
    };
  };

  var recordPatternFwd = function recordPatternFwd(v) {
    return function (κ) {
      if (v instanceof Util_SnocList.Lin) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(κ);
      }

      ;

      if (v instanceof Util_SnocList.Snoc) {
        return Control_Bind.bind(Data_Either.bindEither)(patternFwd(v.value1.value1)(κ))(function () {
          var $196 = recordPatternFwd(v.value0);
          return function ($197) {
            return $196(Expr.ContElim.create($197));
          };
        }());
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 144, column 1 - line 144, column 67): " + [v.constructor.name, κ.constructor.name]);
    };
  };

  var patternFwd = function patternFwd(v) {
    return function (κ) {
      if (v instanceof SExpr.PVar) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.ElimVar(v.value0, κ));
      }

      ;

      if (v instanceof SExpr.PConstr) {
        return Control_Apply.applySecond(Data_Either.applyEither)(DataType.checkArity(v.value0)(Data_List.length(v.value1)))(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Expr.ElimConstr.create)(Data_Map_Internal.singleton(v.value0)))(argPatternFwd(Data_Functor.map(Data_List_Types.functorList)(Data_Either.Left.create)(v.value1))(κ)));
      }

      ;

      if (v instanceof SExpr.PRecord) {
        return Data_Functor.map(Data_Either.functorEither)(Expr.ElimRecord.create(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v.value0)(Bindings.key)))(recordPatternFwd(v.value0)(κ));
      }

      ;

      if (v instanceof SExpr.PListEmpty) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.ElimConstr(Data_Map_Internal.singleton(DataType.cNil)(κ)));
      }

      ;

      if (v instanceof SExpr.PListNonEmpty) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Expr.ElimConstr.create)(Data_Map_Internal.singleton(DataType.cCons)))(argPatternFwd(new Data_List_Types.Cons(new Data_Either.Left(v.value0), new Data_List_Types.Cons(new Data_Either.Right(v.value1), Data_List_Types.Nil.value)))(κ));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 126, column 1 - line 126, column 52): " + [v.constructor.name, κ.constructor.name]);
    };
  };

  var listRestPatternFwd = function listRestPatternFwd(v) {
    return function (κ) {
      if (v instanceof SExpr.PEnd) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.ElimConstr(Data_Map_Internal.singleton(DataType.cNil)(κ)));
      }

      ;

      if (v instanceof SExpr.PNext) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Expr.ElimConstr.create)(Data_Map_Internal.singleton(DataType.cCons)))(argPatternFwd(new Data_List_Types.Cons(new Data_Either.Left(v.value0), new Data_List_Types.Cons(new Data_Either.Right(v.value1), Data_List_Types.Nil.value)))(κ));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 135, column 1 - line 135, column 68): " + [v.constructor.name, κ.constructor.name]);
    };
  };

  var argPatternFwd = function argPatternFwd(v) {
    return function (κ) {
      if (v instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(κ);
      }

      ;

      if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_Either.Left) {
        return Data_Functor.map(Data_Either.functorEither)(Expr.ContElim.create)(Control_Bind.bind(Data_Either.bindEither)(argPatternFwd(v.value1)(κ))(patternFwd(v.value0.value0)));
      }

      ;

      if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_Either.Right) {
        return Data_Functor.map(Data_Either.functorEither)(Expr.ContElim.create)(Control_Bind.bind(Data_Either.bindEither)(argPatternFwd(v.value1)(κ))(listRestPatternFwd(v.value0.value0)));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 139, column 1 - line 139, column 80): " + [v.constructor.name, κ.constructor.name]);
    };
  };

  var varDefsFwd = function varDefsFwd(v) {
    if (v.value0.value1 instanceof Data_List_Types.Nil) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.Let.create)(varDefFwd(v.value0.value0)))(exprFwd(v.value1));
    }

    ;

    if (v.value0.value1 instanceof Data_List_Types.Cons) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.Let.create)(varDefFwd(v.value0.value0)))(varDefsFwd(new Data_Tuple.Tuple(new Data_NonEmpty.NonEmpty(v.value0.value1.value0, v.value0.value1.value1), v.value1)));
    }

    ;
    throw new Error("Failed pattern match at DesugarFwd (line 54, column 1 - line 54, column 55): " + [v.constructor.name]);
  };

  var varDefFwd = function varDefFwd(v) {
    return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.VarDef.create)(patternFwd(v.value0)(new Expr.ContHole(false))))(exprFwd(v.value1));
  };

  var recDefsFwd = function recDefsFwd(xcs) {
    var xcss = Data_List_NonEmpty.groupBy(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Data_Tuple.fst))(xcs);
    return Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Util_SnocList.fromList)(Data_List_NonEmpty.toList))(Data_Traversable.traverse(Data_List_Types.traversableNonEmptyList)(Data_Either.applicativeEither)(recDefFwd)(xcss));
  };

  var recDefFwd = function recDefFwd(xcs) {
    return Data_Functor.map(Data_Either.functorEither)(function (v) {
      return new Bindings.Bind(Data_Tuple.fst(Data_List_NonEmpty.head(xcs)), v);
    })(branchesFwd_curried(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(xcs)));
  };

  var patternsFwd = function patternsFwd(v) {
    if (v.value0.value1 instanceof Data_List_Types.Nil) {
      return branchFwd_uncurried(v.value0.value0)(v.value1);
    }

    ;

    if (v.value0.value1 instanceof Data_List_Types.Cons) {
      return Control_Bind.bindFlipped(Data_Either.bindEither)(patternFwd(v.value0.value0))(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(Expr.ContExpr.create)(Expr.Lambda.create))(patternsFwd(new Data_Tuple.Tuple(new Data_NonEmpty.NonEmpty(v.value0.value1.value0, v.value0.value1.value1), v.value1))));
    }

    ;
    throw new Error("Failed pattern match at DesugarFwd (line 121, column 1 - line 121, column 65): " + [v.constructor.name]);
  };

  var listRestFwd = function listRestFwd(v) {
    if (v instanceof SExpr.End) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(enil(v.value0));
    }

    ;

    if (v instanceof SExpr.Next) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(econs(v.value0))(exprFwd(v.value1)))(listRestFwd(v.value2));
    }

    ;
    throw new Error("Failed pattern match at DesugarFwd (line 116, column 1 - line 116, column 48): " + [v.constructor.name]);
  };

  var exprFwd = function exprFwd(v) {
    if (v instanceof SExpr.Var) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.Var(v.value0));
    }

    ;

    if (v instanceof SExpr.Op) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.Op(v.value0));
    }

    ;

    if (v instanceof SExpr.Int) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.Int(v.value0, v.value1));
    }

    ;

    if (v instanceof SExpr.Float) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.Float(v.value0, v.value1));
    }

    ;

    if (v instanceof SExpr.Str) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(new Expr.Str(v.value0, v.value1));
    }

    ;

    if (v instanceof SExpr.Constr) {
      return Data_Functor.map(Data_Either.functorEither)(Expr.Constr.create(v.value0)(v.value1))(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(exprFwd)(v.value2));
    }

    ;

    if (v instanceof SExpr.Record) {
      return Data_Functor.map(Data_Either.functorEither)(Expr.Record.create(v.value0))(Data_Traversable.traverse(Util_SnocList.traversableSnocList)(Data_Either.applicativeEither)(Data_Traversable.traverse(Bindings.traversableBind)(Data_Either.applicativeEither)(exprFwd))(v.value1));
    }

    ;

    if (v instanceof SExpr.Matrix) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.flap(Data_Either.functorEither)(Data_Functor.map(Data_Either.functorEither)(Expr.Matrix.create(v.value0))(exprFwd(v.value1)))(new Data_Tuple.Tuple(v.value2.value0, v.value2.value1)))(exprFwd(v.value3));
    }

    ;

    if (v instanceof SExpr.Lambda) {
      return Data_Functor.map(Data_Either.functorEither)(Expr.Lambda.create)(branchesFwd_curried(v.value0));
    }

    ;

    if (v instanceof SExpr.RecordLookup) {
      return Data_Functor.flap(Data_Either.functorEither)(Data_Functor.map(Data_Either.functorEither)(Expr.RecordLookup.create)(exprFwd(v.value0)))(v.value1);
    }

    ;

    if (v instanceof SExpr.App) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create)(exprFwd(v.value0)))(exprFwd(v.value1));
    }

    ;

    if (v instanceof SExpr.BinaryApp) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.Op(v.value1)))(exprFwd(v.value0))))(exprFwd(v.value2));
    }

    ;

    if (v instanceof SExpr.MatchAs) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create)(Data_Functor.map(Data_Either.functorEither)(Expr.Lambda.create)(branchesFwd_uncurried(v.value1))))(exprFwd(v.value0));
    }

    ;

    if (v instanceof SExpr.IfElse) {
      return Control_Bind.bind(Data_Either.bindEither)(exprFwd(v.value1))(function (e2) {
        return Control_Bind.bind(Data_Either.bindEither)(exprFwd(v.value2))(function (e3) {
          return Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.Lambda(elimBool(new Expr.ContExpr(e2))(new Expr.ContExpr(e3)))))(exprFwd(v.value0));
        });
      });
    }

    ;

    if (v instanceof SExpr.ListEmpty) {
      return Control_Applicative.pure(Data_Either.applicativeEither)(enil(v.value0));
    }

    ;

    if (v instanceof SExpr.ListNonEmpty) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(econs(v.value0))(exprFwd(v.value1)))(listRestFwd(v.value2));
    }

    ;

    if (v instanceof SExpr.ListEnum) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create)(Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.Var("enumFromTo")))(exprFwd(v.value0))))(exprFwd(v.value1));
    }

    ;

    if (v instanceof SExpr.ListComp && v.value2.value0 instanceof SExpr.Guard && v.value2.value0.value0 instanceof SExpr.Constr && v.value2.value0.value0.value2 instanceof Data_List_Types.Nil && v.value2.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v.value2.value0.value0.value1)(DataType.cTrue)) {
      return Data_Functor.flap(Data_Either.functorEither)(Data_Functor.map(Data_Either.functorEither)(econs(v.value2.value0.value0.value0))(exprFwd(v.value1)))(enil(v.value2.value0.value0.value0));
    }

    ;

    if (v instanceof SExpr.ListComp && v.value2.value1 instanceof Data_List_Types.Nil) {
      return exprFwd(new SExpr.ListComp(v.value0, v.value1, new Data_NonEmpty.NonEmpty(v.value2.value0, new Data_List_Types.Cons(new SExpr.Guard(new SExpr.Constr(v.value0, DataType.cTrue, Data_List_Types.Nil.value)), Data_List_Types.Nil.value))));
    }

    ;

    if (v instanceof SExpr.ListComp && v.value2.value0 instanceof SExpr.Guard && v.value2.value1 instanceof Data_List_Types.Cons) {
      return Control_Bind.bind(Data_Either.bindEither)(exprFwd(new SExpr.ListComp(v.value0, v.value1, new Data_NonEmpty.NonEmpty(v.value2.value1.value0, v.value2.value1.value1))))(function (e) {
        return Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.Lambda(elimBool(new Expr.ContExpr(e))(new Expr.ContExpr(enil(v.value0))))))(exprFwd(v.value2.value0.value0));
      });
    }

    ;

    if (v instanceof SExpr.ListComp && v.value2.value0 instanceof SExpr.Declaration && v.value2.value1 instanceof Data_List_Types.Cons) {
      return Control_Bind.bind(Data_Either.bindEither)(exprFwd(new SExpr.ListComp(v.value0, v.value1, new Data_NonEmpty.NonEmpty(v.value2.value1.value0, v.value2.value1.value1))))(function (e) {
        return Control_Bind.bind(Data_Either.bindEither)(patternFwd(v.value2.value0.value0.value0)(new Expr.ContExpr(e)))(function (σ) {
          return Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.Lambda(σ)))(exprFwd(v.value2.value0.value0.value1));
        });
      });
    }

    ;

    if (v instanceof SExpr.ListComp && v.value2.value0 instanceof SExpr.Generator && v.value2.value1 instanceof Data_List_Types.Cons) {
      return Control_Bind.bind(Data_Either.bindEither)(exprFwd(new SExpr.ListComp(v.value0, v.value1, new Data_NonEmpty.NonEmpty(v.value2.value1.value0, v.value2.value1.value1))))(function (e) {
        return Control_Bind.bind(Data_Either.bindEither)(patternFwd(v.value2.value0.value0)(new Expr.ContExpr(e)))(function (σ) {
          return Data_Functor.map(Data_Either.functorEither)(Expr.App.create(new Expr.App(new Expr.Var("concatMap"), new Expr.Lambda(Expr.asElim(totaliseFwd(new Expr.ContElim(σ))(v.value0))))))(exprFwd(v.value2.value0.value1));
        });
      });
    }

    ;

    if (v instanceof SExpr.Let) {
      return varDefsFwd(new Data_Tuple.Tuple(v.value0, v.value1));
    }

    ;

    if (v instanceof SExpr.LetRec) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Expr.LetRec.create)(recDefsFwd(v.value0)))(exprFwd(v.value1));
    }

    ;
    throw new Error("Failed pattern match at DesugarFwd (line 71, column 1 - line 71, column 40): " + [v.constructor.name]);
  };

  var branchesFwd_uncurried = function branchesFwd_uncurried(bs) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_List_Types.traversableNonEmptyList)(Data_Either.applicativeEither)(Data_Tuple.uncurry(branchFwd_uncurried))(bs))(function (v) {
      return Data_Foldable.foldM(Data_List_Types.foldableList)(Data_Either.monadEither)(Lattice.maybeJoin(Expr.slicesElim))(v.value0)(v.value1);
    });
  };

  var branchesFwd_curried = function branchesFwd_curried(bs) {
    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_List_Types.traversableNonEmptyList)(Data_Either.applicativeEither)(patternsFwd)(bs))(function (v) {
      return Data_Foldable.foldM(Data_List_Types.foldableList)(Data_Either.monadEither)(Lattice.maybeJoin(Expr.slicesElim))(v.value0)(v.value1);
    });
  };

  var branchFwd_uncurried = function branchFwd_uncurried(p) {
    return function (s) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Expr.ContExpr.create)(exprFwd(s)))(patternFwd(p));
    };
  };

  var moduleFwd = function moduleFwd(v) {
    var varDefOrRecDefsFwd = function varDefOrRecDefsFwd(v1) {
      if (v1 instanceof Data_Either.Left) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Either.Left.create)(varDefFwd(v1.value0));
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Either.Right.create)(recDefsFwd(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 43, column 4 - line 43, column 84): " + [v1.constructor.name]);
    };

    var desugarDefs = function desugarDefs(v1) {
      if (v1 instanceof Data_Either.Left) {
        return Data_Functor.map(Data_List_Types.functorList)(Data_Either.Left.create)(Data_List_NonEmpty.toList(v1.value0));
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return Control_Applicative.pure(Data_List_Types.applicativeList)(new Data_Either.Right(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at DesugarFwd (line 47, column 4 - line 47, column 71): " + [v1.constructor.name]);
    };

    return Data_Functor.map(Data_Either.functorEither)(Expr.Module.create)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)(varDefOrRecDefsFwd)(Control_Bind.join(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(desugarDefs)(v.value0))));
  };

  var desugarModuleFwd = moduleFwd;
  var desugarFwd = exprFwd;
  exports["desugarFwd"] = desugarFwd;
  exports["desugarModuleFwd"] = desugarModuleFwd;
})(PS);

(function (exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Expl"] = $PS["Expl"] || {};
  var exports = $PS["Expl"];
  var Bindings = $PS["Bindings"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Util_SnocList = $PS["Util.SnocList"];

  var MatchVar = function () {
    function MatchVar(value0) {
      this.value0 = value0;
    }

    ;

    MatchVar.create = function (value0) {
      return new MatchVar(value0);
    };

    return MatchVar;
  }();

  var MatchVarAnon = function () {
    function MatchVarAnon(value0) {
      this.value0 = value0;
    }

    ;

    MatchVarAnon.create = function (value0) {
      return new MatchVarAnon(value0);
    };

    return MatchVarAnon;
  }();

  var MatchConstr = function () {
    function MatchConstr(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    MatchConstr.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new MatchConstr(value0, value1, value2);
        };
      };
    };

    return MatchConstr;
  }();

  var MatchRecord = function () {
    function MatchRecord(value0) {
      this.value0 = value0;
    }

    ;

    MatchRecord.create = function (value0) {
      return new MatchRecord(value0);
    };

    return MatchRecord;
  }();

  var Var = function () {
    function Var(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Var.create = function (value0) {
      return function (value1) {
        return new Var(value0, value1);
      };
    };

    return Var;
  }();

  var Op = function () {
    function Op(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Op.create = function (value0) {
      return function (value1) {
        return new Op(value0, value1);
      };
    };

    return Op;
  }();

  var Int = function () {
    function Int(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Int.create = function (value0) {
      return function (value1) {
        return new Int(value0, value1);
      };
    };

    return Int;
  }();

  var Float = function () {
    function Float(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Float.create = function (value0) {
      return function (value1) {
        return new Float(value0, value1);
      };
    };

    return Float;
  }();

  var Str = function () {
    function Str(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Str.create = function (value0) {
      return function (value1) {
        return new Str(value0, value1);
      };
    };

    return Str;
  }();

  var Record = function () {
    function Record(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Record.create = function (value0) {
      return function (value1) {
        return new Record(value0, value1);
      };
    };

    return Record;
  }();

  var Constr = function () {
    function Constr(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Constr.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Constr(value0, value1, value2);
        };
      };
    };

    return Constr;
  }();

  var Matrix = function () {
    function Matrix(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Matrix.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Matrix(value0, value1, value2, value3);
          };
        };
      };
    };

    return Matrix;
  }();

  var Lambda = function () {
    function Lambda(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Lambda.create = function (value0) {
      return function (value1) {
        return new Lambda(value0, value1);
      };
    };

    return Lambda;
  }();

  var RecordLookup = function () {
    function RecordLookup(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    RecordLookup.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new RecordLookup(value0, value1, value2);
        };
      };
    };

    return RecordLookup;
  }();

  var App = function () {
    function App(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    App.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new App(value0, value1, value2, value3);
          };
        };
      };
    };

    return App;
  }();

  var AppPrim = function () {
    function AppPrim(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AppPrim.create = function (value0) {
      return function (value1) {
        return new AppPrim(value0, value1);
      };
    };

    return AppPrim;
  }();

  var AppConstr = function () {
    function AppConstr(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AppConstr.create = function (value0) {
      return function (value1) {
        return new AppConstr(value0, value1);
      };
    };

    return AppConstr;
  }();

  var Let = function () {
    function Let(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Let.create = function (value0) {
      return function (value1) {
        return new Let(value0, value1);
      };
    };

    return Let;
  }();

  var LetRec = function () {
    function LetRec(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    LetRec.create = function (value0) {
      return function (value1) {
        return new LetRec(value0, value1);
      };
    };

    return LetRec;
  }();

  var VarDef = function () {
    function VarDef(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    VarDef.create = function (value0) {
      return function (value1) {
        return new VarDef(value0, value1);
      };
    };

    return VarDef;
  }();

  var vars = function vars(v) {
    if (v instanceof MatchVar) {
      return Data_List.singleton(v.value0);
    }

    ;

    if (v instanceof MatchVarAnon) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof MatchConstr) {
      return Control_Bind.join(Data_List_Types.bindList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(v.value1)(vars));
    }

    ;

    if (v instanceof MatchRecord) {
      var ws = Data_Functor.mapFlipped(Data_List_Types.functorList)(Util_SnocList.toList(Util_SnocList.reverse(v.value0)))(Bindings.val);
      return Control_Bind.join(Data_List_Types.bindList)(Data_Functor.mapFlipped(Data_List_Types.functorList)(ws)(vars));
    }

    ;
    throw new Error("Failed pattern match at Expl (line 40, column 1 - line 40, column 39): " + [v.constructor.name]);
  };

  exports["VarDef"] = VarDef;
  exports["Var"] = Var;
  exports["Op"] = Op;
  exports["Int"] = Int;
  exports["Float"] = Float;
  exports["Str"] = Str;
  exports["Record"] = Record;
  exports["Constr"] = Constr;
  exports["Matrix"] = Matrix;
  exports["Lambda"] = Lambda;
  exports["RecordLookup"] = RecordLookup;
  exports["App"] = App;
  exports["AppPrim"] = AppPrim;
  exports["AppConstr"] = AppConstr;
  exports["Let"] = Let;
  exports["LetRec"] = LetRec;
  exports["MatchVar"] = MatchVar;
  exports["MatchVarAnon"] = MatchVarAnon;
  exports["MatchConstr"] = MatchConstr;
  exports["MatchRecord"] = MatchRecord;
  exports["vars"] = vars;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Eval"] = $PS["Eval"] || {};
  var exports = $PS["Eval"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Expl = $PS["Expl"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Pretty = $PS["Pretty"];
  var Primitive = $PS["Primitive"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];

  var patternMismatch = function patternMismatch(s) {
    return function (s$prime) {
      return "Pattern mismatch: found " + (s + (", expected " + s$prime));
    };
  };

  var matchRecord = function matchRecord(v) {
    return function (v1) {
      return function (v2) {
        if (v instanceof Util_SnocList.Lin && v1 instanceof Util_SnocList.Lin) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v2), Util_SnocList.Lin.value));
        }

        ;

        if (v instanceof Util_SnocList.Snoc && v1 instanceof Util_SnocList.Snoc) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Util.check(v.value1.value0 === v1.value1)(patternMismatch(Data_Show.show(Data_Show.showString)(v.value1.value0))(Data_Show.show(Data_Show.showString)(v1.value1))))(function () {
            return Control_Bind.bind(Data_Either.bindEither)(matchRecord(v.value0)(v1.value0)(v2))(function (v4) {
              return Control_Bind.bind(Data_Either.bindEither)(match(v.value1.value1)(Expr.asElim(v4.value0.value1)))(function (v5) {
                return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v4.value0.value0)(v5.value0.value0), v5.value0.value1), new Util_SnocList.Snoc(v4.value1, new Bindings.Bind(v.value1.value0, v5.value1))));
              });
            });
          });
        }

        ;

        if (v instanceof Util_SnocList.Snoc && v1 instanceof Util_SnocList.Lin) {
          return Util.report(patternMismatch("end of record pattern")(Data_Show.show(Data_Show.showString)(v.value1.value0)));
        }

        ;

        if (v instanceof Util_SnocList.Lin && v1 instanceof Util_SnocList.Snoc) {
          return Util.report(patternMismatch("end of record")(Data_Show.show(Data_Show.showString)(v1.value1)));
        }

        ;
        throw new Error("Failed pattern match at Eval (line 52, column 1 - line 52, column 107): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var matchArgs = function matchArgs(v) {
    return function (v1) {
      return function (v2) {
        if (v1 instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v2), Data_List_Types.Nil.value));
        }

        ;

        if (v1 instanceof Data_List_Types.Cons && v2 instanceof Expr.ContElim) {
          return Control_Bind.bind(Data_Either.bindEither)(match(v1.value0)(v2.value0))(function (v4) {
            return Control_Bind.bind(Data_Either.bindEither)(matchArgs(v)(v1.value1)(v4.value0.value1))(function (v5) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v4.value0.value0)(v5.value0.value0), v5.value0.value1), new Data_List_Types.Cons(v4.value1, v5.value1)));
            });
          });
        }

        ;

        if (v1 instanceof Data_List_Types.Cons && v2 instanceof Expr.ContExpr) {
          return Util.report(Data_Show.show(Data_Show.showInt)(Data_List.length(v1.value1) + 1 | 0) + (" extra argument(s) to " + (Data_Show.show(DataType.showCtr)(v) + "; did you forget parentheses in lambda pattern?")));
        }

        ;
        return Util.error(Util.absurd);
      };
    };
  };

  var match = function match(v) {
    return function (v1) {
      if (v1 instanceof Expr.ElimHole) {
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expr.ElimVar) {
        if (v1.value0 === Bindings.varAnon) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v1.value1), new Expl.MatchVarAnon(v)));
        }

        ;

        if (Data_Boolean.otherwise) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Util_SnocList.Snoc(Util_SnocList.Lin.value, new Bindings.Bind(v1.value0, v)), v1.value1), new Expl.MatchVar(v1.value0)));
        }

        ;
      }

      ;

      if (v instanceof Val.Constr && v1 instanceof Expr.ElimConstr) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Lattice.checkConsistent(DataType.keyCtr)("Pattern mismatch: ")(v.value1)(Data_Map_Internal.keys(v1.value0)))(function () {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note("Incomplete patterns: no branch for " + Data_Show.show(DataType.showCtr)(v.value1))(Data_Map_Internal.lookup(DataType.ordCtr)(v.value1)(v1.value0)))(function (κ) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (ws) {
              return new Expl.MatchConstr(v.value1, ws, Data_List.difference(DataType.eqCtr)(Data_Map_Internal.keys(v1.value0))(Data_List.singleton(v.value1)));
            }))(matchArgs(v.value1)(v.value2)(κ));
          });
        });
      }

      ;

      if (v1 instanceof Expr.ElimConstr) {
        return Control_Bind.bindFlipped(Data_Either.bindEither)(function () {
          var $235 = patternMismatch(Pretty.prettyP(Pretty.prettyVal)(v));
          return function ($236) {
            return Util.report($235($236));
          };
        }())(Data_Functor.map(Data_Either.functorEither)(Data_Show.show(DataType.showDataType))(DataType.dataTypeFor(DataType.dataTypeForListCtr)(Data_Map_Internal.keys(v1.value0))));
      }

      ;

      if (v instanceof Val.Record && v1 instanceof Expr.ElimRecord) {
        return Data_Functor.map(Data_Either.functorEither)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(Expl.MatchRecord.create))(matchRecord(v.value1)(v1.value0)(v1.value1));
      }

      ;

      if (v1 instanceof Expr.ElimRecord) {
        return Util.report(patternMismatch(Pretty.prettyP(Pretty.prettyVal)(v))(Data_Show.show(Util_SnocList.showSnocList(Data_Show.showString))(v1.value0)));
      }

      ;
      throw new Error("Failed pattern match at Eval (line 30, column 1 - line 30, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var closeDefs = function closeDefs(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Util_SnocList.Lin) {
          return Util_SnocList.Lin.value;
        }

        ;

        if (v2 instanceof Util_SnocList.Snoc) {
          return new Util_SnocList.Snoc(closeDefs(v)(v1)(v2.value0), new Bindings.Bind(v2.value1.value0, new Val.Closure(v, v1, false, v2.value1.value1)));
        }

        ;
        throw new Error("Failed pattern match at Eval (line 62, column 1 - line 62, column 54): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var checkArity = function checkArity(c) {
    return function (n) {
      return Control_Bind.bind(Data_Either.bindEither)(DataType.arity(c))(function (n$prime) {
        return Util.check(n$prime >= n)(Data_Show.show(DataType.showCtr)(c) + (" got " + (Data_Show.show(Data_Show.showInt)(n) + (" argument(s), expects at most " + Data_Show.show(Data_Show.showInt)(n$prime)))));
      });
    };
  };

  var $$eval = function $$eval(ρ) {
    return function (v) {
      if (v instanceof Expr.Hole) {
        return Util.error(Util.absurd);
      }

      ;

      if (v instanceof Expr.Var) {
        return Data_Functor.map(Data_Either.functorEither)(function (v1) {
          return new Data_Tuple.Tuple(new Expl.Var(ρ, v.value0), v1);
        })(Bindings.find(v.value0)(ρ));
      }

      ;

      if (v instanceof Expr.Op) {
        return Data_Functor.map(Data_Either.functorEither)(function (v1) {
          return new Data_Tuple.Tuple(new Expl.Op(ρ, v.value0), v1);
        })(Bindings.find(v.value0)(ρ));
      }

      ;

      if (v instanceof Expr.Int) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Int(ρ, v.value1), new Val.Int(false, v.value1)));
      }

      ;

      if (v instanceof Expr.Float) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Float(ρ, v.value1), new Val.Float(false, v.value1)));
      }

      ;

      if (v instanceof Expr.Str) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Str(ρ, v.value1), new Val.Str(false, v.value1)));
      }

      ;

      if (v instanceof Expr.Record) {
        var v1 = Util_SnocList.unzip(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v.value1)(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(Bindings.key)(Bindings.val)));
        return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Traversable.traverse(Util_SnocList.traversableSnocList)(Data_Either.applicativeEither)($$eval(ρ))(v1.value1))(Util_SnocList.unzip))(function (v2) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Record(ρ, Util_SnocList.zipWith(Bindings.Bind.create)(v1.value0)(v2.value0)), new Val.Record(false, Util_SnocList.zipWith(Bindings.Bind.create)(v1.value0)(v2.value1))));
        });
      }

      ;

      if (v instanceof Expr.Constr) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(checkArity(v.value1)(Data_List.length(v.value2)))(function () {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Traversable.traverse(Data_List_Types.traversableList)(Data_Either.applicativeEither)($$eval(ρ))(v.value2))(Data_List.unzip))(function (v1) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Constr(ρ, v.value1, v1.value0), new Val.Constr(false, v.value1, v1.value1)));
          });
        });
      }

      ;

      if (v instanceof Expr.Matrix) {
        var unzipToArray = function () {
          var $237 = Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(Data_Array.fromFoldable(Data_List_Types.foldableList))(Data_Array.fromFoldable(Data_List_Types.foldableList));
          return function ($238) {
            return $237(Data_List.unzip($238));
          };
        }();

        return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value3))(function (v1) {
          if (v1.value1 instanceof Val.Hole) {
            return Util.error(Util.absurd);
          }

          ;

          if (v1.value1 instanceof Val.Constr && v1.value1.value2 instanceof Data_List_Types.Cons && v1.value1.value2.value1 instanceof Data_List_Types.Cons && v1.value1.value2.value1.value1 instanceof Data_List_Types.Nil && Data_Eq.eq(DataType.eqCtr)(v1.value1.value1)(DataType.cPair)) {
            var v3 = new Data_Tuple.Tuple(Primitive.match(Primitive.toFromInt)(v1.value1.value2.value0), Primitive.match(Primitive.toFromInt)(v1.value1.value2.value1.value0));
            return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Util.check(Data_Ord.greaterThanOrEq(Data_Tuple.ordTuple(Data_Ord.ordInt)(Data_Ord.ordInt))(new Data_Tuple.Tuple(v3.value0.value0, v3.value1.value0))(new Data_Tuple.Tuple(1, 1)))("array must be at least (" + (Data_Show.show(Data_Tuple.showTuple(Data_Show.showInt)(Data_Show.showInt))(new Data_Tuple.Tuple(1, 1)) + ("); got (" + (Data_Show.show(Data_Tuple.showTuple(Data_Show.showInt)(Data_Show.showInt))(new Data_Tuple.Tuple(v3.value0.value0, v3.value1.value0)) + ")")))))(function () {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Functor.map(Data_Functor.functorFn)(unzipToArray)(Data_Functor.map(Data_List_Types.functorList)(unzipToArray)))(Data_Traversable.sequence(Data_List_Types.traversableList)(Data_Either.applicativeEither)(Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v3.value0.value0))(function (i) {
                return Data_List.singleton(Data_Traversable.sequence(Data_List_Types.traversableList)(Data_Either.applicativeEither)(Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v3.value1.value0))(function (j) {
                  return Data_List.singleton($$eval(new Util_SnocList.Snoc(new Util_SnocList.Snoc(ρ, new Bindings.Bind(v.value2.value0, new Val.Int(false, i))), new Bindings.Bind(v.value2.value1, new Val.Int(false, j))))(v.value1));
                })));
              }))))(function (v4) {
                return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Matrix(v4.value0, new Data_Tuple.Tuple(v.value2.value0, v.value2.value1), new Data_Tuple.Tuple(v3.value0.value0, v3.value1.value0), v1.value0), new Val.Matrix(false, new Data_Tuple.Tuple(new Data_Tuple.Tuple(v4.value1, new Data_Tuple.Tuple(v3.value0.value0, false)), new Data_Tuple.Tuple(v3.value1.value0, false)))));
              });
            });
          }

          ;
          return Util.report("Array dimensions must be pair of ints; got " + Pretty.prettyP(Pretty.prettyVal)(v1.value1));
        });
      }

      ;

      if (v instanceof Expr.LetRec) {
        var ρ$prime = closeDefs(ρ)(v.value0)(v.value0);
        return Control_Bind.bind(Data_Either.bindEither)($$eval(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(ρ$prime))(v.value1))(function (v1) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.LetRec(v.value0, v1.value0), v1.value1));
        });
      }

      ;

      if (v instanceof Expr.Lambda) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Lambda(ρ, v.value0), new Val.Closure(ρ, Util_SnocList.Lin.value, false, v.value0)));
      }

      ;

      if (v instanceof Expr.RecordLookup) {
        return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value0))(function (v1) {
          if (v1.value1 instanceof Val.Record) {
            return Data_Functor.map(Data_Either.functorEither)(function (v3) {
              return new Data_Tuple.Tuple(new Expl.RecordLookup(v1.value0, Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1.value1)(Bindings.key), v.value1), v3);
            })(Bindings.find(v.value1)(v1.value1.value1));
          }

          ;
          return Util.report("Expected record");
        });
      }

      ;

      if (v instanceof Expr.App) {
        return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value0))(function (v1) {
          return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value1))(function (v3) {
            if (v1.value1 instanceof Val.Hole) {
              return Util.error(Util.absurd);
            }

            ;

            if (v1.value1 instanceof Val.Closure) {
              var ρ2 = closeDefs(v1.value1.value0)(v1.value1.value1)(v1.value1.value1);
              return Control_Bind.bind(Data_Either.bindEither)(match(v3.value1)(v1.value1.value3))(function (v4) {
                return Control_Bind.bind(Data_Either.bindEither)($$eval(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v1.value1.value0)(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ2)(v4.value0.value0)))(Expr.asExpr(v4.value0.value1)))(function (v5) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.App(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1), v1.value1.value3), v3.value0, v4.value1, v5.value0), v5.value1));
                });
              });
            }

            ;

            if (v1.value1 instanceof Val.Primitive) {
              var vs$prime = Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value1.value1)(Data_List.singleton(v3.value1));

              var v$prime$prime = function () {
                var $187 = v1.value1.value0.arity > Data_List.length(vs$prime);

                if ($187) {
                  return new Val.Primitive(v1.value1.value0, vs$prime);
                }

                ;
                return v1.value1.value0.op(vs$prime);
              }();

              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.AppPrim(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1), new Data_Tuple.Tuple(v3.value0, v3.value1)), v$prime$prime));
            }

            ;

            if (v1.value1 instanceof Val.Constr) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(Util.check(Util.successful(DataType.arity(v1.value1.value1)) > Data_List.length(v1.value1.value2))("Too many arguments to " + Data_Show.show(DataType.showCtr)(v1.value1.value1)))(function () {
                return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.AppConstr(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value1), Data_List.length(v1.value1.value2)), v3.value0), new Val.Constr(false, v1.value1.value1, Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value1.value2)(Data_List.singleton(v3.value1)))));
              });
            }

            ;
            return Util.report("Expected closure, operator or unsaturated constructor");
          });
        });
      }

      ;

      if (v instanceof Expr.Let) {
        return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value0.value1))(function (v1) {
          return Control_Bind.bind(Data_Either.bindEither)(match(v1.value1)(v.value0.value0))(function (v3) {
            return Control_Bind.bind(Data_Either.bindEither)($$eval(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(v3.value0.value0))(v.value1))(function (v4) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(new Expl.Let(new Expl.VarDef(v3.value1, v1.value0), v4.value0), v4.value1));
            });
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Eval (line 71, column 1 - line 71, column 52): " + [ρ.constructor.name, v.constructor.name]);
    };
  };

  var eval_module = function eval_module(ρ) {
    return function (v) {
      if (v.value0 instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(ρ);
      }

      ;

      if (v.value0 instanceof Data_List_Types.Cons && v.value0.value0 instanceof Data_Either.Left) {
        return Control_Bind.bind(Data_Either.bindEither)($$eval(ρ)(v.value0.value0.value0.value1))(function (v1) {
          return Control_Bind.bind(Data_Either.bindEither)(match(v1.value1)(v.value0.value0.value0.value0))(function (v3) {
            return eval_module(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(v3.value0.value0))(new Expr.Module(v.value0.value1));
          });
        });
      }

      ;

      if (v.value0 instanceof Data_List_Types.Cons && v.value0.value0 instanceof Data_Either.Right) {
        return eval_module(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(closeDefs(ρ)(v.value0.value0.value0)(v.value0.value0.value0)))(new Expr.Module(v.value0.value1));
      }

      ;
      throw new Error("Failed pattern match at Eval (line 139, column 1 - line 139, column 52): " + [ρ.constructor.name, v.constructor.name]);
    };
  };

  exports["eval"] = $$eval;
  exports["eval_module"] = eval_module;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["EvalBwd"] = $PS["EvalBwd"] || {};
  var exports = $PS["EvalBwd"];
  var Bindings = $PS["Bindings"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Expl = $PS["Expl"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];

  var matchRecordBwd = function matchRecordBwd(v) {
    return function (κ) {
      return function (α) {
        return function (v1) {
          if (v instanceof Util_SnocList.Lin && v1 instanceof Util_SnocList.Lin) {
            return new Data_Tuple.Tuple(Util_SnocList.Lin.value, κ);
          }

          ;

          if (v instanceof Util_SnocList.Snoc && v1 instanceof Util_SnocList.Lin) {
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Util_SnocList.Snoc) {
            var v2 = Util_SnocList.splitAt(Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Expl.vars(v1.value1.value1)))(v);
            var v3 = matchBwd(v2.value1)(κ)(α)(v1.value1.value1);
            return Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(function (v5) {
              return new Util_SnocList.Snoc(v5, new Bindings.Bind(v1.value1.value0, v3.value0));
            })(matchRecordBwd(v2.value0)(new Expr.ContElim(v3.value1))(α)(v1.value0));
          }

          ;
          throw new Error("Failed pattern match at EvalBwd (line 55, column 1 - line 55, column 90): " + [v.constructor.name, κ.constructor.name, α.constructor.name, v1.constructor.name]);
        };
      };
    };
  };

  var matchBwd = function matchBwd(v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          if (v instanceof Util_SnocList.Snoc && v.value0 instanceof Util_SnocList.Lin && v3 instanceof Expl.MatchVar) {
            return new Data_Tuple.Tuple(v.value1.value1, new Expr.ElimVar(Util.mustEq(Data_Eq.eqString)(Data_Show.showString)(v.value1.value0)(v3.value0), v1));
          }

          ;

          if (v instanceof Util_SnocList.Lin && v3 instanceof Expl.MatchVarAnon) {
            return new Data_Tuple.Tuple(Lattice.botOf(Val.boundedSlices)(v3.value0), new Expr.ElimVar(Bindings.varAnon, v1));
          }

          ;

          if (v3 instanceof Expl.MatchConstr) {
            var v4 = matchArgsBwd(v)(v1)(v2)(Util_SnocList.fromList(Data_List.reverse(v3.value1)));
            var cκs = new Data_List_Types.Cons(new Data_Tuple.Tuple(v3.value0, v4.value1), Data_Functor.map(Data_List_Types.functorList)(function (v5) {
              return new Data_Tuple.Tuple(v5, new Expr.ContHole(false));
            })(v3.value2));
            return new Data_Tuple.Tuple(new Val.Constr(v2, v3.value0, v4.value0), new Expr.ElimConstr(Data_Map_Internal.fromFoldable(DataType.ordCtr)(Data_List_Types.foldableList)(cκs)));
          }

          ;

          if (v3 instanceof Expl.MatchRecord) {
            var v4 = matchRecordBwd(v)(v1)(v2)(v3.value0);
            var xs = Data_Functor.map(Util_SnocList.snocListFunctor)(Bindings.key)(v3.value0);
            return new Data_Tuple.Tuple(new Val.Record(v2, v4.value0), new Expr.ElimRecord(xs, v4.value1));
          }

          ;
          return Util.error(Util.absurd);
        };
      };
    };
  };

  var matchArgsBwd = function matchArgsBwd(v) {
    return function (κ) {
      return function (α) {
        return function (v1) {
          if (v instanceof Util_SnocList.Lin && v1 instanceof Util_SnocList.Lin) {
            return new Data_Tuple.Tuple(Data_List_Types.Nil.value, κ);
          }

          ;

          if (v instanceof Util_SnocList.Snoc && v1 instanceof Util_SnocList.Lin) {
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Util_SnocList.Snoc) {
            var v2 = Util_SnocList.splitAt(Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Expl.vars(v1.value1)))(v);
            var v3 = matchBwd(v2.value1)(κ)(α)(v1.value1);
            var v5 = matchArgsBwd(v2.value0)(new Expr.ContElim(v3.value1))(α)(v1.value0);
            return new Data_Tuple.Tuple(Data_Semigroup.append(Data_List_Types.semigroupList)(v5.value0)(new Data_List_Types.Cons(v3.value0, Data_List_Types.Nil.value)), v5.value1);
          }

          ;
          throw new Error("Failed pattern match at EvalBwd (line 46, column 1 - line 46, column 84): " + [v.constructor.name, κ.constructor.name, α.constructor.name, v1.constructor.name]);
        };
      };
    };
  };

  var closeDefsBwd = function closeDefsBwd(ρ) {
    return function (v) {
      var joinDefs = function joinDefs(v1) {
        return function (v2) {
          var v4 = Lattice.expand(Val.valExpandable)(v1.value1)(new Val.Closure(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v2.value0.value0.value1), Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Expr.boundedSlicesElim)))(v2.value0.value1), false, new Expr.ElimHole(false)));

          if (v4 instanceof Val.Closure) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Util_SnocList.Snoc(v2.value0.value0.value0, new Bindings.Bind(v1.value0, v4.value3)), Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v2.value0.value0.value1)(v4.value0)), Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Expr.slicesElim)))(v2.value0.value1)(v4.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v2.value1)(v4.value2));
          }

          ;
          return Util.error(Util.absurd);
        };
      };

      var v1 = Bindings.foldBindings(joinDefs)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v.value0)), Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Expr.boundedSlicesElim)))(v.value1)), false))(ρ);
      return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0.value0.value1, Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Expr.slicesElim)))(v1.value0.value1)(v1.value0.value0.value0)), v1.value1);
    };
  };

  var evalBwd = function evalBwd(v) {
    return function (v1) {
      if (v1 instanceof Expl.Var) {
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Bindings.update(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0))(new Bindings.Bind(v1.value1, v)), new Expr.Var(v1.value1)), false);
      }

      ;

      if (v1 instanceof Expl.Op) {
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Bindings.update(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0))(new Bindings.Bind(v1.value1, v)), new Expr.Op(v1.value1)), false);
      }

      ;

      if (v1 instanceof Expl.Str) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Str(false, v1.value1));

        if (v3 instanceof Val.Str) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), new Expr.Str(v3.value0, v1.value1)), v3.value0);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Int) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Int(false, v1.value1));

        if (v3 instanceof Val.Int) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), new Expr.Int(v3.value0, v1.value1)), v3.value0);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Float) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Float(false, v1.value1));

        if (v3 instanceof Val.Float) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), new Expr.Float(v3.value0, v1.value1)), v3.value0);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Lambda) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Closure(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), Util_SnocList.Lin.value, false, Lattice.botOf(Expr.boundedSlicesElim)(v1.value1)));

        if (v3 instanceof Val.Closure) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0, new Expr.Lambda(v3.value3)), v3.value2);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Record) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Record(false, Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Val.Hole(false))))));

        if (v3 instanceof Val.Record) {
          var v4 = Util_SnocList.unzip(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1)(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(Bindings.key)(Bindings.val)));
          var vs = Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v3.value1)(Bindings.val);

          var evalArg_bwd = function evalArg_bwd(v5) {
            return function (v6) {
              var v7 = evalBwd(v5.value0)(v5.value1);
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v6.value0.value0)(v7.value0.value0), new Util_SnocList.Snoc(v6.value0.value1, v7.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v6.value1)(v7.value1));
            };
          };

          var v5 = Data_Foldable.foldr(Util_SnocList.foldableSnocList)(evalArg_bwd)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), Util_SnocList.Lin.value), v3.value0))(Util_SnocList.zip(vs)(v4.value1));
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v5.value0.value0, new Expr.Record(v3.value0, Util_SnocList.zipWith(Bindings.Bind.create)(v4.value0)(v5.value0.value1))), v5.value1);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Constr) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Constr(false, v1.value1, Data_Functor.mapFlipped(Data_List_Types.functorList)(v1.value2)(Data_Function["const"](new Val.Hole(false)))));

        if (v3 instanceof Val.Constr) {
          var evalArg_bwd = function evalArg_bwd(v4) {
            return function (v5) {
              var v6 = evalBwd(v4.value0)(v4.value1);
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v5.value0.value0)(v6.value0.value0), new Data_List_Types.Cons(v6.value0.value1, v5.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v5.value1)(v6.value1));
            };
          };

          var v4 = Data_Foldable.foldr(Data_List_Types.foldableList)(evalArg_bwd)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0), Data_List_Types.Nil.value), v3.value0))(Data_List.zip(v3.value2)(v1.value2));
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v4.value0.value0, new Expr.Constr(v3.value0, v1.value1, v4.value0.value1)), v4.value1);
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Matrix) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Matrix(false, Val.holeMatrix(v1.value2.value0)(v1.value2.value1)));

        if (v3 instanceof Val.Matrix) {
          var v4 = Util.nonEmpty(Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v1.value2.value0))(function (i) {
            return Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v1.value2.value1))(function (j) {
              return Data_List.singleton(new Data_Tuple.Tuple(i, j));
            });
          }));

          var evalBwd_elem = function evalBwd_elem(v5) {
            var v6 = evalBwd(Util.unsafeIndex(Util.unsafeIndex(v3.value1.value0.value0)(v5.value0 - 1 | 0))(v5.value1 - 1 | 0))(Util.unsafeIndex(Util.unsafeIndex(v1.value0)(v5.value0 - 1 | 0))(v5.value1 - 1 | 0));

            if (v6.value0.value0 instanceof Util_SnocList.Snoc && v6.value0.value0.value0 instanceof Util_SnocList.Snoc) {
              var v7 = new Data_Tuple.Tuple(Lattice.expand(Val.valExpandable)(v6.value0.value0.value0.value1.value1)(new Val.Int(false, v5.value0)), Lattice.expand(Val.valExpandable)(v6.value0.value0.value1.value1)(new Val.Int(false, v5.value1)));

              if (v7.value0 instanceof Val.Int && v7.value1 instanceof Val.Int) {
                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v6.value0.value0.value0.value0, v6.value0.value1), v6.value1), v7.value0.value0), v7.value1.value0);
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          };

          var v5 = Data_NonEmpty.foldl1(Data_List_Types.foldableList)(function (v6) {
            return function (v7) {
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v6.value0.value0.value0.value0)(v7.value0.value0.value0.value0), Lattice.join(Expr.joinSemilatticeExpr)(v6.value0.value0.value0.value1)(v7.value0.value0.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v6.value0.value0.value1)(v7.value0.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v6.value0.value1)(v7.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v6.value1)(v7.value1));
            };
          })(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_List_Types.functorList))(evalBwd_elem)(v4));
          var v6 = evalBwd(new Val.Constr(false, DataType.cPair, new Data_List_Types.Cons(new Val.Int(Lattice.join(Lattice.joinSemilatticeBoolean)(v5.value0.value1)(v3.value1.value0.value1.value1), v1.value2.value0), new Data_List_Types.Cons(new Val.Int(Lattice.join(Lattice.joinSemilatticeBoolean)(v5.value1)(v3.value1.value1.value1), v1.value2.value1), Data_List_Types.Nil.value))))(v1.value3);
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v5.value0.value0.value0.value0)(v6.value0.value0), new Expr.Matrix(v3.value0, v5.value0.value0.value0.value1, new Data_Tuple.Tuple(v1.value1.value0, v1.value1.value1), v6.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(Lattice.join(Lattice.joinSemilatticeBoolean)(v3.value0)(v5.value0.value0.value1))(v6.value1));
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.RecordLookup) {
        var v$prime = new Val.Record(false, Bindings.update(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1)(function (v3) {
          return new Bindings.Bind(v3, new Val.Hole(false));
        }))(new Bindings.Bind(v1.value2, v)));
        var v3 = evalBwd(v$prime)(v1.value0);
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v3.value0.value0, new Expr.RecordLookup(v3.value0.value1, v1.value2)), v3.value1);
      }

      ;

      if (v1 instanceof Expl.App) {
        var v3 = evalBwd(v)(v1.value3);
        var v4 = Util_SnocList.splitAt(Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Expl.vars(v1.value2)))(v3.value0.value0);
        var v5 = matchBwd(v4.value1)(new Expr.ContExpr(v3.value0.value1))(v3.value1)(v1.value2);
        var v6 = Util_SnocList.splitAt(Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(v1.value0.value0.value1))(v4.value0);
        var v7 = evalBwd(v5.value0)(v1.value1);
        var v8 = closeDefsBwd(v6.value1)(new Data_Tuple.Tuple(v6.value0, v1.value0.value0.value1));
        var v9 = evalBwd(new Val.Closure(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v6.value0)(v8.value0.value0), v8.value0.value1, Lattice.join(Lattice.joinSemilatticeBoolean)(v3.value1)(v8.value1), v5.value1))(v1.value0.value0.value0.value0);
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v7.value0.value0)(v9.value0.value0), new Expr.App(v9.value0.value1, v7.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v7.value1)(v9.value1));
      }

      ;

      if (v1 instanceof Expl.AppPrim) {
        var vs$prime = Data_Semigroup.append(Data_List_Types.semigroupList)(v1.value0.value1)(Data_List.singleton(v1.value1.value1));
        var v3 = Util.fromJust(Util.absurd)(Data_List.unsnoc(function () {
          var $351 = v1.value0.value0.value1.arity > Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(vs$prime);

          if ($351) {
            var v4 = Lattice.expand(Val.valExpandable)(v)(new Val.Primitive(v1.value0.value0.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Function["const"](new Val.Hole(false)))(vs$prime)));

            if (v4 instanceof Val.Primitive) {
              return v4.value1;
            }

            ;
            return Util.error(Util.absurd);
          }

          ;
          return v1.value0.value0.value1.op_bwd(new Data_Tuple.Tuple(v, v1.value0.value0.value1.op(vs$prime)))(vs$prime);
        }()));
        var v4 = evalBwd(new Val.Primitive(v1.value0.value0.value1, v3.init))(v1.value0.value0.value0);
        var v5 = evalBwd(v3.last)(v1.value1.value0);
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v4.value0.value0)(v5.value0.value0), new Expr.App(v4.value0.value1, v5.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v4.value1)(v5.value1));
      }

      ;

      if (v1 instanceof Expl.AppConstr) {
        var v3 = Lattice.expand(Val.valExpandable)(v)(new Val.Constr(false, v1.value0.value0.value1, Util.replicate(v1.value0.value1 + 1 | 0)(new Val.Hole(false))));

        if (v3 instanceof Val.Constr) {
          var v4 = Util.fromJust(Util.absurd)(Data_List.unsnoc(v3.value2));
          var v5 = evalBwd(new Val.Constr(v3.value0, v1.value0.value0.value1, v4.init))(v1.value0.value0.value0);
          var v6 = evalBwd(v4.last)(v1.value1);
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v5.value0.value0)(v6.value0.value0), new Expr.App(v5.value0.value1, v6.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v5.value1)(v6.value1));
        }

        ;
        return Util.error(Util.absurd);
      }

      ;

      if (v1 instanceof Expl.Let) {
        var v3 = evalBwd(v)(v1.value1);
        var v4 = Util_SnocList.splitAt(Data_Foldable.length(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Expl.vars(v1.value0.value0)))(v3.value0.value0);
        var v5 = matchBwd(v4.value1)(new Expr.ContHole(false))(v3.value1)(v1.value0.value0);
        var v6 = evalBwd(v5.value0)(v1.value0.value1);
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v4.value0)(v6.value0.value0), new Expr.Let(new Expr.VarDef(v5.value1, v6.value0.value1), v3.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v6.value1)(v3.value1));
      }

      ;

      if (v1 instanceof Expl.LetRec) {
        var v3 = evalBwd(v)(v1.value1);
        var v4 = Util_SnocList.splitAt(Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(v1.value0))(v3.value0.value0);
        var v5 = closeDefsBwd(v4.value1)(new Data_Tuple.Tuple(v4.value0, v1.value0));
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Lattice.join(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(v4.value0)(v5.value0.value0), new Expr.LetRec(v5.value0.value1, v3.value0.value1)), Lattice.join(Lattice.joinSemilatticeBoolean)(v3.value1)(v5.value1));
      }

      ;
      throw new Error("Failed pattern match at EvalBwd (line 63, column 1 - line 63, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  exports["evalBwd"] = evalBwd;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["EvalFwd"] = $PS["EvalFwd"] || {};
  var exports = $PS["EvalFwd"];
  var Bindings = $PS["Bindings"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Expl = $PS["Expl"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Primitive = $PS["Primitive"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];

  var matchRecordFwd = function matchRecordFwd(v) {
    return function (v1) {
      return function (v2) {
        if (v instanceof Util_SnocList.Lin && v2 instanceof Util_SnocList.Lin) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v1), true);
        }

        ;

        if (v instanceof Util_SnocList.Snoc && v2 instanceof Util_SnocList.Snoc && v.value1.value0 === v2.value1.value0) {
          var v4 = matchRecordFwd(v.value0)(v1)(v2.value0);
          return Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(function (v5) {
            return Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v4.value0.value0)(v5);
          }))(function (v5) {
            return Lattice.meet(v5)(v4.value1);
          })(matchFwd(v.value1.value1)(Expr.asElim(v4.value0.value1))(v2.value1.value1));
        }

        ;
        return Util.error(Util.absurd);
      };
    };
  };

  var matchFwd = function matchFwd(v) {
    return function (σ) {
      return function (v1) {
        var v2 = v;

        if (v1 instanceof Expl.MatchVar) {
          var v3 = Lattice.expand(Expr.elimExpandable)(σ)(new Expr.ElimVar(v1.value0, new Expr.ContHole(false)));

          if (v3 instanceof Expr.ElimVar) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Util_SnocList.Snoc(Util_SnocList.Lin.value, new Bindings.Bind(v1.value0, v2)), v3.value1), true);
          }

          ;
          return Util.error(Util.absurd);
        }

        ;

        if (v1 instanceof Expl.MatchVarAnon) {
          var v2 = Lattice.expand(Expr.elimExpandable)(σ)(new Expr.ElimVar(Bindings.varAnon, new Expr.ContHole(false)));

          if (v2 instanceof Expr.ElimVar) {
            return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v2.value1), true);
          }

          ;
          return Util.error(Util.absurd);
        }

        ;

        if (v1 instanceof Expl.MatchConstr) {
          var v3 = new Data_Tuple.Tuple(Lattice.expand(Val.valExpandable)(v)(new Val.Constr(false, v1.value0, Data_Functor.map(Data_List_Types.functorList)(Data_Function["const"](new Val.Hole(false)))(v1.value1))), Lattice.expand(Expr.elimExpandable)(σ)(new Expr.ElimConstr(Data_Map_Internal.fromFoldable(DataType.ordCtr)(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function (v4) {
            return new Data_Tuple.Tuple(v4, new Expr.ContHole(false));
          })(new Data_List_Types.Cons(v1.value0, v1.value2))))));

          if (v3.value0 instanceof Val.Constr && v3.value1 instanceof Expr.ElimConstr) {
            return Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v4) {
              return Lattice.meet(v4)(v3.value0.value0);
            })(matchArgsFwd(v3.value0.value2)(Util.mustLookup(DataType.ordCtr)(v1.value0)(v3.value1.value0))(v1.value1));
          }

          ;
          return Util.error(Util.absurd);
        }

        ;

        if (v1 instanceof Expl.MatchRecord) {
          var xs = Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value0)(Bindings.key);
          var v3 = new Data_Tuple.Tuple(Lattice.expand(Val.valExpandable)(v)(new Val.Record(false, Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Val.Hole(false))))(v1.value0))), Lattice.expand(Expr.elimExpandable)(σ)(new Expr.ElimRecord(xs, new Expr.ContHole(false))));

          if (v3.value0 instanceof Val.Record && v3.value1 instanceof Expr.ElimRecord) {
            return Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v4) {
              return Lattice.meet(v4)(v3.value0.value0);
            })(matchRecordFwd(v3.value0.value1)(v3.value1.value1)(v1.value0));
          }

          ;
          return Util.error(Util.absurd);
        }

        ;
        throw new Error("Failed pattern match at EvalFwd (line 23, column 1 - line 23, column 61): " + [v.constructor.name, σ.constructor.name, v1.constructor.name]);
      };
    };
  };

  var matchArgsFwd = function matchArgsFwd(v) {
    return function (v1) {
      return function (v2) {
        if (v instanceof Data_List_Types.Nil && v2 instanceof Data_List_Types.Nil) {
          return new Data_Tuple.Tuple(new Data_Tuple.Tuple(Util_SnocList.Lin.value, v1), true);
        }

        ;

        if (v instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons) {
          var v4 = matchFwd(v.value0)(Expr.asElim(v1))(v2.value0);
          return Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(function (v5) {
            return Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v4.value0.value0)(v5);
          }))(function (v5) {
            return Lattice.meet(v5)(v4.value1);
          })(matchArgsFwd(v.value1)(v4.value0.value1)(v2.value1));
        }

        ;
        return Util.error(Util.absurd);
      };
    };
  };

  var closeDefsFwd = function closeDefsFwd(v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          if (v3 instanceof Util_SnocList.Lin) {
            return Util_SnocList.Lin.value;
          }

          ;

          if (v3 instanceof Util_SnocList.Snoc) {
            return new Util_SnocList.Snoc(closeDefsFwd(v)(v1)(v2)(v3.value0), new Bindings.Bind(v3.value1.value0, new Val.Closure(v, v1, v2, v3.value1.value1)));
          }

          ;
          throw new Error("Failed pattern match at EvalFwd (line 60, column 1 - line 60, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name, v3.constructor.name]);
        };
      };
    };
  };

  var evalFwd = function evalFwd(ρ) {
    return function (e) {
      return function (v) {
        return function (v1) {
          if (v1 instanceof Expl.Var) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Var(v1.value1));

            if (v2 instanceof Expr.Var) {
              return Util.successful(Bindings.find(v1.value1)(ρ));
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Op) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Op(v1.value1));

            if (v2 instanceof Expr.Op) {
              return Util.successful(Bindings.find(v1.value1)(ρ));
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Int) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Int(false, v1.value1));

            if (v2 instanceof Expr.Int) {
              return new Val.Int(Lattice.meet(v2.value0)(v), v1.value1);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Float) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Float(false, v1.value1));

            if (v2 instanceof Expr.Float) {
              return new Val.Float(Lattice.meet(v2.value0)(v), v1.value1);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Str) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Str(false, v1.value1));

            if (v2 instanceof Expr.Str) {
              return new Val.Str(Lattice.meet(v2.value0)(v), v1.value1);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Record) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Record(false, Data_Functor.map(Util_SnocList.snocListFunctor)(Data_Functor.map(Bindings.functorBind)(Data_Function["const"](new Expr.Hole(false))))(v1.value1)));

            if (v2 instanceof Expr.Record) {
              var v3 = Util_SnocList.unzip(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1)(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(Bindings.key)(Bindings.val)));
              var es = Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v2.value1)(Bindings.val);
              var vs = Data_Functor.map(Util_SnocList.snocListFunctor)(function (v4) {
                return evalFwd(ρ)(v4.value0)(v)(v4.value1);
              })(Util_SnocList.zip(es)(v3.value1));
              return new Val.Record(Lattice.meet(v2.value0)(v), Util_SnocList.zipWith(Bindings.Bind.create)(v3.value0)(vs));
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Constr) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Constr(false, v1.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Function["const"](new Expr.Hole(false)))(v1.value2)));

            if (v2 instanceof Expr.Constr) {
              return new Val.Constr(Lattice.meet(v2.value0)(v), v1.value1, Data_Functor.map(Data_List_Types.functorList)(function (v3) {
                return evalFwd(ρ)(v3.value0)(v)(v3.value1);
              })(Data_List.zip(v2.value2)(v1.value2)));
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Matrix) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Matrix(false, new Expr.Hole(false), new Data_Tuple.Tuple(v1.value1.value0, v1.value1.value1), new Expr.Hole(false)));

            if (v2 instanceof Expr.Matrix) {
              var v3 = Lattice.expand(Val.valExpandable)(evalFwd(ρ)(v2.value3)(v)(v1.value3))(new Val.Constr(false, DataType.cPair, new Data_List_Types.Cons(new Val.Hole(false), new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value))));

              if (v3 instanceof Val.Constr && v3.value2 instanceof Data_List_Types.Cons && v3.value2.value1 instanceof Data_List_Types.Cons && v3.value2.value1.value1 instanceof Data_List_Types.Nil) {
                var v4 = new Data_Tuple.Tuple(Primitive.match_fwd(Primitive.toFromInt)(new Data_Tuple.Tuple(v3.value2.value0, new Val.Int(false, v1.value2.value0))), Primitive.match_fwd(Primitive.toFromInt)(new Data_Tuple.Tuple(v3.value2.value1.value0, new Val.Int(false, v1.value2.value1))));
                var vss = Util.assert(v4.value0.value0 === v1.value2.value0 && v4.value1.value0 === v1.value2.value1)(Data_Array.fromFoldable(Data_List_Types.foldableList)(Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v1.value2.value0))(function (i) {
                  return Data_List.singleton(Data_Array.fromFoldable(Data_List_Types.foldableList)(Control_Bind.bind(Data_List_Types.bindList)(Data_List.range(1)(v1.value2.value1))(function (j) {
                    return Data_List.singleton(evalFwd(new Util_SnocList.Snoc(new Util_SnocList.Snoc(ρ, new Bindings.Bind(v1.value1.value0, new Val.Int(v4.value0.value1, i))), new Bindings.Bind(v1.value1.value1, new Val.Int(v4.value1.value1, j))))(v2.value1)(v)(Util.unsafeIndex(Util.unsafeIndex(v1.value0)(i - 1 | 0))(j - 1 | 0)));
                  })));
                })));
                return new Val.Matrix(Lattice.meet(v2.value0)(v), new Data_Tuple.Tuple(new Data_Tuple.Tuple(vss, new Data_Tuple.Tuple(v1.value2.value0, v4.value0.value1)), new Data_Tuple.Tuple(v1.value2.value1, v4.value1.value1)));
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.LetRec) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.LetRec(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Expr.boundedSlicesElim)))(v1.value0), new Expr.Hole(false)));

            if (v2 instanceof Expr.LetRec) {
              var ρ$prime = closeDefsFwd(ρ)(v2.value0)(v)(v2.value0);
              return evalFwd(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(ρ$prime))(v2.value1)(v)(v1.value1);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Lambda) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Lambda(new Expr.ElimHole(false)));

            if (v2 instanceof Expr.Lambda) {
              return new Val.Closure(ρ, Util_SnocList.Lin.value, v, v2.value0);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.RecordLookup) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.RecordLookup(new Expr.Hole(false), v1.value2));

            if (v2 instanceof Expr.RecordLookup) {
              var v3 = Lattice.expand(Val.valExpandable)(evalFwd(ρ)(v2.value0)(v)(v1.value0))(new Val.Record(false, Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v1.value1)(function (v4) {
                return new Bindings.Bind(v4, new Val.Hole(false));
              })));

              if (v3 instanceof Val.Record) {
                return Util.assert(Data_Eq.eq(Util_SnocList.eqSnocList(Data_Eq.eqString))(Data_Functor.mapFlipped(Util_SnocList.snocListFunctor)(v3.value1)(Bindings.key))(v1.value1))(Util.successful(Bindings.find(v1.value2)(v3.value1)));
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.App) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.App(new Expr.Hole(false), new Expr.Hole(false)));

            if (v2 instanceof Expr.App) {
              var v3 = Lattice.expand(Val.valExpandable)(evalFwd(ρ)(v2.value0)(v)(v1.value0.value0.value0.value0))(new Val.Closure(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.value0.value0.value0.value1), Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Expr.boundedSlicesElim)))(v1.value0.value0.value1), false, new Expr.ElimHole(false)));

              if (v3 instanceof Val.Closure) {
                var ρ2 = closeDefsFwd(v3.value0)(v3.value1)(v3.value2)(v3.value1);
                var v4 = evalFwd(ρ)(v2.value1)(v)(v1.value1);
                var v5 = matchFwd(v4)(v3.value3)(v1.value2);
                return evalFwd(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v3.value0)(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ2)(v5.value0.value0)))(Expr.asExpr(v5.value0.value1))(Lattice.meet(v3.value2)(v5.value1))(v1.value3);
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.AppPrim) {
            var v3 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.App(new Expr.Hole(false), new Expr.Hole(false)));

            if (v3 instanceof Expr.App) {
              var v4 = Lattice.expand(Val.valExpandable)(evalFwd(ρ)(v3.value0)(v)(v1.value0.value0.value0))(new Val.Primitive(v1.value0.value0.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Function["const"](new Val.Hole(false)))(v1.value0.value1)));

              if (v4 instanceof Val.Primitive) {
                var v2$prime = evalFwd(ρ)(v3.value1)(v)(v1.value1.value0);
                var vs$prime$prime = Data_Semigroup.append(Data_List_Types.semigroupList)(Data_List.zip(v4.value1)(v1.value0.value1))(Data_List.singleton(new Data_Tuple.Tuple(v2$prime, v1.value1.value1)));
                var $238 = v1.value0.value0.value1.arity > Data_List.length(vs$prime$prime);

                if ($238) {
                  return new Val.Primitive(v1.value0.value0.value1, Data_Functor.map(Data_List_Types.functorList)(Data_Tuple.fst)(vs$prime$prime));
                }

                ;
                return v1.value0.value0.value1.op_fwd(vs$prime$prime);
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.AppConstr) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.App(new Expr.Hole(false), new Expr.Hole(false)));

            if (v2 instanceof Expr.App) {
              var v3 = Lattice.expand(Val.valExpandable)(evalFwd(ρ)(v2.value0)(v)(v1.value0.value0.value0))(new Val.Constr(false, v1.value0.value0.value1, Util.replicate(v1.value0.value1)(new Val.Hole(false))));

              if (v3 instanceof Val.Constr) {
                var v4 = evalFwd(ρ)(v2.value1)(v)(v1.value1);
                return new Val.Constr(Lattice.meet(v)(v3.value0), v1.value0.value0.value1, Data_Semigroup.append(Data_List_Types.semigroupList)(v3.value2)(Data_List.singleton(v4)));
              }

              ;
              return Util.error(Util.absurd);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;

          if (v1 instanceof Expl.Let) {
            var v2 = Lattice.expand(Expr.exprExpandable)(e)(new Expr.Let(new Expr.VarDef(new Expr.ElimHole(false), new Expr.Hole(false)), new Expr.Hole(false)));

            if (v2 instanceof Expr.Let) {
              var v3 = evalFwd(ρ)(v2.value0.value1)(v)(v1.value0.value1);
              var v4 = matchFwd(v3)(v2.value0.value0)(v1.value0.value0);
              return evalFwd(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(ρ)(v4.value0.value0))(v2.value1)(v4.value1)(v1.value1);
            }

            ;
            return Util.error(Util.absurd);
          }

          ;
          throw new Error("Failed pattern match at EvalFwd (line 64, column 1 - line 64, column 51): " + [ρ.constructor.name, e.constructor.name, v.constructor.name, v1.constructor.name]);
        };
      };
    };
  };

  exports["evalFwd"] = evalFwd;
})(PS);

(function (exports) {
  "use strict"; // Alias require to prevent webpack or browserify from actually requiring.

  var req = typeof module === "undefined" ? undefined : module.require;
  var util = req === undefined ? undefined : req("util");

  exports.trace = function () {
    return function (x) {
      return function (k) {
        // node only recurses two levels into an object before printing
        // "[object]" for further objects when using console.log()
        if (util !== undefined) {
          console.log(util.inspect(x, {
            depth: null,
            colors: true
          }));
        } else {
          console.log(x);
        }

        return k({});
      };
    };
  };
})(PS["Debug.Trace"] = PS["Debug.Trace"] || {});

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Debug.Trace"] = $PS["Debug.Trace"] || {};
  var exports = $PS["Debug.Trace"];
  var $foreign = $PS["Debug.Trace"];
  exports["trace"] = $foreign.trace;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Primitive.Defs"] = $PS["Primitive.Defs"] || {};
  var exports = $PS["Primitive.Defs"];
  var Bindings = $PS["Bindings"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ring = $PS["Data.Ring"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var Debug_Trace = $PS["Debug.Trace"];
  var $$Math = $PS["Math"];
  var Primitive = $PS["Primitive"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];
  var times = Primitive.union(Primitive.asIntIntOrNumber)(Primitive.asNumberIntOrNumber)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Semiring.mul(Data_Semiring.semiringInt))(Data_Semiring.mul(Data_Semiring.semiringNumber));
  var rem = Data_Int.rem;
  var quot = Data_Int.quot;
  var pow = Primitive.union(Primitive.asNumberIntOrNumber)(Primitive.asNumberIntOrNumber)(Primitive.asIntNumber)(Primitive.asIntNumber)(function (x) {
    return function (y) {
      return $$Math.pow(Data_Int.toNumber(x))(Data_Int.toNumber(y));
    };
  })($$Math.pow);
  var plus = Primitive.union(Primitive.asIntIntOrNumber)(Primitive.asNumberIntOrNumber)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Semiring.add(Data_Semiring.semiringInt))(Data_Semiring.add(Data_Semiring.semiringNumber));
  var numToStr = Primitive.union1(Data_Show.show(Data_Show.showInt))(Data_Show.show(Data_Show.showNumber));
  var notEquals = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Eq.notEq(Data_Eq.eqInt))(Data_Eq.notEq(Data_Eq.eqNumber)))(Data_Eq.notEq(Data_Eq.eqString));
  var mod = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);
  var minus = Primitive.union(Primitive.asIntIntOrNumber)(Primitive.asNumberIntOrNumber)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Ring.sub(Data_Ring.ringInt))(Data_Ring.sub(Data_Ring.ringNumber));

  var matrixLookup = function () {
    var fwd = function fwd(v) {
      return function (v1) {
        return Util.unsafeIndex(Util.unsafeIndex(v.value0.value0)(v1.value0.value0 - 1 | 0))(v1.value1.value0 - 1 | 0);
      };
    };

    var bwd = function bwd(v) {
      return function (v1) {
        return new Data_Tuple.Tuple(Val.insertMatrix(v1.value1.value0.value0)(v1.value1.value1.value0)(v)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0.value0.value0, new Data_Tuple.Tuple(v1.value0.value0.value1.value0, false)), new Data_Tuple.Tuple(v1.value0.value1.value0, false))), new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value1.value0.value0, false), new Data_Tuple.Tuple(v1.value1.value1.value0, false)));
      };
    };

    return {
      fwd: fwd,
      bwd: bwd
    };
  }();

  var log = Primitive.union1(function ($49) {
    return $$Math.log(Data_Int.toNumber($49));
  })($$Math.log);
  var lessThanEquals = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Ord.lessThanOrEq(Data_Ord.ordInt))(Data_Ord.lessThanOrEq(Data_Ord.ordNumber)))(Data_Ord.lessThanOrEq(Data_Ord.ordString));
  var lessThan = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Ord.lessThan(Data_Ord.ordInt))(Data_Ord.lessThan(Data_Ord.ordNumber)))(Data_Ord.lessThan(Data_Ord.ordString));
  var greaterThanEquals = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Ord.greaterThanOrEq(Data_Ord.ordInt))(Data_Ord.greaterThanOrEq(Data_Ord.ordNumber)))(Data_Ord.greaterThanOrEq(Data_Ord.ordString));
  var greaterThan = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Ord.greaterThan(Data_Ord.ordInt))(Data_Ord.greaterThan(Data_Ord.ordNumber)))(Data_Ord.greaterThan(Data_Ord.ordString));
  var error_ = Util.error;
  var equals = Primitive.unionStr(Primitive.asBooleanBoolean)(Primitive.asIntOrNumberString)(Primitive.union(Primitive.asBooleanBoolean)(Primitive.asBooleanBoolean)(Primitive.asIntNumber)(Primitive.asIntNumber)(Data_Eq.eq(Data_Eq.eqInt))(Data_Eq.eq(Data_Eq.eqNumber)))(Data_Eq.eq(Data_Eq.eqString));
  var divide = Primitive.union(Primitive.asNumberIntOrNumber)(Primitive.asNumberIntOrNumber)(Primitive.asIntNumber)(Primitive.asIntNumber)(function (x) {
    return function (y) {
      return Data_Int.toNumber(x) / Data_Int.toNumber(y);
    };
  })(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingNumber));
  var div = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);

  var dims = function () {
    var fwd = function fwd(v) {
      return new Data_Tuple.Tuple(v.value0.value1, v.value1);
    };

    var bwd = function bwd(v) {
      return function (v1) {
        return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0.value0, v.value0), v.value1);
      };
    };

    return {
      fwd: fwd,
      bwd: bwd
    };
  }();

  var debugLog = function debugLog(x) {
    return Debug_Trace.trace()(x)(Data_Function["const"](x));
  };

  var concat = Data_Semigroup.append(Data_Semigroup.semigroupString);
  var primitives = Data_Foldable.foldl(Data_Foldable.foldableArray)(Util_SnocList.Snoc.create)(Util_SnocList.Lin.value)([new Bindings.Bind(":", new Val.Constr(false, DataType.cCons, Data_List_Types.Nil.value)), new Bindings.Bind("+", Primitive.binary(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.withInverse2(plus))), new Bindings.Bind("-", Primitive.binary(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.withInverse2(minus))), new Bindings.Bind("*", Primitive.binaryZero(Primitive.isZeroEither(Primitive.isZeroInt)(Primitive.isZeroNumber))(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.withInverse2(times))), new Bindings.Bind("**", Primitive.binaryZero(Primitive.isZeroEither(Primitive.isZeroInt)(Primitive.isZeroNumber))(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.withInverse2(pow))), new Bindings.Bind("/", Primitive.binaryZero(Primitive.isZeroEither(Primitive.isZeroInt)(Primitive.isZeroNumber))(Primitive.toFromIntOrNumber)(Primitive.toFromIntOrNumber)(Primitive.withInverse2(divide))), new Bindings.Bind("==", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(equals))), new Bindings.Bind("/=", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(notEquals))), new Bindings.Bind("<", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(lessThan))), new Bindings.Bind(">", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(greaterThan))), new Bindings.Bind("<=", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(lessThanEquals))), new Bindings.Bind(">=", Primitive.binary(Primitive.toFromIntOrNumberOrString)(Primitive.toFromIntOrNumberOrString)(Primitive.toFromBoolean)(Primitive.withInverse2(greaterThanEquals))), new Bindings.Bind("++", Primitive.binary(Primitive.toFromString)(Primitive.toFromString)(Primitive.toFromString)(Primitive.withInverse2(concat))), new Bindings.Bind("!", Primitive.binary(Primitive.toFromMatrixRep)(Primitive.toFromIntAndInt)(Primitive.toFromVal)(matrixLookup)), new Bindings.Bind("div", Primitive.binaryZero(Primitive.isZeroInt)(Primitive.toFromInt)(Primitive.toFromInt)(Primitive.withInverse2(div))), new Bindings.Bind("mod", Primitive.binaryZero(Primitive.isZeroInt)(Primitive.toFromInt)(Primitive.toFromInt)(Primitive.withInverse2(mod))), new Bindings.Bind("quot", Primitive.binaryZero(Primitive.isZeroInt)(Primitive.toFromInt)(Primitive.toFromInt)(Primitive.withInverse2(quot))), new Bindings.Bind("rem", Primitive.binaryZero(Primitive.isZeroInt)(Primitive.toFromInt)(Primitive.toFromInt)(Primitive.withInverse2(rem))), new Bindings.Bind("ceiling", Primitive.unary(Primitive.toFromNumber)(Primitive.toFromInt)(Primitive.withInverse1(Data_Int.ceil))), new Bindings.Bind("debugLog", Primitive.unary(Primitive.toFromVal)(Primitive.toFromVal)(Primitive.withInverse1(debugLog))), new Bindings.Bind("dims", Primitive.unary(Primitive.toFromMatrixRep)(Primitive.toFromIntAndInt)(dims)), new Bindings.Bind("error", Primitive.unary(Primitive.toFromString)(Primitive.toFromVal)(Primitive.withInverse1(error_))), new Bindings.Bind("floor", Primitive.unary(Primitive.toFromNumber)(Primitive.toFromInt)(Primitive.withInverse1(Data_Int.floor))), new Bindings.Bind("log", Primitive.unary(Primitive.toFromIntOrNumber)(Primitive.toFromNumber)(Primitive.withInverse1(log))), new Bindings.Bind("numToStr", Primitive.unary(Primitive.toFromIntOrNumber)(Primitive.toFromString)(Primitive.withInverse1(numToStr)))]);
  exports["primitives"] = primitives;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Module"] = $PS["Module"] || {};
  var exports = $PS["Module"];
  var Affjax = $PS["Affjax"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DesugarFwd = $PS["DesugarFwd"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Eval = $PS["Eval"];
  var Parse = $PS["Parse"];
  var Primitive_Defs = $PS["Primitive.Defs"];
  var Text_Parsing_Parser = $PS["Text.Parsing.Parser"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var semigroupFile = Data_Semigroup.semigroupString;
  var resourceServerUrl = ".";

  var parse = function parse(src) {
    var $13 = Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Data_Show.show(Text_Parsing_Parser.showParseError))(Control_Category.identity(Control_Category.categoryFn));
    var $14 = Text_Parsing_Parser.runParser(src);
    return function ($15) {
      return $13($14($15));
    };
  };

  var loadFile = function loadFile(v) {
    return function (v1) {
      var url = resourceServerUrl + ("/" + (v + ("/" + (v1 + ".fld"))));
      return Control_Bind.bind(Effect_Aff.bindAff)(Affjax.request({
        method: new Data_Either.Left(Data_HTTP_Method.GET.value),
        url: url,
        headers: Affjax.defaultRequest.headers,
        content: Affjax.defaultRequest.content,
        username: Affjax.defaultRequest.username,
        password: Affjax.defaultRequest.password,
        withCredentials: Affjax.defaultRequest.withCredentials,
        responseFormat: Affjax_ResponseFormat.string
      }))(function (result) {
        if (result instanceof Data_Either.Left) {
          return Util.error(Affjax.printError(result.value0));
        }

        ;

        if (result instanceof Data_Either.Right) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(result.value0.body);
        }

        ;
        throw new Error("Failed pattern match at Module (line 39, column 4 - line 41, column 43): " + [result.constructor.name]);
      });
    };
  };

  var loadModule = function loadModule(file) {
    return function (ρ) {
      return Control_Bind.bind(Effect_Aff.bindAff)(loadFile("fluid/lib")(file))(function (src) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Util.successful(Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(parse(src)(Parse.module_))(DesugarFwd.desugarModuleFwd))(Eval.eval_module(ρ))));
      });
    };
  };

  var parseProgram = function parseProgram(folder) {
    return function (file) {
      return Data_Functor.mapFlipped(Effect_Aff.functorAff)(loadFile(folder)(file))(function () {
        var $16 = Data_Function.flip(parse)(Parse.program);
        return function ($17) {
          return Util.successful($16($17));
        };
      }());
    };
  };

  var open = parseProgram("fluid/example");
  var defaultImports = Control_Bind.bind(Effect_Aff.bindAff)(Control_Bind.bind(Effect_Aff.bindAff)(loadModule("prelude")(Primitive_Defs.primitives))(loadModule("graphics")))(loadModule("convolution"));

  var openDatasetAs = function openDatasetAs(file) {
    return function (x) {
      return Control_Bind.bind(Effect_Aff.bindAff)(parseProgram("fluid")(file))(function (s) {
        return Control_Bind.bind(Effect_Aff.bindAff)(defaultImports)(function (ρ) {
          var v = Util.successful(Control_Bind.bind(Data_Either.bindEither)(DesugarFwd.desugarFwd(s))(Eval["eval"](ρ)));
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Tuple.Tuple(ρ, new Util_SnocList.Snoc(Util_SnocList.Lin.value, new Bindings.Bind(x, v.value1))));
        });
      });
    };
  };

  exports["open"] = open;
  exports["openDatasetAs"] = openDatasetAs;
  exports["semigroupFile"] = semigroupFile;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["Test.Util"] = $PS["Test.Util"] || {};
  var exports = $PS["Test.Util"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var DataType = $PS["DataType"];
  var DesugarFwd = $PS["DesugarFwd"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Eval = $PS["Eval"];
  var EvalBwd = $PS["EvalBwd"];
  var EvalFwd = $PS["EvalFwd"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Module = $PS["Module"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];
  var select_y = new Val.Record(false, new Util_SnocList.Snoc(new Util_SnocList.Snoc(Util_SnocList.Lin.value, new Bindings.Bind("x", new Val.Hole(false))), new Bindings.Bind("y", new Val.Hole(true))));

  var selectNth = function selectNth(v) {
    return function (v1) {
      if (v === 0) {
        return new Val.Constr(false, DataType.cCons, new Data_List_Types.Cons(v1, new Data_List_Types.Cons(new Val.Hole(false), Data_List_Types.Nil.value)));
      }

      ;
      return new Val.Constr(false, DataType.cCons, new Data_List_Types.Cons(new Val.Hole(false), new Data_List_Types.Cons(selectNth(v - 1 | 0)(v1), Data_List_Types.Nil.value)));
    };
  };

  var selectCell = function selectCell(i) {
    return function (j) {
      return function (i$prime) {
        return function (j$prime) {
          return new Val.Matrix(false, Val.insertMatrix(i)(j)(new Val.Hole(true))(Val.holeMatrix(i$prime)(j$prime)));
        };
      };
    };
  };

  var selectBarChart_data = function selectBarChart_data(v) {
    return new Val.Constr(false, DataType.cBarChart, new Data_List_Types.Cons(new Val.Record(false, new Util_SnocList.Snoc(new Util_SnocList.Snoc(Util_SnocList.Lin.value, new Bindings.Bind("caption", new Val.Hole(false))), new Bindings.Bind("data", v))), Data_List_Types.Nil.value));
  };

  var doLink = function doLink(v) {
    var v1 = new Data_Tuple.Tuple(Data_Semigroup.append(Module.semigroupFile)("linking/")(v.file1), Data_Semigroup.append(Module.semigroupFile)("linking/")(v.file2));
    return Control_Bind.bind(Effect_Aff.bindAff)(Module.openDatasetAs(Data_Semigroup.append(Module.semigroupFile)("example/")(Data_Semigroup.append(Module.semigroupFile)("linking/")(v.dataFile)))(v.dataVar))(function (v2) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Module.open(v1.value0))(function (s1) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Module.open(v1.value1))(function (s2) {
          var e2 = Util.successful(DesugarFwd.desugarFwd(s2));
          var e1 = Util.successful(DesugarFwd.desugarFwd(s1));
          var v3 = Util.successful(Eval["eval"](Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v2.value0)(v2.value1))(e1));
          var v4 = Util.successful(Eval["eval"](Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v2.value0)(v2.value1))(e2));
          var v5 = EvalBwd.evalBwd(v.v1_sel)(v3.value0);
          var v6 = Util_SnocList.splitAt(1)(v5.value0.value0);
          var v$prime = Util.successful(Bindings.find(v.dataVar)(v6.value1));
          var v7 = Util.successful(Bindings.find(v.dataVar)(v2.value1));
          return Control_Applicative.pure(Effect_Aff.applicativeAff)({
            v1: v3.value1,
            v2: new Data_Tuple.Tuple(Lattice.neg(Val.joinSemilatticeVal)(EvalFwd.evalFwd(Lattice.neg(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v2.value0))(v6.value1)))(Data_Functor.map(Expr.functorExpr)(Data_Function["const"](true))(e2))(true)(v4.value0)), v4.value1),
            data_sel: new Data_Tuple.Tuple(v$prime, v7)
          });
        });
      });
    });
  };

  exports["doLink"] = doLink;
  exports["selectCell"] = selectCell;
  exports["selectNth"] = selectNth;
  exports["select_y"] = select_y;
  exports["selectBarChart_data"] = selectBarChart_data;
})(PS);

(function ($PS) {
  // Generated by purs version 0.13.6
  "use strict";

  $PS["App.Demo"] = $PS["App.Demo"] || {};
  var exports = $PS["App.Demo"];
  var App_Renderer = $PS["App.Renderer"];
  var Bindings = $PS["Bindings"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var DesugarFwd = $PS["DesugarFwd"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Eval = $PS["Eval"];
  var EvalBwd = $PS["EvalBwd"];
  var EvalFwd = $PS["EvalFwd"];
  var Expr = $PS["Expr"];
  var Lattice = $PS["Lattice"];
  var Module = $PS["Module"];
  var SExpr = $PS["SExpr"];
  var Test_Util = $PS["Test.Util"];
  var Util = $PS["Util"];
  var Util_SnocList = $PS["Util.SnocList"];
  var Val = $PS["Val"];

  var varFig = function varFig(dictPartial) {
    return function (v) {
      return v.value0.makeFig({
        title: v["value0"]["var"],
        uv: v.value1
      });
    };
  };

  var varFig$prime = function varFig$prime(spec) {
    return function (v) {
      return Control_Bind.bind(Data_Either.bindEither)(Bindings.find(spec["var"])(v.value1))(function (v1) {
        return Control_Bind.bind(Data_Either.bindEither)(Bindings.find(spec["var"])(v.value0))(function (v$prime) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(varFig()(new Data_Tuple.Tuple(spec, new Data_Tuple.Tuple(v$prime, v1))));
        });
      });
    };
  };

  var valFigs = function valFigs(q) {
    return function (v) {
      return function (v1) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(Data_Function.flip(varFig$prime)(new Data_Tuple.Tuple(v1.value0, v1.value1)))(v.vars)))(function (figs) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(figs)([v.o_fig({
            title: "output",
            uv: new Data_Tuple.Tuple(v["o'"], q.o)
          })]));
        });
      };
    };
  };

  var systemCol = "rgb(160,209,255)";

  var splitDefs = function splitDefs(ρ0) {
    return function (s$prime) {
      var unpack = function unpack(dictPartial) {
        return function (v) {
          if (v instanceof SExpr.LetRec) {
            return new Data_Tuple.Tuple(new Data_Either.Right(v.value0), v.value1);
          }

          ;

          if (v instanceof SExpr.Let) {
            return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), v.value1);
          }

          ;
          throw new Error("Failed pattern match at App.Demo (line 49, column 10 - line 49, column 81): " + [v.constructor.name]);
        };
      };

      return function (dictPartial) {
        var v = unpack()(s$prime);
        return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(DesugarFwd.desugarModuleFwd(new SExpr.Module(Data_List.singleton(v.value0))))(Eval.eval_module(ρ0)))(function (ρ0ρ) {
          var v1 = Util_SnocList.splitAt(Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(ρ0ρ) - Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(ρ0) | 0)(ρ0ρ);
          return Control_Applicative.pure(Data_Either.applicativeEither)({
            ρ: v1.value1,
            s: v.value1
          });
        });
      }();
    };
  };

  var selectOnly = function selectOnly(xv) {
    return function (ρ) {
      return Bindings.update(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(ρ))(xv);
    };
  };

  var linkFig = function linkFig(divId) {
    return function (config) {
      return function (o1_fig) {
        return function (o2_fig) {
          return function (data_fig) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Test_Util.doLink(config))(function (link) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                divId: divId,
                subfigs: [o1_fig({
                  title: "primary view",
                  uv: new Data_Tuple.Tuple(config.v1_sel, link.v1)
                }), o2_fig({
                  title: "linked view",
                  uv: link.v2
                }), data_fig({
                  title: "common data",
                  uv: link.data_sel
                })]
              });
            });
          };
        };
      };
    };
  };

  var fig = function fig(divId) {
    return function (v) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Module.openDatasetAs("example/linking/renewables")("data"))(function (v1) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(function () {
          var $110 = splitDefs(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v1.value0)(v1.value1));
          return function ($111) {
            return Util.successful($110($111));
          };
        }())(Module.open(v.file)))(function (v2) {
          var v3 = Util.successful(v.makeSubfigs({
            ρ0: v1.value0,
            ρ: Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v1.value1)(v2.ρ),
            s: v2.s
          }));
          return Control_Applicative.pure(Effect_Aff.applicativeAff)({
            divId: divId,
            subfigs: v3.value1
          });
        });
      });
    };
  };

  var evalExample = function evalExample(v) {
    return Control_Bind.bind(Data_Either.bindEither)(DesugarFwd.desugarFwd(v.s))(function (e) {
      var ρ0ρ = Data_Semigroup.append(Util_SnocList.semigroupSnocList)(v.ρ0)(v.ρ);
      return Control_Bind.bind(Data_Either.bindEither)(Eval["eval"](ρ0ρ)(e))(function (v1) {
        return Control_Applicative.pure(Data_Either.applicativeEither)({
          e: e,
          ρ0ρ: ρ0ρ,
          t: v1.value0,
          o: v1.value1
        });
      });
    });
  };

  var neededBy = function neededBy(v) {
    return function (v1) {
      return Control_Bind.bind(Data_Either.bindEither)(evalExample({
        ρ0: v1.ρ0,
        ρ: v1.ρ,
        s: v1.s
      }))(function (q) {
        var o$prime = Lattice.neg(Val.joinSemilatticeVal)(EvalFwd.evalFwd(Lattice.neg(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(Data_Semigroup.append(Util_SnocList.semigroupSnocList)(Lattice.botOf(Lattice.boundedSlicesSnocList(Bindings.boundedSlicesBind(Val.boundedSlices)))(v1.ρ0))(v["\u03C1'"])))(Data_Functor.map(Expr.functorExpr)(Data_Function["const"](true))(q.e))(true)(q.t));
        var ρ0$primeρ$prime$prime = Lattice.neg(Lattice.joinSemilatticeSnocList(Bindings.slicesBind(Val.slicesVal)))(Data_Tuple.fst(Data_Tuple.fst(EvalBwd.evalBwd(Lattice.neg(Val.joinSemilatticeVal)(o$prime))(q.t))));
        var v2 = Util_SnocList.splitAt(Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(v1.ρ))(ρ0$primeρ$prime$prime);
        return Control_Bind.bind(Data_Either.bindEither)(valFigs(q)({
          vars: v.vars,
          o_fig: v.o_fig,
          "o'": o$prime
        })(new Data_Tuple.Tuple(v["\u03C1'"], v1.ρ)))(function (figs) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(Data_Function.flip(varFig$prime)(new Data_Tuple.Tuple(v2.value1, v1.ρ)))(v.vars)))(function (figs$prime) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple(Data_Unit.unit, Data_Semigroup.append(Data_Semigroup.semigroupArray)(figs)(figs$prime)));
          });
        });
      });
    };
  };

  var needs = function needs(spec) {
    return function (v) {
      return Control_Bind.bind(Data_Either.bindEither)(evalExample({
        ρ0: v.ρ0,
        ρ: v.ρ,
        s: v.s
      }))(function (q) {
        var v1 = EvalBwd.evalBwd(spec["o'"])(q.t);
        var v2 = Util_SnocList.splitAt(Data_Foldable.length(Util_SnocList.foldableSnocList)(Data_Semiring.semiringInt)(v.ρ))(v1.value0.value0);
        var o$prime$prime = EvalFwd.evalFwd(v1.value0.value0)(v1.value0.value1)(v1.value1)(q.t);
        return Control_Bind.bind(Data_Either.bindEither)(valFigs(q)(spec)(new Data_Tuple.Tuple(v1.value0.value0, q.ρ0ρ)))(function (figs) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Tuple.Tuple({
            "\u03C10'": v2.value0,
            "\u03C1'": v2.value1
          }, Data_Semigroup.append(Data_Semigroup.semigroupArray)(figs)([spec.o_fig({
            title: "output",
            uv: new Data_Tuple.Tuple(o$prime$prime, q.o)
          })])));
        });
      });
    };
  };

  var linkingFigs = function linkingFigs(dictPartial) {
    var vars = [{
      "var": "data",
      makeFig: App_Renderer.makeEnergyTable()
    }];
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect_Aff.applicativeAff)([linkFig("fig-5")({
      file1: "bar-chart",
      file2: "line-chart",
      dataFile: "renewables",
      dataVar: "data",
      v1_sel: Test_Util.selectBarChart_data(Test_Util.selectNth(1)(Test_Util.select_y))
    })(App_Renderer.makeBarChart())(App_Renderer.makeLineChart())(App_Renderer.makeEnergyTable()), fig("fig-6")({
      file: "linking/bar-chart",
      makeSubfigs: needs({
        vars: vars,
        o_fig: App_Renderer.makeBarChart(),
        "o'": Test_Util.selectBarChart_data(Test_Util.selectNth(0)(Test_Util.select_y))
      })
    })]);
  };

  var convolutionFigs = function convolutionFigs(dictPartial) {
    var v = new Data_Tuple.Tuple("LightGreen", systemCol);
    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect_Aff.applicativeAff)([fig("fig-conv-1")({
      file: "slicing/conv-emboss",
      makeSubfigs: needs({
        vars: [{
          "var": "image",
          makeFig: App_Renderer.matrixFig(v.value1)
        }, {
          "var": "filter",
          makeFig: App_Renderer.matrixFig(v.value1)
        }],
        o_fig: App_Renderer.matrixFig(v.value0),
        "o'": Test_Util.selectCell(2)(2)(5)(5)
      })
    }), fig("fig-conv-2")({
      file: "slicing/conv-emboss",
      makeSubfigs: function makeSubfigs(ex) {
        return neededBy({
          vars: [{
            "var": "image",
            makeFig: App_Renderer.matrixFig(v.value0)
          }, {
            "var": "filter",
            makeFig: App_Renderer.matrixFig(v.value0)
          }],
          o_fig: App_Renderer.matrixFig(systemCol),
          "\u03C1'": selectOnly(new Bindings.Bind("filter", Test_Util.selectCell(1)(2)(3)(3)))(ex.ρ)
        })(ex);
      }
    })]);
  };

  var main = Data_Function.flip(Effect_Aff.runAff_)(Control_Apply.apply(Effect_Aff.applyAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(convolutionFigs()))(linkingFigs()))(function (v) {
    if (v instanceof Data_Either.Left) {
      return Effect_Console.log(Data_Show.show(Effect_Exception.showError)(v.value0));
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(App_Renderer.drawFig)(v.value0));
    }

    ;
    throw new Error("Failed pattern match at App.Demo (line 194, column 4 - line 197, column 38): " + [v.constructor.name]);
  });
  exports["splitDefs"] = splitDefs;
  exports["varFig"] = varFig;
  exports["evalExample"] = evalExample;
  exports["varFig'"] = varFig$prime;
  exports["valFigs"] = valFigs;
  exports["needs"] = needs;
  exports["neededBy"] = neededBy;
  exports["selectOnly"] = selectOnly;
  exports["fig"] = fig;
  exports["linkFig"] = linkFig;
  exports["systemCol"] = systemCol;
  exports["convolutionFigs"] = convolutionFigs;
  exports["linkingFigs"] = linkingFigs;
  exports["main"] = main;
})(PS);

PS["App.Demo"].main();
},{"d3":"BG5c","d3-tip":"TLCm","process":"g5I+"}]},{},["m8nE"], null)
//# sourceMappingURL=/new/app.308a4c70.js.map